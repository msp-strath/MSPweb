BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//MSP//MSP101 v1.0//EN
X-WR-CALNAME: MSP101
X-WR-CALDESC: MSP101 seminar series
BEGIN:VTIMEZONE
TZID:Europe/London
LAST-MODIFIED:20230407T050750Z
TZURL:https://www.tzurl.org/zoneinfo-outlook/Europe/London
X-LIC-LOCATION:Europe/London
BEGIN:DAYLIGHT
TZNAME:BST
TZOFFSETFROM:+0000
TZOFFSETTO:+0100
DTSTART:19700329T010000
RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU
END:DAYLIGHT
BEGIN:STANDARD
TZNAME:GMT
TZOFFSETFROM:+0100
TZOFFSETTO:+0000
DTSTART:19701025T020000
RRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU
END:STANDARD
END:VTIMEZONE
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251215T130000
DTEND;TZID=Europe/London:20251215T140000
LOCATION:TBD
SUMMARY:Duality
DESCRIPTION:Speaker: Ezra Schoen (MSP)\nTitle: Duality\n\n\n
UID:456
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251208T130000
DTEND;TZID=Europe/London:20251208T140000
LOCATION:TBD
SUMMARY:TBD
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: TBD\n\n\n
UID:455
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251202T150000
DTEND;TZID=Europe/London:20251202T160000
LOCATION:TBD
SUMMARY:Dafny
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (MSP)\nTitle: Dafny\n\n\n
UID:454
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251124T130000
DTEND;TZID=Europe/London:20251124T140000
LOCATION:TBD
SUMMARY:Combinatory Logic
DESCRIPTION:Speaker: Vikraman Choudhury (MSP)\nTitle: Combinatory
  Logic\n\n\n
UID:453
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251117T130000
DTEND;TZID=Europe/London:20251117T140000
LOCATION:TBD
SUMMARY:Infinite games
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Infinite games\n\n\n
UID:452
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251110T130000
DTEND;TZID=Europe/London:20251110T140000
LOCATION:TBD
SUMMARY:TBC
DESCRIPTION:Speaker: Philippa Cowderoy \nTitle: TBC\n\n\n
UID:451
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251103T130000
DTEND;TZID=Europe/London:20251103T140000
LOCATION:TBD
SUMMARY:Matrix Type Theory
DESCRIPTION:Speaker: Georgi Nakov (MSP)\nTitle: Matrix Type Theory\n\n\n
UID:450
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251027T130000
DTEND;TZID=Europe/London:20251027T140000
LOCATION:LT310 and Online
SUMMARY:What I did in my PhD
DESCRIPTION:Speaker: Sean Watters (MSP)\nTitle: What I did in my
  PhD\n\nThe modal μ-calculus is a modal logic that type theorists don't
  usually spare much thought for\; it's usually treated classically\, and
  its main application is as a specification language for model checking\,
  where it subsumes weaker but more commonly used logics like LTL\, CTL\,
  and PDL. Meanwhile\, modal logicians study the μ-calculus using very
  "1930s" concepts like explicitly named variables. Most of my efforts
  during my PhD have been spent trying to pull the theory of the modal
  μ-calculus into this century (AKA into Agda) using the tools of type
  theory\, but my real interest is in what we type theorists might glean
  from the exchange. For example\, the modal μ-calculus is a fixpoint
  logic\, with a very mature account of fixpoint alternation - something
  that every proof assistant (to my knowledge) is lacking.\nIn this talk\,
  I'll be using the μ-calculus and some of my recent work on it as a
  motivating example to give a slightly non-standard introduction to some
  important MSP ideas - syntaxes with binding\, and data types as
  fixpoints. I'll cover the least fixpoint (which computer scientists
  love)\, the greatest fixpoint (which we sometimes tolerate)\, and the
  rational fixpoint (which many forget exists\, but plays a key role in my
  work). If time permits\, I'd also like to open the door to the terrifying
  world of arbitrary fixpoint alternation\, and some (very very early)
  ideas for taming it.\n
UID:449
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251020T130000
DTEND;TZID=Europe/London:20251020T140000
LOCATION:LT310 and online
SUMMARY:Capucci Logic
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Capucci Logic\n\nFor some
  applications\, it is useful for the truth of a logical statement to be
  approximate instead of merely true or false. Fuzzy Logics are a famous
  example of such logics\, where statements are valued in the interval
  [0,1]\, where 1 represents "definitely true" and 0 represents "definitely
  false".\n\nIn this talk\, I'll talk about a logic which is valued in
  [0,∞] where implication is interpreted as a ratio between premises and
  conclusion. The main feature of this logic is that we can formulate a
  logic where the "sharp" lattice connectives are replaced by smooth ones.
  Our hope is that this will allow such logics to be used in situations
  where satisfiability can be learned\, or where non-satisfaction is
  treated as a cost during training.\n\n
UID:448
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251013T130000
DTEND;TZID=Europe/London:20251013T140000
LOCATION:LT1414a and Online
SUMMARY:Introduction to Persistent Homology
DESCRIPTION:Speaker: Fiona Blackett (MSP)\nTitle: Introduction to
  Persistent Homology\n\n\n
UID:447
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251010T160000
DTEND;TZID=Europe/London:20251010T170000
LOCATION:LT210 and online
SUMMARY:An introduction to constructive logic
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: An
  introduction to constructive logic\n\nConstructive logic (also known as
  intuitionistic logic) is logic without the Law of the Excluded Middle\,
  which states that P or ¬ P holds for every proposition P. Hilbert
  famously said that denying mathematicians the use of the Law of the
  Excluded Middle is "the same as denying the boxer the use of his fists".
  I will try to convince you that there sometimes is merit in not trying to
  punch people in the head. For example\, constructive logic is the
  internal logic of toposes\, and so a constructive proof can often be
  reinterpreted to show a much stronger result than a classical one\,
  e.g.\, a constructed proof of the existence of a function might in fact
  automatically yield the existence of a <*ontinuous<*or
  <*omputable<*function. Constructive logic often leads to interesting
  mathematics\, as it allows for finer distinctions than classical logic. I
  will also discuss how and when\, despite appearances\, constructive logic
  can be seen as an extension of classical logic\, rather than as a
  restriction.\n
UID:446
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20251003T160000
DTEND;TZID=Europe/London:20251003T170000
LOCATION:LT1414a and Online
SUMMARY:Let's Take Esoteric Programming Languages Seriously
DESCRIPTION:Speaker: Jeremy Singer (University of Glasgow)\nTitle: Let's
  Take Esoteric Programming Languages Seriously\n\nEsoteric programming
  languages are challenging to learn\, but their unusual features and
  constraints may serve to improve programming ability. From languages
  designed to be intentionally obtuse (e.g. INTERCAL) to others targeting
  artistic expression (e.g. Piet) or exploring the nature of computation
  (e.g. Fractan)\, there is rich variety in the realm of esoteric
  programming languages. This essay examines the counterintuitive appeal of
  esoteric languages and seeks to analyse reasons for this popularity. We
  will explore why people are attracted to esoteric languages in terms of
  (a) program comprehension and construction\, as well as (b) language
  design and implementation. Our assertion is that esoteric languages can
  improve general PL awareness\, at the same time as enabling the esoteric
  programmer to impress their peers with obscure knowledge. We will also
  consider pedagogic principles and the use of AI\, in relation to esoteric
  languages. Emerging from the specific discussion\, we identify a general
  set of "good" reasons for designing new programming languages. It may not
  be possible to be exhaustive on this topic\, and it is certain we have
  not achieved that goal here. However we believe our most important
  contribution is to draw attention to the varied and often implicit
  motivations involved in programming language design.\n
UID:445
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250922T130000
DTEND;TZID=Europe/London:20250922T140000
LOCATION:LT1310 and Online
SUMMARY:Leftovers\, Rightunders: Typechecking Thinnings Compositionally
DESCRIPTION:Speaker: Conor Mc Bride (MSP)\nTitle: Leftovers\,
  Rightunders: Typechecking Thinnings Compositionally\n\nIn the interests
  of sharing MSP lore\, I came up with a way to talk about both the "Input
  Subject Output" approach to typechecking and the Category of Thinnings in
  the same talk\, making the latter an interesting example of the
  former.\n\nThe Input Subject Output approach\, like most bidirectional
  approaches to problem decomposition\, tracks whether signals go from
  parent to child or vice versa\, but it also acknowledges a signal has a
  guarantor as well as a sender\, responsible for the meaningfulness of the
  signal. Meanwhile\, thinnings are order-preserving embeddings between
  ordered sequences\, or dually\, selections of elements from sequences
  (their resemblance to binomial coffecients is no accident)\, and are thus
  a fine example of a monoidal category.\n\nI won't assume that any of you
  know know any of this: many of us do\; more of us should. And I'll try to
  tell the story with pictures\, drawn on a whiteboard\, rather than
  jargon.\n\nI often use thinnings to talk about embeddings between
  scopes\, the latter seen as sequences which grow on the right (because of
  prejudices about time). A compositional way to typecheck a thinning is to
  start with the available stuff "over" the thinning\, together with a
  thinning that will start choosing from the newest stuff on the right. If
  all is well\, we shall learn which "leftovers" have not yet been
  considered\, and which "rightunders" have been not only considered but
  also selected. There is a healthy story about both the
  monoidal/parallel/spatial/tensor structure of thinnings and their
  categorical/sequential/temporal/composition structure\, yielding an
  algorithm which never has to guess where to chop sequences in two.\n
UID:444
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250918T160500
DTEND;TZID=Europe/London:20250918T170000
LOCATION:LT1414a and Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:443
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250530T140000
DTEND;TZID=Europe/London:20250530T150000
LOCATION:LT210 and Online
SUMMARY:A formal treatment of bidirectional typing
DESCRIPTION:Speaker: Liang-Ting Chen (Institute of Information Science\,
  Academia Sinica\, Taiwan)\nTitle: A formal treatment of bidirectional
  typing\n\nIn this talks\, we consider a general and formal theory of
  bidirectional typing for simply typed languages: for every signature that
  specifies a mode-correct bidirectionally typed language\, there exists a
  proof-relevant type synthesiser which\, given an input abstract syntax
  tree\, constructs a typing derivation if any\, gives its refutation if
  not\, or reports that the input does not have enough type
  annotations.\nSufficient conditions for deriving a type synthesiser such
  as soundness\, completeness\, and mode-correctness are established for
  all signatures. We propose a preprocessing step\, which helps the user to
  deal with missing type annotations. The entire theory is implemented in
  Agda\, serving as a verified generator of proof-relevant type
  synthesisers as a by-product.\n
UID:442
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250528T110000
DTEND;TZID=Europe/London:20250528T120000
LOCATION:LT1414a
SUMMARY:Event: ADR/Promotion Information Meeting
DESCRIPTION:
UID:441
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250319T160000
DTEND;TZID=Europe/London:20250319T170000
LOCATION:LT210 and Online
SUMMARY:Generalisation in LLMs
DESCRIPTION:Speaker: Petar Veličković (Google DeepMind)\nTitle:
  Generalisation in LLMs\n\nA general talk about our recent works on
  generalisation in llms\n
UID:440
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250422T150000
DTEND;TZID=Europe/London:20250422T160000
LOCATION:LT210 and Online
SUMMARY:A quick & dirty look at at abstract syntax with binders and
  metavariables
DESCRIPTION:Speaker: April Gonçalves (MSP)\nTitle: A quick & dirty look
  at at abstract syntax with binders and metavariables\n\nIn this talk\, I
  will show the (categorical) semantics of Fiore and collaborators’
  “Second-Order Abstract Syntax with Binders” and of McBride and
  collaborators’ “Universe of Syntaxes with Bindings”. I will also compare
  them under multiple criteria (literature\, usage\, meta theory and
  implementation/formalisation)\, with special focus on how both approaches
  handle metavariables by using System F as our main example. (Please
  beware it’s a work in progress\, and many details haven’t been worked out
  yet\n
UID:437
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250407T150000
DTEND;TZID=Europe/London:20250407T160000
LOCATION:LT412 and Online
SUMMARY:Modelling cybersecurity games with compositional game theory
DESCRIPTION:Speaker: Aven Dauz (MSP)\nTitle: Modelling cybersecurity
  games with compositional game theory\n\nCompositional game theory and its
  corresponding Haskell DSL "open-games-engine"\, have been used for
  modelling microeconomic games\, auctions\, and smart contracts. Some
  advantages of this compositional approach are leveraging modularity and
  code-reuse to construct larger games. Incidentally\, game theory has been
  used to model complex attack-defense scenarios in cybersecurity\, with
  the simplest case modelling the strategic interaction between a single
  attacker and defender. Scaling these models to accurately reflect
  real-world attacks and extrapolate data to improve the performance of
  systems remains an active area of research. In this talk I'll present a
  honeypot allocation game and design choices that allow a modeller to
  easily extend the construction to represent defensive strategies such as
  deception.\n
UID:436
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250317T150000
DTEND;TZID=Europe/London:20250317T160000
LOCATION:LT412 and Online
SUMMARY:Additives without Weakening
DESCRIPTION:Speaker: Ross Horne (MSP)\nTitle: Additives without
  Weakening\n\nAs we know\, in linear logic\, conjunction and disjunction
  decompose into separate multiplicative and additive forms. Only additives
  are idempotent in general (A + A --o A). The additives also have some
  properties such as weakening (A & B --o A). By dropping weakening\, the
  additives further decompose into infinitely many "sub-additive"
  operators. I explain how I spotted these sub-additive operators when
  studying nominal quantifiers that can similarly be decomposed into new
  nominal quantifiers. I found these new additives curious since the
  resulting operators have properties that are sound with respect to
  probability distributions\, effectively internalising probability
  distributions in logic. I end by giving a taste of the proof theory of
  the sub-additives. A novelty is that\, due to how sub-additives control
  certain distributivity properties that play an essential role in
  established cut elimination techniques\, a new proof technique must be
  invented.\n\n\n
UID:434
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250310T150000
DTEND;TZID=Europe/London:20250310T160000
LOCATION:LT412 and Online
SUMMARY:A canonical bidirectional typing discipline through polarised
  System L
DESCRIPTION:Speaker: Zanzi Mihejevs (GlAiVe Research)\nTitle: A canonical
  bidirectional typing discipline through polarised System L\n\nWhat is the
  relationship between polarity and bidirectional typing? It has long been
  observed that there is a connection between the two\, but the precise
  relationship has remained unclear. Moreover\, it has been argued that the
  link itself is a red herring\, and that bidirectional typing is better
  explained not by polarity but by chirality - the duality between
  producers and consumers. In this talk we will look at Polarised System
  L\, a type theory that combines both dualities - the positive fragment is
  driven by a cut between a primitive producer and a pattern\, and the
  negative fragment is driven by a cut between a primitive consumer and a
  co-pattern.\n\n Remarkably\, linear System L admits a canonical
  bidirectional typing discipline based on a combination of ideas from both
  standard and co-contextual typing\, giving us a "bi-contextual" typing
  algorithm.\n\n We will see how this lets us equip a type system based on
  full classical linear logic - containing all four connectives and
  derivable implication and co-implication - with a bidirectional
  discipline where all typing annotations are exclusively limited to shifts
  between sythesisable and checkable expressions.\n\n\n
UID:433
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250303T150000
DTEND;TZID=Europe/London:20250303T160000
LOCATION:LT412 and Online
SUMMARY:Representing type theory in type theory
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Representing
  type theory in type theory\n\nIt is often claimed that type theory can
  act as a foundation of mathematics. If that is so\, then type theory
  should in particular be able to reason about type theory itself. Of
  course\, Dr Gödel points out that this cannot work\, in general\, but we
  would expect that type theory could still reason about a slightly weaker
  version of itself. This turns out to be true\, but messy\, because type
  theory is quite complicated as a theory. After heroic attempts by
  Danielsson (2006) and Chapman (2009) to represent type theory internally
  in type theory\, Altenkirch and Kaposi (2016) made a breakthrough in
  using so-called quotient inductive-inductive types to represent the well
  typed terms of type theory\, where quotient constructors are used to
  encode beta and eta laws as equalities in the type. Being able to treat
  such laws as actual equalities is a major improvement\, but quickly leads
  into so-called <"ransport hell<" where explicit transports along
  equalities show up in terms and needs to be reasoned about. I will report
  on some recent work together with Liang-Ting Chen and Tzu-Chun Tsai on
  how one can use experimental (and hopefully future) features of Agda to
  improve on the quotient inductive-inductive representation and remove
  most uses of transport.\n
UID:432
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250224T150000
DTEND;TZID=Europe/London:20250224T160000
LOCATION:LT412 and Online
SUMMARY:Semantic proofs of Cut-elimination for Deep Infererence
DESCRIPTION:Speaker: Robert Atkey (MSP)\nTitle: Semantic proofs of
  Cut-elimination for Deep Infererence\n\nDeep Inference systems are a kind
  of proof calculus that allow inference rules to be applied anywhere in a
  formula. Cut-elimination for these systems is similar to that for Sequent
  calculi: rules that introduce intermediate formulas can be removed from
  proofs. Prior proofs of cut-elimination relied on intricate syntactic
  method. I'll talk about a semantic approach that builds a model of the
  whole calculus from cut-free proofs\, such that every proof constructed
  in this model can be read back as a cut-free proof. This is a similar
  technique to the one used in Normalisation by Evaluation (NbE). The
  technique is very flexible and extends to many extensions of
  Multiplicative Linear Logic\, including BV's self-dual non-commutative
  "before" connective\, additives\, and exponentials. This is joint work
  with Wen Kokke and was published at MFPS last year:
  https://bentnib.org/sem-cut-elim-mfps.html\n\n\n
UID:431
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250217T150000
DTEND;TZID=Europe/London:20250217T160000
LOCATION:LT1414a and Online
SUMMARY:Weakest Precondition of Open Coalgebras
DESCRIPTION:Speaker: Clovis Eberhart (MSP)\nTitle: Weakest Precondition
  of Open Coalgebras\n\nCoalgebras are a categorical framework that have
  proved useful to describe and reason about different types of systems. We
  define open coalgebras\, a compositional framework where coalgebras can
  be composed as string diagrams. We give them a semantics in terms of
  weakest precondition predicate transformers computed as a fixed point and
  link it to previous work on weakest precondition predicate transformers
  by Aguirre\, Katsumara\, and Kura. We give several examples of
  verification problems this semantics can compute\, showing its practical
  usefulness. We give conditions under which this semantics is
  compositional for the string diagram structure of open coalgebras.
  Finally\, we give a syntactic precomputation of open coalgebras that
  removes their internal states while preserving their semantics.\n
UID:430
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250210T150000
DTEND;TZID=Europe/London:20250210T160000
LOCATION:LT209 and Online
SUMMARY:Coequations via proof systems
DESCRIPTION:Speaker: Ezra Schoen (MSP)\nTitle: Coequations via proof
  systems\n\n*What even is a coequation?* While Universal Algebra enjoys a
  set-in-stone consensus on both the correct syntax of equations\, as well
  as what an equation even is\, Universal Coalgebra is in no such position.
  There are many attempts at definitions and syntaxes of coequations\, but
  it is hard to say which one is 'the correct one'.\n\n Rather than sorting
  out this mess\, why not add yet another proposal? If we squint\, we can
  see proof systems for modal logic as coequations. This then leads to some
  fun\, natural questions. Which coequations can be captured by what kind
  of proof systems? If we restrict our attention to a class of 'simple'
  systems\, can we specify "every" coequation?\n\n As this is work in
  progress\, I have a fewer answers than questions. The aim of this talk is
  to introduce coequations in all their colours\, and to get the audience
  to a point where the questions may be appreciated.\n\n\n
UID:429
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250203T150000
DTEND;TZID=Europe/London:20250203T160000
LOCATION:LT209 and Online
SUMMARY:We solved dependent optics!
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: We solved dependent
  optics!\n\nThere are two major generalisations of lenses. First there are
  optics\, which require almost nothing of their base category and give you
  something in return. And then there are dependent lenses (aka container
  morphisms\, aka natural transformations of polynomials)\, which require a
  lot of their base category but give you even more in return. One day
  several years ago I innocently twote the question of how to unify these
  two constructions\, which is motivated for mathematical\, computational
  and sociological reasons. The problem ended up occupying us (joint work
  with Dylan Braithwaite\, Matteo Capucci\, Bruno Gavranović\, Eigil
  Rischel and André Videla) for several years\, and its difficulty became a
  meme.</\n\npwill explain the answer that finally satisfied us. This
  involves first constructing a category of <q"pendent adaptors</"nd then
  freely adjoining a particular family of monoidal costates using a
  technique we call <q"ighted coparametrisation</"hat we reinvented. The
  definition began life as a prototype in Idris using QTT features\, and
  was then translated back into category theory using what might or might
  not be a novel semantics of polymorphic dependent type theory.</\n\n
UID:428
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250127T150000
DTEND;TZID=Europe/London:20250127T160000
LOCATION:LT412 and Online
SUMMARY:Pipelining and dependent types
DESCRIPTION:Speaker: André Videla (MSP)\nTitle: Pipelining and dependent
  types\n\nPipelining is a crude CPU optimisation to speed up execution of
  sequential programs. By allowing the manipulation of types as values\,
  dependent types enable new abstractions to manipulate large-scale of
  software based on sequential computation inspired by CPU pipelining. I
  will show how to define pipelines\, sequential programs that cannot
  easily be parallelised using a list of types as a specification. Given
  this list of type\, the implementation of a pipeline is given by the
  functions between each type. This pipeline abstraction can be generalised
  to categories such that the pipeline is made up of objects and its
  implementation is given by the morphisms between them. This enable the
  use of kleisli morphisms for effectful programs. The pipeline can be
  further abstracted over graded categories enabling automatic composition
  of errors. Finally\, I will show how to use dependent pipelines to allow
  composition of programs with type-dependency. An architecture
  particularly useful for single-pass compilers with well-scoped and
  well-typed implementations.\n
UID:427
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250120T150000
DTEND;TZID=Europe/London:20250120T160000
LOCATION:LT412 and Online
SUMMARY:My Favourite Double Category
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: My Favourite Double
  Category\n\nI'll (re)introduce the "codeBruijn" representation of syntax
  with binding\, in which terms are intrinsically indexed over their
  support (the variables they are involved with) rather than their scope.
  These supports form the objects of a category of order-preserving
  injections ("thinnings" to MSP locals and "my triangle" to Blaise
  Pascal)\, whose dual ("selections") plays a crucial role in managing the
  restrictions of the variable support in specific substructures.
  Meanwhile\, the notion of "simultaneous substitution" tightens to a
  relevant structure where every variable in the source support has an
  image\, and every variable in the target support is used by at least one
  of those images. The action of substitution (which includes substitution
  composition) respects support precisely. It is reliant on the way a
  selection from a substitution's source support variables retains only
  some of their images and is itself relevant only once we have identified
  the corresponding selection from the target support of only those
  variables used in the retained images. We acquire squares with selections
  for vertical edges and relevant substitutions for horizontal edges which
  compose in both dimensions\, forming a double category. (For anyone who
  saw\, or for that matter\, gave Phil Wadler's talk at the last SPLS\,
  codeBruijn shifting happens at the root of a term\, obviating the complex
  relationship between renaming and substitution which happens only because
  de Bruijn shifting happens at the leaves.) (For dependently typed
  programmers\, more generally\, there may be transferable lessons in
  managing coherence.)\n
UID:426
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250117T133000
DTEND;TZID=Europe/London:20250117T143000
LOCATION:LT1414a and Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:425
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20250117T130000
DTEND;TZID=Europe/London:20250117T140000
LOCATION:LT1414a and Online
SUMMARY:Type-Sensitive Algebraic Macros
DESCRIPTION:Speaker: April Gonçalves (MSP)\nTitle: Type-Sensitive
  Algebraic Macros\n\nDespite recent advances made by Idris and Lean
  teams\, metaprogramming in a typed language is still hard\, frustrating
  and error-prone. In this short paper\, we investigate a new view on
  macros via a type-sensitive algebraic theory for typechecker scripting
  for a more principled approach to type-directed macros. We show that our
  theory encodes typechecking and elaboration for STλC\, and from there\,
  we build two other variations\, Bidirectional STλC and Search-based Type
  Inference\, to showcase the versatility of our framework. Our results are
  implemented in Agda.\n
UID:424
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241129T130000
DTEND;TZID=Europe/London:20241129T140000
LOCATION:LT210 and Online
SUMMARY:Data type science: how to reason about classes of data types in
  type theory
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Data type
  science: how to reason about classes of data types in type
  theory\n\nDifferent proof assistants and programming languages have
  different notions of data types. Sometimes this means that we can prove
  more theorem in one system compared to another\, and sometimes it only
  means that one system is more convenient to use. How can we tell the
  difference? I'll give an introduction to how we can represent and reason
  about classes of data types in type theory\, and I'll show some examples
  from the zoo of classes that have been considered.\n
UID:421
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241115T130000
DTEND;TZID=Europe/London:20241115T140000
LOCATION:LT310 and Online
SUMMARY:Representation Matters (Taking Categories Seriously)
DESCRIPTION:Speaker: Jade Master (GLAIVE)\nTitle: Representation Matters
  (Taking Categories Seriously)\n\nWhen we endeavor to build software based
  on category theory\, we often have two categorically equivalent
  structures that represent the same underlying data and the correct choice
  of structure subtly depends on what you would like to do. The first
  generation of categorical programming languages heavily used the monad to
  represent algebraic effects. However\, what if we made a different
  choice? Categorically equivalent to Monads are Lawvere theories\, whose
  presentation as categories allows for many useful constructions which are
  more awkward in the Monad representation. In this talk\, I will imagine
  what a system for algebraic effects based on Lawvere theories might look
  like. This talk will include a lightning introduction to Lawvere theories
  as well as a tour through an idris2 implementation of these ideas which
  still contains too many holes to float.\n
UID:419
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241108T130000
DTEND;TZID=Europe/London:20241108T140000
LOCATION:LT210 and Online
SUMMARY:How to Make Good Choices
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: How to Make Good
  Choices\n\nWhat to do? One way to find out is to explore all the
  consequences of our choices and pick the best one. Or we could assume we
  have a magic device that tells us what the outcome of our choice will
  be\, and to pick the best one straight off. In terms of programming\, the
  former can be modelled using a monad for non-deterministic choices and
  the latter using the Selection monad of Escardo and Oliva. I'll relate
  these two monads via a logical relation\, showing that if we are careful
  to respect abstraction boundaries\, the two are equivalent for closed
  programs. I'll then extend this correspondence to account for different
  kinds of choice-making program and see how we can reconstruct concepts
  like Nash equilibrium. This talk may involve some live coding in Agda.\n
UID:418
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241101T130000
DTEND;TZID=Europe/London:20241101T140000
LOCATION:LT309 and Online
SUMMARY:Partial evaluation
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Partial
  evaluation\n\nPartial evaluation shows up all across PL in compilation
  (optimization)\, meta-theory (normalization)\, and code-generation
  (staging). I will give a gentle introduction to partial evaluation using
  semantic methods\, showing how we can strategically build different
  models to decide different equational theories. This will be an
  Agda-mediated live coding show.\n
UID:417
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241028T140000
DTEND;TZID=Europe/London:20241028T150000
LOCATION:LT310 and Online
SUMMARY:The Madness of the Modal mu-Calculus
DESCRIPTION:Speaker: Sean Watters (MSP)\nTitle: The Madness of the Modal
  mu-Calculus\n\nIn this talk\, I'll give you the "what"\, "why"\, and
  "how" of the mu-calculus - what it is\, why I find it interesting (and
  hopefully why you should too!)\, and how to tame it in Agda. \n\nI'll
  start by introducing and motivating the field of model checking\, before
  quickly diverting to the modal mu-calulus\, a fixpoint modal logic of
  foundational importance in that field. I'll talk about its semantics
  first\, because that's only sensible\, then the rest of the talk will be
  devoted to the weird and wonderful (but mostly weird) syntactic issues
  that arise from this formalism. In particular\, I'll focus on an
  important syntactic construction called "the closure" of a mu-calculus
  formula\, which is not stable under alpha-equivalence\, and whose
  inductive structure is somewhat non-obvious. \n\nIn the second half\,
  we'll code up an implementation of the mu-calculus in Agda\, which will
  also serve as an introduction to well-scoped De Bruijn syntax. I'll work
  towards defining parallel substitution and weakening\, and finish with
  the definition of the closure\, and a (very) brief sketch of its
  correctness proof. The data type of thinnings between natural numbers
  will feature.\n\nIf there's time (which there probably won't be)\, I'll
  discuss an extension of well-scoped De Bruijn syntax that I've been
  calling "sublimely-scoped" syntax\, which is still very WIP.\n
UID:416
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241018T130000
DTEND;TZID=Europe/London:20241018T140000
LOCATION:LT714 and Online
SUMMARY:A Compositional Approach to Verification Models
DESCRIPTION:Speaker: Clovis Eberhart (MSP)\nTitle: A Compositional
  Approach to Verification Models\n\nWe will present a compositional
  approach to graph-like verification models (e.g.\, parity games\, Markov
  decision processes\, or Petri nets) based on "open" structures. Such open
  structures are graphs with potentially dangling edges called "open
  ends"\, and which form interfaces along which open structures can be
  composed. We thus define a syntactic category of interfaces and open
  structures between them. We then define a semantic category representing
  relevant information about the structure (e.g.\, a category of
  probabilistic rewards). Finding an interpretation functor from the
  syntactic category to the semantic one shows that these structures'
  semantics can be computed compositionally. (This is joint work with
  Kazuki Watanabe\, Kazuyuki Asada\, Ichiro Hasuo\, and Serge Lechenne.)\n
UID:415
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241011T130000
DTEND;TZID=Europe/London:20241011T140000
LOCATION:LT714 and Online
SUMMARY:Bidirectional Typing & Session Types\, A Beautiful Friendship?
DESCRIPTION:Speaker: Jan de Muijnck-Huges (MSP)\nTitle: Bidirectional
  Typing & Session Types\, A Beautiful Friendship?\n\nSession Types are a
  neat typing discipline to reason both statically and dynamically about
  program interaction. An interesting question is how best we should check
  communicating programs against a given global type.\n\nBidirectional
  typing is an important technique for programming language design and
  implementation\, enabling us to transform the theory of how we should
  check the type of a term and incorporate the practice of inferring the
  term's type.\n\nThis talk serves as a gentle introduction to
  bidirectional type system design and session types\, and how combining
  the two can help make type checking session typed programs that little
  bit easier.\n
UID:414
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20241004T130000
DTEND;TZID=Europe/London:20241004T140000
LOCATION:LT210 and Online
SUMMARY:Cooking with Proofs
DESCRIPTION:Speaker: André Videla (MSP)\nTitle: Cooking with
  Proofs\n\nThe Curry-Howard correspondence says that types are
  propositions and programs are proofs. But what proof is Super Mario World
  on the SNES? In this introductory presentation we'll explore how the
  Curry-Howard correspondence manifests in different programming
  environments and how to employ it for software development.\n
UID:413
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240927T130000
DTEND;TZID=Europe/London:20240927T140000
LOCATION:LT210 and Online
SUMMARY:Effing W
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Effing W\n\nI shall
  revisit the Hindley-Milner type system for the traditional Core ML (old
  sense) language of variables\, application\, monomorphic abstraction and
  polymorphic definition\, to give a new twist on its implementation. In
  particular\, I shall consider the role that the context plays in the type
  inference process\, and then make it disappear\, replacing
  context-as-data-structure with context-as-control-structure\,
  demonstrating the power of effects and handlers. The extra ingredient
  which gives this new recipe its spice is to index with respect to a
  suitably compositional notion of "progress". I shall make that
  disappear\, too!\n
UID:412
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240920T130000
DTEND;TZID=Europe/London:20240920T140000
LOCATION:LT1310 and Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:411
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240417T130000
DTEND;TZID=Europe/London:20240417T140000
LOCATION:LT11\, boardroom
SUMMARY:Intro to argumentation
DESCRIPTION:Speaker: Dov M. Gabbay (Augustus De Morgan Professor Emeritus
  of Logic\, King's College London)\nTitle: Intro to argumentation\n\nThis
  is a blackboard talk introducing the audience to argumentation.\n
UID:410
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240213T120000
DTEND;TZID=Europe/London:20240213T130000
LOCATION:LT412
SUMMARY:Session types\, Linear Logic and Expressiveness
DESCRIPTION:Speaker: Nobuko Yoshida (Strachey Chair at University of
  Oxford)\nTitle: Session types\, Linear Logic and Expressiveness\n\nI will
  first talk about the origin of session types and its relationship with
  expressiveness.\n\nThe first technical part of this talk will present an
  expressiveness result between Linear Logic-based Session Types and System
  F. The second part gives a summary of recent results on session types\,
  highlighting the expressiveness correspondence between various
  session-based process calculi.\n
UID:409
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240503T150000
DTEND;TZID=Europe/London:20240503T160000
LOCATION:LT209 (TBC)
SUMMARY:Event: Academic Promotion Information Meeting
DESCRIPTION:
UID:408
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240329T150000
DTEND;TZID=Europe/London:20240329T160000
LOCATION:
SUMMARY:Event: No talk this week (Easter Bank Holiday)
DESCRIPTION:
UID:407
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240315T150000
DTEND;TZID=Europe/London:20240315T160000
LOCATION:LT209 and Online
SUMMARY:Can ordinal exponentiation be defined constructively in homotopy
  type theory?
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Can ordinal
  exponentiation be defined constructively in homotopy type theory?\n\nA
  cornerstone of the classical theory of ordinals is its rich theory of
  arithmetic\, extending the arithmetic of natural numbers. While addition
  and multiplication are easily seen to be realized by disjoint union and
  Cartesian product of wellorders respectively\, exponentiation is more
  mysterious. Using classical logic\, it can be defined using a case
  distinction on the exponent\, but constructively\, this can not serve as
  a definitional principle\, but rather as a specification of what
  exponentiation should satisfy. Sierpiński [1958] gives an explicit
  construction for a base with a least element as the set of functions with
  finite support. This construction again relies on classical logic in
  several places\, but working in homotopy type theory\, we have managed to
  to refine the idea in a more intensional manner to define a^b for
  ordinals a of the form a = 1 + a' for some ordinal a'. In a sense\, this
  is the best we can hope for: we can prove that an operation a^b
  satisfying the specification of ordinal exponentiation for all inputs a
  and b is definable if and only if the law of excluded middle
  holds.\n\nThis is joint work with Tom de Jong\, Nicolai Kraus\, and
  Chuangjie Xu.\n
UID:406
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240524T150000
DTEND;TZID=Europe/London:20240524T160000
LOCATION:LT209 and Online
SUMMARY:Propagating Rose Trees with Dependent Types to Grow Shaped ASTs
  Generically
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (MSP)\nTitle: Propagating Rose
  Trees with Dependent Types to Grow Shaped ASTs Generically\n\nDependently
  typed languages support the construction of intrinsically-typed
  (well-scoped) terms\, ensuring that our core language representations are
  correct-by-construction. The datatypes we use to represent Abstract
  Syntax Trees (AST) are not well-typed nor well-scoped\, nor should they
  be. Nonetheless\, ASTs are often represented as a collection of bespoke
  datatypes that capture what it means for an AST to be ‘well-structured’.
  Such artisan crafting of our ASTs comes at the price of generality. We
  must define the same traversals and operations time and time again over
  each AST.<br/\nng inspiration from intrinsically-typed datatypes and
  compact encoding of primitives\, we show how rose trees can have their
  shape dictated by a description contained within a dependent type. We can
  thus\, describe (type) the structure of our ASTs similar to how we
  describe the concrete syntax using eBNF and embed the description inside
  a pre-existing datatype. Through this novel combination\, we now have a
  single generic datatype for ASTs and single operations that act on
  them.\n
UID:405
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240531T150000
DTEND;TZID=Europe/London:20240329T160000
LOCATION:
SUMMARY:Event: No talk this week
DESCRIPTION:
UID:404
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240607T150000
DTEND;TZID=Europe/London:20240607T160000
LOCATION:LT209 and Online
SUMMARY:From Separation Logic to Dependent Parallel Skeletons
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: From Separation Logic
  to Dependent Parallel Skeletons\n\nI will give a high level motivation
  for separation logic and then show how we can (WIP) use these ideas in
  Quantitative Type Theory as implemented in Idris 2 to give a
  correct-by-construction treatment of effectful parallel programming over
  buffers.\n
UID:403
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240517T150000
DTEND;TZID=Europe/London:20240517T160000
LOCATION:LT209 and Online
SUMMARY:What is deep inference?
DESCRIPTION:Speaker: Ross Horne (MSP)\nTitle: What is deep
  inference?\n\nDeep inference is a branch of proof theory where inference
  rules can be applied in any context\, much like in categorical logic.
  What I find fun in this area is that it has been used to define new
  logics for which there exists no sequent calculus nor even a semantics
  (yet). I'll introduce some simple deep inference systems first. Next\,
  I'll point to recent work where we generalise logic beyond formulas to
  graphs.\n
UID:402
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240510T150000
DTEND;TZID=Europe/London:20240510T160000
LOCATION:LT209 and Online
SUMMARY:A Coalgebraic Interpretation of the Lee/Yannakakis Minimisation
  Algorithm
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: A Coalgebraic
  Interpretation of the Lee/Yannakakis Minimisation
  Algorithm\n\nMinimisation of transition systems wrt bisimulation is
  important for the verification of properties of such systems. In my talk
  I will discuss a minimisation algorithm by Lee and Yannakakis\, that
  intertwines minimisation with reachability checking. The algorithm caught
  our eye due to clear similarities with our own variant of Angluin's
  algorithm that allows to learn a minimal\, reachable quotient of a given
  transition system. In the talk I aim to compare Lee/Yannakakis and
  Angluin and will sketch a possible coalgebraic generalisation of the
  Lee/Yannakakis algorithm. This is based on ongoing joint work with Simone
  Barlocco.\n
UID:401
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240426T150000
DTEND;TZID=Europe/London:20240426T160000
LOCATION:LT209 and Online
SUMMARY:Free Relative Monads and Kan Algebras for Type and Scope Safe
  DSLs
DESCRIPTION:Speaker: Zanzi (MSP)\nTitle: Free Relative Monads and Kan
  Algebras for Type and Scope Safe DSLs\n\nWhat are relative monads and why
  are they interesting? Functional programmers are familiar with using
  fixpoints of endofunctors and free monads to model datatype-generic
  evaluators. In this applied talk we will see how free relative monads
  allow us to extend these techniques to the realm of well-scoped and
  well-typed languages with binders. A crucial role will be played by kan
  extensions: in a slogan\, "Left Kan Extensions for Syntax\, Right Kan
  Extensions for Semantics".\n
UID:400
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240412T150000
DTEND;TZID=Europe/London:20240412T160000
LOCATION:LT209 and Online
SUMMARY:Foundational Structures for Communicating Processes
DESCRIPTION:Speaker: Dylan Braithwaite (MSP)\nTitle: Foundational
  Structures for Communicating Processes\n\nIn 2009 Cockett and Pastro
  introduced a model for a typed process calculus in terms of a ‘linear
  actegory’. They note that the sequent rules of their calculus can be
  naturally viewed as living in a ‘poly-actegory’\, a polycategory whose
  terms are additionally indexed by a list of objects of a multicategory\,
  of ‘message types’. Although poly-actegories are mainly used as a tool to
  study the soundness of their language\, they could arguably be taken as
  the foundational concept. <br/> Indeed\nntly Shulman has proposed a
  nearly identical structure under the name ‘LNL-polycategories’. Shulman
  shows that by asking that different collections of universal properties
  be present\, LNL-polycategories may be used as a model for the LNL
  calculus\, CBPV\, and other models of effectful calculi. Inspired by this
  I will survey the universal properties required for implementing the
  basic communication primitives in a process calculus. With this
  framework\, we can compare process models with the structures present in
  linear logic models\, or effectful models\, offering an additional
  perspective into the existing connections between the pi-calculus and
  linear logic or algebraic effects.\n
UID:398
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240405T150000
DTEND;TZID=Europe/London:20240405T160000
LOCATION:LT209 and Online
SUMMARY:I Think Indexed Enriched Categories are Nice.
DESCRIPTION:Speaker: Jade Master (MSP)\nTitle: I Think Indexed Enriched
  Categories are Nice.\n\nFirst proposed by Lawvere in 1973\, indexed
  enriched categories are a very complicated mathematical structure studied
  in only the most privileged ivory towers. In this talk I intend to bring
  them down to earth by exploring their viability as a data structure. I
  will cheat by only considering enrichments where the axioms are satisfied
  trivially. I will explain how these 'trivial' enriched categories are
  nice data structures for holding solutions to algebraic path problems.
  Then I will explain how making them indexed allows us to work with
  distributed\, concurrent\, and compositional algebraic path problems.
  This talk will be in line with the research programme I started to
  develop before I quit and left for industry. Namely\, that indexed
  categories and Grothendieck constructions may be used to develop a
  general theory of compositional computation. This talk will feature
  Idris2 code and categorical terminology side-by-side so that those
  familiar with either language will be able to follow along.\n
UID:397
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240322T150000
DTEND;TZID=Europe/London:20240322T160000
LOCATION:LT209 and Online
SUMMARY:Softmax is Argmax\, and the Logic of the Reals
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: Softmax is Argmax\, and
  the Logic of the Reals\n\nI will report some work in progress on the
  semiotics of softmax. This is an operator used in machine learning (but
  familiar to physicists way before that) to normalize a log-distribution\,
  turning a vector of (thus\, a function valued in) logits (i.e. additive
  reals) into a probability distribution. Its name is due to the fact it
  acts as a 'probabilistic argmax'\, since the modes of a softmax
  distribution reflects the minima (by an accident of duality) of the
  function. I will show an attempt to make this statement precise\, by
  exhibiting the semantics of a 'very linear logic' on the *-autonomous
  quantale of extended multiplicative reals. In this logic\, additive
  connectives are also linear\, but are still in the same algebraic
  relation with the multiplicative ones. I will show how to define
  quantifiers\, and thus softmax. If time permits\, I'll show a
  construction of an enriched equipment of relations in which softmax
  should be characterizable as a Kan lift\, in the same way argmax is
  characterized as a Kan lift in relations.\n
UID:396
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240308T150000
DTEND;TZID=Europe/London:20240308T160000
LOCATION:LT209 and Online
SUMMARY:TBD
DESCRIPTION:Speaker: Paulo Torrens (University of Kent)\nTitle:
  TBD\n\nThe continuation-passing style (CPS) translation employed within
  compilers gives rise to a class of target calculi where direct style
  functions don't exist anymore. While those may be studied using the
  lambda calculus\, this might not be desired if the language should not be
  closed under beta-reduction\, such as in the intermediate representation
  (IR) of Appel's compiler. The purpose of this talk is to introduce
  ongoing work on the metatheory of Thielecke's CPS-calculus\, a small
  theory of continuations based on production IRs\, how it relates to
  actual implementations\, and how this allows us to have a strong
  theoretical background on the study of name-passing IRs in a similar way
  that the lambda calculus works as a theoretical foundation for functional
  programming.\n
UID:395
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240301T150000
DTEND;TZID=Europe/London:20240301T160000
LOCATION:LT209 and Online
SUMMARY:Type-Logical Grammar\, Controlled Substructure\, and Display
  Calculus
DESCRIPTION:Speaker: Wen Kokke (MSP)\nTitle: Type-Logical Grammar\,
  Controlled Substructure\, and Display Calculus\n\n\n
UID:394
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240223T150000
DTEND;TZID=Europe/London:20240223T160000
LOCATION:LT209 and Online
SUMMARY:Containers for compiler architecture
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: Containers for compiler
  architecture\n\nCompiler architecture sucks. It's been left behind by
  years of software engineering development that have been very successful
  in developing software past the command-line age. Today\, applications
  are meant to be responsive\, accessible from a web browser\, enable
  collaboration\, be multi-platform\, include some generative AI. Some of
  those ideas are good\, some are bad\, but most compilers do not include
  any of them. In this presentation\, I aim to showcase how we can revisit
  the classical "compiler as a function" architecture using containers to
  bring the idea of compiler architecture to the XXI century.\n
UID:393
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240216T150000
DTEND;TZID=Europe/London:20240216T160000
LOCATION:LT209 and Online
SUMMARY:Making lenses less pointless
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: Making lenses less
  pointless\n\nThis talk contains two ideas. The first is a small trick for
  programming with lenses in a not-pointfree way\, without using macros or
  other brittle hacks. The key is something I call a "dialectic"\, which is
  a value that carries around a delimited continuation with it. The second
  idea is realising that the central construction of Matteo's "Diegetic
  Open Games" paper amounts to a monad on the category of lenses that
  arises as the Kleisli dual of the linear ! comonad in a Dialectica
  category. By putting these two ideas together we get a shallow DSL for
  open games\, differentiable programming\, and other applications of
  categorical cybernetics. This will be a live coding talk using Haskell\,
  although I think the same ideas should work in any language with first
  class functions.\n
UID:392
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240209T150000
DTEND;TZID=Europe/London:20240209T160000
LOCATION:LT209 and Online
SUMMARY:Stable domain theory\, Program slicing\, and Automatic
  Differentiation
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Stable domain theory\,
  Program slicing\, and Automatic Differentiation\n\nI'll talk about a
  connection I think I've discovered between stable domain theory and
  program slicing by Galois Connections. Stable domain theory considers a
  refinement of continuous functions between domains that captures the
  intuitive idea that a "nice" computable functions that produce values
  must do so by only looking at part of their input\, and that part must be
  uniquely determined. The same idea turns up in Perera et al.'s
  formulation of program slicing as Galois connections. I'll try to connect
  the two via ideas from Automatic Differentiation.\n
UID:391
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240202T110000
DTEND;TZID=Europe/London:20240202T120000
LOCATION:LT401 and Online
SUMMARY:Presheaves on Purpose
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Presheaves on
  Purpose\n\nDependently typed programming languages allow us to define
  indexed families of datatypes\, e.g. <code>Term (n : Nat) : Set</code> as
  the type of lambda-terms with <code>n</code> variables free. As
  declared\, <code>Term</code> is functorial only on the discrete structure
  of <code>Nat</code>\, which is to say that it respects equality and
  nobody will faint with amazement. But by an outrageous coincidence (which
  I learned from Altenkirch\, Hofmann and Streicher)\, such terms can be
  acted on by *thinnings* from <code>n</code> to some larger scope
  <code>m</code>\, allowing us to carry terms under binders. That is\, we
  can demonstrate by honest toil that <code>Term</code> is a functor from
  <code>Thin</code> to <code>Set</code>. I dislike honest toil\, and will
  show you how to design it away in this and similar situations. To that
  end\, I present a universe construction for descriptions of datatypes
  indexed over the objects of some category <code>C</code> which\, by
  construction\, extend to a functors from <code>C</code> to
  <code>Set</code>\, a.k.a. presheaves on <code>Cop</code>.\n
UID:390
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20240126T150000
DTEND;TZID=Europe/London:20240126T160000
LOCATION:LT209 and Online
SUMMARY:Plane Graphs\, (Co-)Operads\, and Pattern Matching
DESCRIPTION:Speaker: Malin Altenmüller (MSP)\nTitle: Plane Graphs\,
  (Co-)Operads\, and Pattern Matching\n\nI will present work on open
  surface-embedded graphs as representations of string diagrams. The key
  feature of these graphs' definition are distinguished boundary vertices
  which represent their (outer and inner) boundaries. These special
  vertices make it possible to define surface-embeddings of graphs using a
  rotation system which specifies an ordering of incident edges at each
  vertex. We can then also express graph rewrite rules by their action on
  boundary vertices. Additionally\, boundary vertices are a convenient
  structure to define planar graphs as operads\, similar to Spivak's Operad
  of Wiring Diagrams [1]. I will explain this construction\, as well as a
  dual "co-operad" version of it\, and finally the operad-cooperad
  interaction which yields a notion of graph pattern matching.\n\n[1]
  https://arxiv.org/abs/1305.0297\n
UID:389
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231204T103000
DTEND;TZID=Europe/London:20231204T170000
LOCATION:University of Strathclyde (MC301)
SUMMARY:Event: CATNIP
DESCRIPTION:The second Categories Network Project (CATNIP) meeting.
UID:388
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231123T150000
DTEND;TZID=Europe/London:20231123T160000
LOCATION:LT210 and Online
SUMMARY:What do bidirected containers (co-)interpret into?
DESCRIPTION:Speaker: Danel Ahman (University of Ljubljana)\nTitle: What
  do bidirected containers (co-)interpret into?\n\nDirected containers are
  a neat specialisation of containers that fully faithfully interpret into
  comonad structures on the polynomial functor interpretation of the
  underlying containers. In terms of shapes and positions\, a directed
  container requires the family of positions to form a certain kind of
  dependently typed monoid acting on the shapes. In terms of data types\,
  directed containers capture structures where every position in a shape
  determines a subshape rooted at that position\, e.g.\, positions in a
  non-empty list determine sublists rooted at those positions.\n\nIn this
  talk I will discuss bidirected containers and what they interpret into.
  Bidirected containers specialise directed containers further by asking
  the positions to form a certain kind of dependently typed group acting on
  the positions. In terms of data types\, this corresponds to every sub
  data structure having a position in it that takes one back to the parent
  data structure\, i.e.\, data types that behave like zippers. I will also
  discuss what we need to seem to ask from comonads to get a similarly
  tight correspondence as we have for directed containers. I will end by
  wondering whether an analogous story also applies to the cointerpretation
  of directed containers as update monads.\n
UID:387
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230929T140000
DTEND;TZID=Europe/London:20230929T150000
LOCATION:LT711 and Online
SUMMARY:An Introduction to Bricks
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: An Introduction to
  Bricks\n\n\n
UID:386
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231207T110000
DTEND;TZID=Europe/London:20231207T120000
LOCATION:LT210 and Online
SUMMARY:LabMate --- your faithful and type-safe Matlab assistant
DESCRIPTION:Speaker: Georgi Nakov (MSP)\nTitle: LabMate --- your faithful
  and type-safe Matlab assistant\n\nCan you write type-safe Matlab code?
  And what can we do to help you write type-safe Matlab?\n\nThis talk is a
  report on our progress on LabMate --- an interactive system designed to
  improve on current best practices of writing Matlab code. Our key
  proposition can be eloquently described as "add types\, all the
  types".\n\nI will give a brief tour of the various features in LabMate
  and the rationale behind including them. We will also recall the basics
  of bidirectional type checking\, what to do to incorporate dimension and
  unit checking\, and how to represent matrices with high degree of
  generality in our type system. Some of the non-trivial challenges with
  Matlab's permissive syntax and elaborating operator overloading will
  become apparent in the process.\n\nThis is joint work with Fred and
  Conor.\n
UID:384
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231201T140000
DTEND;TZID=Europe/London:20231201T150000
LOCATION:LT711 and Online
SUMMARY:MSP 101: Non-standard analysis
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: MSP 101:
  Non-standard analysis\n\nI will give a basic 101-style introduction to
  the first-order logic concept of non-standard models. Intuitively\, a
  non-standard model of say Peano Arithmetic PA is a model which contains
  infinitely large numbers. Yet\, by virtue of being a model of PA\, such a
  model still validates all the axioms of PA\, including the induction
  axiom schema! It is an interesting and beautiful feature/bug of
  first-order classical logic that such models exist.\n
UID:383
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231122T120000
DTEND;TZID=Europe/London:20231122T170000
LOCATION:University of Strathclyde / Online
SUMMARY:Event: SPLS
DESCRIPTION:
UID:381
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231117T140000
DTEND;TZID=Europe/London:20231117T150000
LOCATION:LT210 and Online
SUMMARY:Categorical cybernetics for Markov decision processes
DESCRIPTION:Speaker: Riu Rodríguez Sakamoto (MSP)\nTitle: Categorical
  cybernetics for Markov decision processes\n\nI will introduce two
  ingredients to MSPs 'categorical cybernetics':\n- "open game"-like
  categories for backward-filtering problems\n- semiring valuations to
  formalize softmax as a *preference* relation (generalizing selection
  relations)\n\nThis will allow us to fit Markov decission processes and
  certain estimation problems to the existing framework\, clearing our path
  towards connecting control and estimation problems.\n
UID:380
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231103T140000
DTEND;TZID=Europe/London:20231103T150000
LOCATION:LT210 and Online
SUMMARY:Hopf-Frobenius Algebras
DESCRIPTION:Speaker: Joe Collins (MSP)\nTitle: Hopf-Frobenius
  Algebras\n\nHopf algebras and Frobenius algebras are two fairly common
  algebraic structures. They even look pretty similar if you squint your
  eyes - both consist of a monoid/ comonoid pair\, and some algebraic rule
  that tells you how they interact. There are a few instances where a
  single object in a category has the properties of both a Hopf algebra and
  a Frobenius algebra\, called a Hopf-Frobenius algebra. In particular\, ZX
  calculus\, a way of modelling quantum circuits using symmetric monoidal
  categories\, has this property. Why? And where else does this
  occur?\n\nIn this talk\, I will be talking about what a Hopf-Frobenius
  algebra is and where it comes from.\n
UID:378
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231027T140000
DTEND;TZID=Europe/London:20231027T150000
LOCATION:LT210 and Online
SUMMARY:Category Theory ∩ Deep Learning : Where are we\, and where can we
  go?
DESCRIPTION:Speaker: Bruno Gavranović (MSP)\nTitle: Category Theory ∩
  Deep Learning : Where are we\, and where can we go?\n\nFour years ago I
  embarked on my PhD with the goal of exploring the landscape of category
  theory\, and its application to artificial neural networks.
  Specifically\, I aimed to understand at which level of generality can we
  express components of artificial neural networks\, and still meaningfully
  capture learning.\n\nIn this talk I will give a progress report on this
  goal\, and outline future directions for improvement.\n
UID:377
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231020T140000
DTEND;TZID=Europe/London:20231020T150000
LOCATION:LT210 and Online
SUMMARY:The double category of adjunctions
DESCRIPTION:Speaker: Ezra Schoen (MSP)\nTitle: The double category of
  adjunctions\n\nThere's a particular double category which I've noticed
  floating around for a while. The purpose of this talk is to explicitly
  describe this double category\, play around in it and see if we can
  leverage it to get some `theorems for free'. I'll only be assuming prior
  familiarity with 1-categories\, so it should be of general interest. In
  fact\, part of the purpose behind this talk is demonstrating that even
  for staunch 1-category theorists\, having some higher categories `in the
  back pocket' may help in getting a clear picture of what's `really going
  on'.\n
UID:376
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231013T140000
DTEND;TZID=Europe/London:20231013T150000
LOCATION:LT711 and Online
SUMMARY:(Reflexive) Partial Monoids 101
DESCRIPTION:Speaker: Sean Watters (MSP)\nTitle: (Reflexive) Partial
  Monoids 101\n\nPartial monoids came up in my work recently\, and I found
  them quite interesting. The main goal of this talk is to introduce the
  notion into our local sphere of consciousness. After going over the
  basics I'll focus mostly on reflexive partial monoids\, the suprisingly
  tricky problem of defining exponentiation for them\, and the free
  reflexive partial monoid. I'll finish by outlining some remaining
  questions that I'm still wondering about.\n
UID:375
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20231006T140000
DTEND;TZID=Europe/London:20231006T150000
LOCATION:Online
SUMMARY:Writing interactive programs using containers
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: Writing interactive
  programs using containers\n\nContainers and their morphisms provide a
  bidirectional structure that matches a lot of programs that are
  interactive in nature (databases\, servers\, compilers). In this
  presentation I will show how to build such programs using containers\,
  container morphisms and their algebra.\n
UID:374
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230922T140000
DTEND;TZID=Europe/London:20230922T150000
LOCATION:LT210 and Online
SUMMARY:Staging by Evaluation
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Staging by
  Evaluation\n\nI will present an Agda implementation of a simply typed
  version of András Kovács' Staged compilation with two-level type theory.
  Starting from an intrinsically typed language mixing static and dynamic
  parts using quotes and splices\, we perform a model construction à la
  normalisation by evaluation and obtain a staging by evaluation
  algorithm.\n
UID:373
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230705T110000
DTEND;TZID=Europe/London:20230705T120000
LOCATION:GH 513 and Online
SUMMARY:A dual adjunction between Ω-automata and Wilke algebras
DESCRIPTION:Speaker: Anton Chernev (University of Groningen)\nTitle: A
  dual adjunction between Ω-automata and Wilke algebras\n\nThe notion of
  ω-regular language captures the idea of a regular language that consists
  of infinite words. The most standard type of automata for ω-regular
  languages are called Büchi automata. Ω-automata are another type of
  automata for ω-regular languages that\, instead of infinite words\, read
  pairs of finite words\, called lassos\, that represent ultimately
  periodic words. We study the categorical relationship between Ω-automata
  and Wilke algebras – the latter are algebraic structures recognising
  ω-regular languages. We present a chain of adjunctions starting from the
  category of Ω-automata without initial states and ending with the dual of
  the category of quotients of the free Wilke algebra. This is joint work
  with Helle Hvid Hansen (University of Groningen) and Clemens Kupke
  (University of Strathclyde).\n
UID:372
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230627T160000
DTEND;TZID=Europe/London:20230627T170000
LOCATION:GH 513 and Online
SUMMARY:A Shiny Hammer and Many Nails to Hit – Bidirectional typing is
  not only an implementation technique
DESCRIPTION:Speaker: Meven Lennon-Bertrand (University of
  Cambridge)\nTitle: A Shiny Hammer and Many Nails to Hit – Bidirectional
  typing is not only an implementation technique\n\nIn 2000\, Pierce and
  Turner introduced a new technique to perform type inference for ML-like
  languages\, whose main idea was to carefully understand the local flow of
  information in the algorithm. This technique\, which came to be referred
  to as bidirectional typing\, did not come out of a void: similar ideas
  had appeared independently in many other contexts. In particular\,
  bidirectional typing has been a part of the folklore of dependently typed
  languages implementers since the dawn of time.\n\n But even in that
  context where it has a long history\, bidirectional typing was for a long
  time mostly confined to implementations. Yet\, its type-theoretic
  structure turns out to be a very versatile and powerful tool when
  studying (dependent) type systems and their meta-theory.\n\n In this
  talk\, I will try and give some of my understanding of bidirectional
  typing\, how it is rooted in type-checker implementations but is more
  than just this\, and how it can be used to make many facets of the
  infamously painful meta-theory of dependent type systems a bit less
  painful.\n
UID:371
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230630T150000
DTEND;TZID=Europe/London:20230630T160000
LOCATION:GH 513 and Online
SUMMARY:On The Design of a Gradual Dependently Typed Language for
  Programming
DESCRIPTION:Speaker: Joey Eremondi (University of Edinburgh)\nTitle: On
  The Design of a Gradual Dependently Typed Language for Programming\n\nI
  describe a design for gradual dependent types\, a system by which
  dependently typed programs can be run when missing parts of types\,
  proofs\, or programs. This serves a dual purpose. First\, it reduces the
  barrier to entry for dependent types\, making it easier to migrate code
  to use dependently typed languages\, and allowing indexed types to be
  safely used even when type or proof information is missing. Second\, it
  gives dynamic semantics to the typed holes that are already found in
  modern languages\, so programs can be safely run when holes are missing\,
  providing the programmer with useful information of what terms should
  fill the holes. In the talk\, I present a vision for what programming
  with gradual dependent types could look like\, along with technical
  challenges that arise with it and solutions to some of these
  challenges.\n
UID:370
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230616T150000
DTEND;TZID=Europe/London:20230616T160000
LOCATION:LT310 and Online
SUMMARY:Session Types & Imperative Languages & Observations\, Oh My!
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (MSP)\nTitle: Session Types &
  Imperative Languages & Observations\, Oh My!\n\nSession Types are a neat
  typing discipline to reason both statically and dynamically about program
  behaviour. An interesting question is how best we can incorporate session
  types into our programming languages and reach the fabled Emerald City of
  Type-Driven Validation of Communicating Systems!\n\n Earlier this year\,
  I gave a talk at PLUG that discussed the dependently-typed mechanics that
  pushed me along the yellow brick road to create Capable\, a featherweight
  imperative language that supports Multi-Party Session-Types (MPSTs).
  Capable has been mechanised within Idris2 to ensure that including MPSTs
  is done honestly as the Good Witch Glinda would appreciate.\n\n In this
  talk I intend to step away from the keyboard and take a detour along a
  yellow-ish cobbled street to look at some of the theoretical observations
  that arise from mechanisation. Specifically\, I will discuss the design
  decisions that the Wicked Dependent-Type Checker of the East has
  requested I do to ensure unification and execution\, but more importantly
  the trade-offs that come with those decisions.\n\n This work is\,
  slowly\, getting ready for publication (we do in fact run our
  session-typed programs) and I am certain that I don't need to return that
  brain\, yet....\n
UID:369
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230621T140000
DTEND;TZID=Europe/London:20230621T150000
LOCATION:MC319 and Online
SUMMARY:Computational Effects in Mathematical Perspective
DESCRIPTION:Speaker: John Power (University of Bath)\nTitle:
  Computational Effects in Mathematical Perspective\n\nIn the late 1980's\,
  Eugenio Moggi introduced the idea of "monads as notions of computation"\,
  the latter more recently called computational effects\, supported by
  several impressive examples. He used the definition of monad but did not
  make substantial use of mathematics that gives rise to monads. In
  category theory\, monads systematically arise from universal algebra. But
  universal algebra can also be understood\, from a category theoretic
  perspective\, in terms of Lawvere theories\, this fact shedding
  considerable light on computational effects\, in particular the
  operations that give rise to effects. That observation has been
  fundamental to a deep\, further development\, giving rise to the notion
  of algebraic effect. I shall try to explain the conceptual line of
  thought that gives rise to algebraic effects\, modelled by Lawvere
  theories and thence my monads. It was joint work primarily with Gordon
  Plotkin but also with others\, notably Martin Hyland.\n
UID:367
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230512T150000
DTEND;TZID=Europe/London:20230512T160000
LOCATION:LT711 and Online
SUMMARY:Just when I thought I was out\, they pull me back in.
DESCRIPTION:Speaker: Ethel Morgan (MSP)\nTitle: Just when I thought I was
  out\, they pull me back in.\n\nExperiences from industrial academia &
  academic industry.\n
UID:366
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230505T150000
DTEND;TZID=Europe/London:20230505T160000
LOCATION:LT711 and Online
SUMMARY:Modal unification and graph homomorphisms
DESCRIPTION:Speaker: Johannes Marti (Oxford)\nTitle: Modal unification
  and graph homomorphisms\n\nThe problem of unifiability in a modal logic L
  asks\, whether for a given formula phi there exists a substitution such
  that applying the substitution to phi turns it into a theorem of L. For
  the many non-transitive modal logics\, most notably the modal logic K\,
  it is not known whether this problem is decidable. I present joint work
  with Sam van Gool\, where we reformulate unifiability relative to some
  modal logics L as a problem about the existence of a graph homomorphism
  for some generalised notion of graph that depends on a coalgebra functor
  T.\n
UID:365
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230428T150000
DTEND;TZID=Europe/London:20230428T160000
LOCATION:LT711 and Online
SUMMARY:Continuations and co-exponentials
DESCRIPTION:Speaker: Vikraman Choudhury (University of Glasgow)\nTitle:
  Continuations and co-exponentials\n\nGrowing up in Indiana\, I learned
  about corn-mazes and continuations\, but I found them very confusing\,
  often getting lost and struggling to get back on track. Now that I’m
  living far away in Scotland\, I find myself reminiscing about my
  midwestern roots.\n\n In this talk\, I will present a different
  perspective on continuations: just as higher-order functions give you
  exponentials\, higher-order continuations give you co-exponentials. On
  this motif\, I will develop the theory of co-exponentials and some
  applications. I will show how to: (1) combine exponentials and
  co-exponentials in the same language without degeneracy\, (2) give a
  computational interpretation for bi-intuitionistic logic\, (3) recover
  classical control operators and the computational interpretation of
  classical logic using Faustian sums\, (4) use co-exponential combinators
  to do speculative execution\, backtracking\, and encode effect handlers\,
  (5) add co-exponentials to a first-order programming language\, with a
  computational interpretation. I will develop these ideas both in syntax
  and semantics.\n\n The main idea occurred to me while studying linear
  logic and star-autonomous categories\, from Mellies’ micrological study
  of negation. The rest of the work builds upon old ideas of Hofmann\,
  Streicher\, Reus on models of lambda-mu calculus\, Moggi’s computational
  lambda calculus\, Thielecke’s ⊗¬ categories\, Freyd categories of Power\,
  Thielecke\, Führmann and others\, and Hasegawa’s contextual calculus.
  This work is situated as part of a bigger research programme on trying to
  understand the foundations of quantum programming languages\, starting
  from first-order reversibility\, instead of linearity.\n
UID:364
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230414T150000
DTEND;TZID=Europe/London:20230414T160000
LOCATION:LT711 and Online
SUMMARY:What are higher categories and groupoids?
DESCRIPTION:Speaker: Thorsten Altenkirch (University of
  Nottingham)\nTitle: What are higher categories and
  groupoids?\n\nCategories are like drugs: once you get addicted to one\,
  your dealer comes up with something stronger and you aquire a new
  addiction. This is the games with higher categories.\n\n I want to look
  at the definition of higher cats\, actually w,1-cats in HoTT using
  semi-simplicial types and the directed replacement of simplicial types.
  Also I may discuss the globular approach (which works for higher
  groupoids but could also made to work for higher cats) I am wondering how
  these are related. This may help to address some open problems.\n
UID:363
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230314T150000
DTEND;TZID=Europe/London:20230314T160000
LOCATION:LT310 and Online
SUMMARY:Systems that model their environments\, and systems that plan.
DESCRIPTION:Speaker: Nathaniel Virgo (Earth-Life Science Institute
  (Tokyo))\nTitle: Systems that model their environments\, and systems that
  plan.\n\n Consider a system interacting with its environment\, perhaps in
  pursuit of some goal. We might want to ask whether the system has a model
  of its environment\, especially in POMDP-like cases where the environment
  is partially observable and the system must make inferences about the
  environment's state in order to pursue its goal.\n\n But where does the
  model live in relation to the system? A simple answer is that the
  system's state parametrises a probability distribtion over environment
  states. This distribution isn't part of the system but is imposed upon it
  by an external observer. I will talk about how to model this
  observer-dependence via notion of 'interpretation' of a sytem\, in which
  a system's internal states are interpreted as being 'about' a hidden
  environment state and as being updated using Bayes' theorem. A given
  system may have many interpretations\, so that interpretations form a
  fibration over systems.\n\n A more interesting case is where a system
  uses a model not just to keep track of its environment but to reason
  about how to influence it. This is a lot harder to model\, and I will
  talk about various pieces of work in progress towards understanding the
  relationships between systems\, models and goals\, with an emphasis on a
  category-theoretic perspective.\n
UID:362
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230519T150000
DTEND;TZID=Europe/London:20230519T160000
LOCATION:LT711 and Online
SUMMARY:How to be a real™ (C) programmer for beginner type theorists
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: How to be a real™ (C)
  programmer for beginner type theorists\n\nFeeling impostor syndrome from
  writing proof trees yet never executing any programs? Tired of being
  marginalized from online communities because you've never dereferenced
  raw memory? Finally\, you can become a C-programmer neckbeard with this
  one crazy trick without leaving the comfort of your pen&paper. By
  extending QTT with pointer operations one can finally achieve their dream
  of submitting a patch to the linux kernel and have it be rejected for
  naming conventions. At least the program would be correct by construction
  since you can inherit all your inductive proofs inside your imperative
  program.\n
UID:361
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230609T150000
DTEND;TZID=Europe/London:20230609T160000
LOCATION:LT711 and Online
SUMMARY:Control Flow as a Contour of Data Flow
DESCRIPTION:Speaker: Malin Altenmüller (MSP)\nTitle: Control Flow as a
  Contour of Data Flow\n\nI will be talking about some ongoing work on a
  compositional graph data structure for encoding control flow information
  of a program. At the centre of this definition is the notion of contour
  for a given tree-like structure. The notion of contour category was
  introduced by Melliès and Zeilberger [1]\, who use it in the context of
  representing derivations in context-free grammars as functors. I will
  give an overview over their constructions\, and present how we generalise
  the notion of contour\, moving to a non-linear\, non-deterministic
  version. We use these generalised contours to express control flow
  information of a program on top of its abstract syntax tree. I will
  discuss how normal flow as well as exceptional program behaviour is
  represented in this framework. This is joint work with Dan Ghica.\n\n [1]
  <atps://arxiv.org/abs/2212.09060'>
UID:360
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230526T150000
DTEND;TZID=Europe/London:20230526T160000
LOCATION:LT711 and Online
SUMMARY:From Lenses to Composable Continuations\, and what lies between
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: From Lenses to Composable
  Continuations\, and what lies between\n\nContinuation-Passing Style (CPS)
  is a programming discipline that parametrises programs by "the thing that
  happens next" - the continuation. Programs in CPS gain superpowers by
  being able to directly manipulate the continuation and use it as many
  times as they want. In this talk\, I'll try to convince you that lenses
  are a restricted form of CPS where the continuation must be used exactly
  once. In fact\, lenses and CPS form a category with lenses as the initial
  object and CPS as the terminal object. But what lies between them?\n
UID:359
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230331T150000
DTEND;TZID=Europe/London:20230331T160000
LOCATION:LT711 and Online
SUMMARY:Towards a categorical representation of thin trees
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Towards a categorical
  representation of thin trees\n\nDeterministic Automata on infinite trees
  lack expressivity. The situation is different when restricting one’s
  attention to so-called thin trees where every regular language can be
  seen as the language of a so-called unambiguous automaton. In my talk I
  will explain our motivation for why we are interested in unambiguous tree
  automata and I will present work in progress that aims to understand thin
  trees more abstractly. This is based on ongoing joint work with Corina
  Cirstea\, Jade Master and Alexandre Goy.\n
UID:358
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230324T150000
DTEND;TZID=Europe/London:20230324T160000
LOCATION:LT711 and Online
SUMMARY:From discounted value to discounted state
DESCRIPTION:Speaker: Riu Rodríguez Sakamoto \nTitle: From discounted
  value to discounted state\n\nThe discounted value is a concept in
  Reinforcement Learning methods such as Value Iteration that allows to
  aggregate expected future rewards. It can be formalized as lens
  precomposition with a value function (which is a counit). We give some
  progress towards another class of RL methods that are based on
  parametrized policies\, where this composition happens without the need
  of a counit\, leading to a "discounted state" of a dynamical system. This
  has some resemblance to a List algebra\, taken over a bicategory of
  linear relations of a vector space instead of over Set. The discounted
  state is used in the literature to prove the Policy Gradient Theorem\,
  which we interpret as an Euler integration for noncommutative
  operators.\n
UID:357
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230310T150000
DTEND;TZID=Europe/London:20230310T160000
LOCATION:LT711 and Online
SUMMARY:String Diagrams for Actegories
DESCRIPTION:Speaker: Dylan Braithwaite (MSP)\nTitle: String Diagrams for
  Actegories\n\nActions of monoidal categories are structures useful for
  modelling interacting systems. They are central to the definition of
  optics\, but have also found use elsewhere\, for example in the semantics
  of message-passing. When working in categorical cybernetics we often
  depict monoidal actions using string diagrams with multiple categories
  juxtaposed\, but this steps away from the formally specified semantics of
  string diagrams for monoidal categories which have coherence and
  completeness results making their manipulation valid for proving
  equalities. I will discuss how diagrams for actegories can be modelled
  more formally by considering them as certain bicategories using the
  construction of the collage of a bimodule.\n\n By depicting actegories as
  bicategories we obtain satisfying visual representations for actegory
  structures. We will see that the lax compositional structure of the
  collage gives rise to useful visualisations for the emergent behaviour
  between categories interacting via the action of a common monoidal
  category. This gets represented as coloured string diagrams glued
  together along certain shared boundaries. As a special case we can depict
  optics as diagrams with several regions which neatly frame the
  “forward”\, “backward”\, and “residual passing” stages of their
  morphisms.\n
UID:356
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230303T150000
DTEND;TZID=Europe/London:20230303T160000
LOCATION:LT711 and Online
SUMMARY:Chemoids: a rewrite approach to general compositionality
DESCRIPTION:Speaker: Carlos Zapata-Carratalá (Society for
  Multidisciplinary and Fundamental Research)\nTitle: Chemoids: a rewrite
  approach to general compositionality\n\nIn this talk I will motivate and
  introduce the notion of 'chemoid'\, a compositional structure
  generalizing many diagram-based formal systems such as algebras\,
  categories\, operads\, tensor networks\, etc. I will then present some
  newly found\, somewhat exotic\, compositional structures that relate to
  chemical and biological computing (hence the name 'chemoid'). I will be
  using some of the functionality that I am currently developing with other
  colleagues at the Wolfram Institute.\n
UID:355
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230224T150000
DTEND;TZID=Europe/London:20230224T160000
LOCATION:LT711 and Online
SUMMARY:Type theory vs set theory: whose ordinals are better?
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Type theory
  vs set theory: whose ordinals are better?\n\nIn constructive set theory\,
  an ordinal is a hereditarily transitive set. In homotopy type theory\, an
  ordinal is a type with a transitive\, wellfounded\, and extensional
  binary relation. Which notion is more expressive? We can tackle this
  question if we first interpret set theory into type theory\, using Peter
  Aczel's sets as trees interpretation (recast in homotopy type theory
  using higher inductive types)\, and then compare the notions directly in
  type theory. With more work\, it is possible to generalise the comparison
  to capture all sets in Aczel's interpretation rather than only the
  ordinals. This leads to a natural class of ordered structures which
  contains the type-theoretic ordinals and realises the higher inductive
  interpretation of set theory.\n\n This is joint work with Tom de Jong\,
  Nicolai Kraus\, and Chuangjie Xu.\n
UID:354
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230217T150000
DTEND;TZID=Europe/London:20230217T160000
LOCATION:LT711 and Online
SUMMARY:Why Fibrations are your Friend
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: Why Fibrations are your
  Friend\n\nI'll tell you why fibrations should be your friends.\n
UID:353
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230203T150000
DTEND;TZID=Europe/London:20230203T160000
LOCATION:LT711 and Online
SUMMARY:Contexts and emergent effects in categorical systems theory
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: Contexts and emergent
  effects in categorical systems theory\n\nOne of the most exciting ideas
  in categorical systems theory is being able to give a clean definition to
  “emergent effects”\, namely failure of a lax functor to be a functor. But
  there is a lack of theoretical tools to do useful things after
  identifying this common situation. I will present work in progress
  towards a “theory of contexts”\, talking formally about the idea that an
  open system’s behaviour can depend on what other systems are nearby\, by
  isolating 1 of the 3 key theoretical ingredients of open games. This
  hopefully allows situations with emergent effects to be seen as an
  ordinary functor\, although working out examples is irritatingly
  difficult.\n
UID:351
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230127T150000
DTEND;TZID=Europe/London:20230127T160000
LOCATION:LT1310 and Online
SUMMARY:Sorted Lists and Free Idempotent Commutative Monoids (over strict
  total orders)
DESCRIPTION:Speaker: Sean Watters (MSP)\nTitle: Sorted Lists and Free
  Idempotent Commutative Monoids (over strict total orders)\n\nFree monoids
  are very well-understood and widely used\, both on paper and in code.
  However\, their commutative cousins are slightly trickier to pin down a
  neat data type for. There is a well-established mathematical story
  involving finite multisets\, but they are notoriously tricky to implement
  sensibly in code.\n\n Instead\, I want to focus on a datatype for sorted
  lists which turns out to be nearly the same thing if you squint the right
  way. I'll first demonstrate how we can construct and work with these
  things\, and then the squinting shall begin! We can easily show it to be
  a commutative monoid\, but thinking of it as the free one will require
  adopting the correct perspective. Specifically\, we'll need to work in
  the land of total orders rather than sets.\n\n I'm actually interested in
  finite subsets rather than finite multisets\, and that pleasingly only
  requires adding idempotency to the monoid multiplication\, and strictness
  to the total order. Although\, this actually leads to some interesting
  wrinkles when we try to prove freeness.\n
UID:350
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230120T150000
DTEND;TZID=Europe/London:20230120T160000
LOCATION:LT1310 and Online
SUMMARY:On a fibrational construction for optics\, lenses\, and
  Dialectica categories
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: On a fibrational
  construction for optics\, lenses\, and Dialectica
  categories\n\nCategories of lenses/optics and Dialectica categories are
  both comprised of bidirectional morphisms of basically the same form. In
  this talk I’m going to introduce both and show how they can be considered
  a special case of an overarching fibrational construction\, generalizing
  Hofstra’s construction of Dialectica fibrations. At its highest level of
  generality\, it’s a construction that turns a tower of fibrations into
  another tower of fibrations by twisting each of the components using the
  opposite fibration construction.\n
UID:349
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20230111T150000
DTEND;TZID=Europe/London:20230111T160000
LOCATION:LT1310 and Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:348
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221130T110000
DTEND;TZID=Europe/London:20221130T120000
LOCATION:LT1310 and Online
SUMMARY:Brouwerian counterexamples: being a know-it-all 101
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Brouwerian
  counterexamples: being a know-it-all 101\n\nSome statements are not
  provable\, in the sense that they imply falsity (for example: "every
  inhabited subset of real numbers has a least upper bound"). Other
  statements are not provable constructively\, even though they are true
  when using classical logic (for example: "every bounded inhabited subset
  of real numbers has a least upper bound"). How can we convince ourselves
  of this fact\, so that we do not waste time and effort looking for a
  constructive proof? We can construct a so-called Brouwerian
  counterexample by showing that the claimed statement implies a known
  non-constructive principle. Brouwer called such principles omniscience
  principles\, because only an all-knowing being can hope to for example
  decide if P or not P holds for every proposition P. I will give an
  introduction to some of the more common omniscience principles such as
  LPO\, LLPO and Markov's Principle\, and try to give some intuition for
  when one should expect a statement to not have a constructive proof\; an
  important skill in order to avoid heartbreak when working in a
  constructive setting such as type theory or the internal logic of a
  category. \n
UID:345
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221123T110000
DTEND;TZID=Europe/London:20221123T120000
LOCATION:LT1310 and Online
SUMMARY: How I stopped worrying and learned to love triple categories (of
  cybernetic systems)
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: How I stopped worrying
  and learned to love triple categories (of cybernetic systems)\n\nA good
  chunk of MSP is busy trying to come up with convincing applications of
  category theory in 'cybernetics'\, which is an umbrella term for game
  theory\, learning theory\, control theory\, and more. I'm busy trying to
  understand what all these people (including me) are doing. What do the
  systems we are interested in have in common? What does it mean to say
  game theory and gradient-based learning look alike? How do we study the
  behaviour of cybernetic systems? Inspired by Myers' categorical system
  theory I formulated some tentative answers to these questions. Alas\,
  they require the full breadth of spatial dimensions this universe
  provides. In this talk I will quickly introduce the ideas behind my
  version of 'categorical cybernetic system theory'\, including recent
  developments regarding the definition of a theory of cybernetic systems.
  The hope is that conceptual motivation will defuse some fear in the
  higher structures involved.\n
UID:344
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221116T093000
DTEND;TZID=Europe/London:20221116T160000
LOCATION:University of Edinburgh
SUMMARY:Event: Agda Implementors' Meeting XXXI
DESCRIPTION:
UID:343
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221109T110000
DTEND;TZID=Europe/London:20221109T120000
LOCATION:LT1310 and Online
SUMMARY:Hylomorphism complexity
DESCRIPTION:Speaker: Ezra Schoen (MSP)\nTitle: Hylomorphism
  complexity\n\nAlgebra and coalgebra morphisms are well-known and widely
  applied. They have a more niche cousin in coalgebra-to-algebra
  morphisms\, also known as hylomorphisms. These are occasionally used to
  formalize divide-and-conquer algorithms. They can also be used in
  defining semantics for coalgebraic logics\, as well as solving certain
  sets of recursive equations. Taking the perspective of 'solving recursive
  equations'\, it is natural to ask for the computational complexity of
  deciding the existence of solutions. This turns out to depend essentially
  on the type functor for the (co)algebras. In this talk\, I will give a
  simple classification of (polynomial) functors by the complexity of their
  corresponding decision problem. On the way\, we will take in a few
  different intuitions towards (co)algebras and hylomorphisms.\n
UID:342
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221102T110000
DTEND;TZID=Europe/London:20221102T120000
LOCATION:LT1310 and Online
SUMMARY:Fixed points and recursion in quantitative reasoning
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Fixed points and
  recursion in quantitative reasoning\n\nThis talk summarizes a series of
  results regarding the extension of quantitative algebraic reasoning with
  fixed points and recursion. The work extends the quantitative algebras
  (which are universal algebras on metric spaces) with syntactic constructs
  that allow us to encode Banach fixed points on complete metric spaces. In
  effect\, one gets (a generalization of) a Conway and an iteration theory.
  I will demonstrate that most of the results known about classic iteration
  theories on ordered structures remain true in the metric context. And\,
  in fact\, that the metric settings generalize the results for ordered
  structures.\n
UID:341
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221026T120000
DTEND;TZID=Europe/London:20221026T170000
LOCATION:University of Stirling / Online
SUMMARY:Event: SPLS
DESCRIPTION:
UID:340
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221019T110000
DTEND;TZID=Europe/London:20221019T120000
LOCATION:LT1310 and Online
SUMMARY:Tools of the Dependently Typed Compiler Trade
DESCRIPTION:Speaker: Guillaume Allais (University of St Andrews)\nTitle:
  Tools of the Dependently Typed Compiler Trade\n\nVélo is a tiny language
  to explore the implementation of compilers for functional languages in a
  dependently typed host. I will highlight some of the design choices
  striking a balance between enforcing invariants\, getting work done\, and
  compiling to relatively efficient code. Features include support for
  well-scoped typed holes\, constant folding\, and common sub-expression
  elimination.\n
UID:339
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20221005T110000
DTEND;TZID=Europe/London:20221005T120000
LOCATION:LT1310 and Online
SUMMARY:A guided tour through my work
DESCRIPTION:Speaker: Jacques Carette (McMaster University)\nTitle: A
  guided tour through my work\n\nI will attempt to do something that's
  generally ill-advised: give a shallow talk with many components without
  diving in to any part too deeply. Why? The wrong reason to give such a
  talk is to impress people with all you're doing. A potentially viable
  reason is to cover that work which might be of interest to the audience\,
  cause discussion and\, hopefully\, collaboration.\n\n I was tempted to
  call this a "meander through my work"\, but that really would be
  ill-advised. There are patterns to the madness\, and indeed the tour will
  be organized around those patterns.\n
UID:337
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220928T110000
DTEND;TZID=Europe/London:20220928T120000
LOCATION:LT1310 and Online
SUMMARY:The Topology of Knowledge: Simplicial Models for Epistemic Logic
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: The Topology of
  Knowledge: Simplicial Models for Epistemic Logic\n\nMulti-agent Epistemic
  Logic is a modal logic of knowledge. It allows to reason about a finite
  set of agents who may know facts about the world\, and about each other.
  In this talk\, I will present a new semantics for epistemic logic\, based
  on simplicial complexes. In this approach\, the knowledge of the agents
  is modeled by a higher-dimensional space called a simplicial model\; and
  the truth of an epistemic logic formula can be evaluated by inspecting
  the various possible paths in this space. I will illustrate these ideas
  using examples from the theory of distributed computing\, where the
  agents correspond to individual processes who can exchange information in
  order to solve a task. Both topological invariants and logical invariants
  can be leveraged to prove that some distributed computing tasks are
  impossible to solve.\n
UID:336
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220921T110000
DTEND;TZID=Europe/London:20220921T120000
LOCATION:LT1310 and Online
SUMMARY:Citizens and Subjects
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Citizens and
  Subjects\n\nI'll explore a distinction which emerges from my reimagining
  of type systems in terms of client-server interaction. A typing rule is a
  server for its conclusion and a client for its premises. Every signal in
  a typing interaction has a sender\, transmitting the signal as a
  syntactic object\, but also a guarantor\, promising that the signal is in
  some way meaningful. We are thus in a position to distinguish "citizens"
  (signals whose guarantor is their sender) from "subjects" (signals whose
  guarantor is their receiver). The two can and should be treated rather
  differently. Citizens should be free from the relitigation of their
  status and judged according to their semantics. Subjects should be
  investigated syntactically in order to establish their status. Like
  caterpillars and butterflies\, every subject should aspire to
  citizenship\, but when they achieve it\, they will not be who they
  were.\n
UID:335
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220630T140000
DTEND;TZID=Europe/London:20220630T150000
LOCATION:Online
SUMMARY:Can we compose Dependent Lenses as Optics?
DESCRIPTION:Speaker: Bruno Gavranović (MSP)\nTitle: Can we compose
  Dependent Lenses as Optics?\n\nIn this talk\, I'll use Idris 2 to live
  code work in progress thoughts related to lenses and optics. I'll focus
  on the relatively unknown fact that\, even though lenses and optics are
  denotationally equivalent\, operationally they have a different
  composition rule\, with a different space-time complexity. In the case of
  optics this composition uses up more space\, but less time. While in the
  non-dependent case it is well understood how to take a bidirectional
  gadget and switch between a lens-like and an optic-like composition\, in
  the dependent case it not. In this talk\, I won't answer the question in
  the title\, but am instead hoping to frame it in proper context. I'll do
  type-directed programming\, and at points invoke linear types\, hoping to
  be guided by the compiler in search of an answer.\n
UID:334
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220616T140000
DTEND;TZID=Europe/London:20220616T150000
LOCATION:Online
SUMMARY:A unified visual language for games
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: A unified visual language
  for games\n\nThe starting point of this talk is the observation that
  string diagrams for open games have more in common with extensive form
  trees than first appears. I will introduce a 3-dimensional syntax that
  has usual string diagrams and extensive form as 2 orthogonal projections.
  But first\, we need to talk about parallel universes…\n\n This talk
  summarises a paper I’ve had brewing for a couple of years and want to
  actually write soon\, that clarifies and expands on a tweet I wrote in
  October 2019. It is the secret thread connecting a couple of bits of my
  research in that time: dependent optics (joint work with half of MSP) and
  sheet diagrams (joint work with Antonin Delpeuch and Cole Comfort). In
  short: We define a bimonoidal category of dependent open games with
  tensor product and external choice\, and then equip it with the natural
  3d syntax for bimonoidal categories.\n
UID:333
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220609T140000
DTEND;TZID=Europe/London:20220609T150000
LOCATION:Online
SUMMARY:Filtrations in modal logic
DESCRIPTION:Speaker: Ezra Schoen (MSP)\nTitle: Filtrations in modal
  logic\n\nFiltration is a common technique in modal logic. The central
  idea is to consider a (large or even infinite) model M satisfying a
  property P of interest. By identifying states in a controlled way\, one
  may (greatly) reduce the size of the M — in fact\, one has an upper bound
  depending only on P. Filtration for basic modal logic is quite
  straightforward\, but may be more difficult for extensions\, particularly
  those involving fixpoint operators. PDL (propositional dynamic logic) is
  a much-studied such extension of modal logic\, used for reasoning about
  properties of programs.\n\n I will introduce filtration for basic modal
  logic\, and prove preservation of the desired properties. I will do the
  same for PDL\, highlighting the difficulty introduced by the fixpoint
  operator.\n\n If there is enough time and interest\, I will also discuss
  filtrations for monotone PDL\, which is PDL interpreted on a more general
  class of models (namely monotone neighborhood models).\n
UID:332
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220526T140000
DTEND;TZID=Europe/London:20220526T150000
LOCATION:Online
SUMMARY:Constructive Ordinal Theory in Homotopy Type Theory
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Constructive
  Ordinal Theory in Homotopy Type Theory\n\nMany constructions proceed in
  stages: we give a base case\, a step case showing how to go from stage n
  to stage n+1\, and then the desired result is achieved in the limit. In
  more complicated situations\, we have to go beyond stages indexed by
  natural numbers to stages indexed by larger structures — ordinals\, a
  cornerstone of modern mathematics. These are well understood
  classically\, but less so in a constructive setting\, where different
  equivalent classical notions split apart\, with different advantages and
  disadvantages for each. I will show how a theory of different ordinals
  can be developed constructively in the setting of homotopy type theory\,
  and how modern type-theoretic features such as higher inductive types and
  inductive-inductive definitions can be used to construct ordinal notation
  systems that truly behave like ordinals\, with extensional and
  wellfounded order relations.\n\n Joint work with Nicolai Kraus and
  Chuangjie Xu.\n
UID:331
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220519T130000
DTEND;TZID=Europe/London:20220519T140000
LOCATION:Online
SUMMARY:How to Compose Shortest Paths
DESCRIPTION:Speaker: Jade Master (MSP)\nTitle: How to Compose Shortest
  Paths\n\nThe magic of the min-plus semiring allows one to express the
  shortest path problem as an exponential. A weighted graph is represented
  by a matrix M whose shortest paths are found as F(M) = Sum_{n >=0} M^n.
  Weighted graphs may be joined along a common boundary via pushout and the
  composition problem for F asks how the values of F on a pushout may be
  obtained from the values of F on its components. In this talk I will show
  how this abstract nonsense may be turned into an actual algorithm which
  computes shortest paths compositionally. Optimistically\, this algorithm
  and the relevant results may be adapted to the more general setting of
  the algebraic path problem.\n
UID:330
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220512T130000
DTEND;TZID=Europe/London:20220512T140000
LOCATION:Online
SUMMARY:Everybody Used To Be Somewhere
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Everybody Used To Be
  Somewhere\n\nI will report work in progress on my marking-disrupted
  incomplete formalisation of the action of relevant substitutions on
  relevant terms\, indexed over their variable support. A relevant term
  uses every variable in its support at least once\; a relevant
  substitution uses every variable in its target support in the image of at
  least one variable in its source support\; relevant substitutions thus
  map terms relevant in their source support to terms relevant in their
  target support.\n\n The "codeBruijn" machinery that makes my treatment of
  relevant terms work is based on the semisimplicial category: its objects
  are variable supports and its hom-sets are binomial coefficients seen as
  types of bit vectors representing selections. There are deep connections
  between the structure exhibited by this category and the Good Old Boolean
  Logic of the bits in the vectors. Meanwhile\, relevant substitutions
  themselves constitute the morphisms of a category whose objects are also
  variable supports. What keeps the roof up is the double category whose
  squares tell you what happens to the target scope of a relevant
  substitution when you select some particular variables from its source.\n
UID:329
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220505T140000
DTEND;TZID=Europe/London:20220505T150000
LOCATION:Online
SUMMARY:Some more constructions on containers
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Some more constructions on
  containers\n\nThe category of containers (~ polynomials) contains a
  wealth of structure for building structures representing question /
  answer type patterns. I'll discuss these and a few more that I think are
  novel. I'll try to relate them to ideas about data accessors like prisms
  and traversals.\n
UID:328
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220428T140000
DTEND;TZID=Europe/London:20220428T150000
LOCATION:Online
SUMMARY:Strategic games as cybernetic systems
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: Strategic games as
  cybernetic systems\n\nThis talk I will show how to correct a conceptual
  shortcoming in open games by showing how Nash equilibria can be described
  locally\, internally and dynamically instead of relying on external
  devices. Doing so homogenizes compositional game theory with the general
  yoga of categorical cybernetics. In order to do so\, we show how feedback
  in cybernetic systems is handled in a more structured way than previously
  considered\, which abstracts the formal properties of backpropagation of
  gradients and gradient descent.\n
UID:327
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220421T140000
DTEND;TZID=Europe/London:20220421T150000
LOCATION:Online
SUMMARY:Flexible presentations of graded monads
DESCRIPTION:Speaker: Dylan McDermott (ICE-TCS\, Reykjavik
  University)\nTitle: Flexible presentations of graded monads\n\nGraded
  monads are a generalization of monads that are used\, for example\, to
  track quantitative information in models of effects. There is an existing
  notion of presentation (by operations and equations) for graded monads\,
  which has the problem that many examples of interest fail to admit
  natural presentations. I will talk about a more general notion of
  presentation for graded monads\, which resolves this problem by
  permitting more flexible forms of operation and equation. Every such
  presentation induces a canonical graded monad equipped with
  interpretations of these operations. As part of this work\, we
  reformulate graded monads and related concepts in terms of locally graded
  categories\, which provide a useful setting for working with grading.\n\n
  This is joint work with Shin-ya Katsumata\, Tarmo Uustalu and Nicolas
  Wu.\n
UID:326
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220414T140000
DTEND;TZID=Europe/London:20220414T150000
LOCATION:Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:325
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220407T140000
DTEND;TZID=Europe/London:20220407T150000
LOCATION:Online
SUMMARY:Beyond Epidemics (ACT version)
DESCRIPTION:Speaker: William Waites (MSP)\nTitle: Beyond Epidemics (ACT
  version)\n\nI’ll speak about some of the material from a short talk I
  recently gave at the “Insights from the RAMP project” and will point out
  where I see some connections to category theory (mainly lens-like
  objects\, but also some graph rewriting) where some useful applications
  might be found. This will be a very informal talk\; expect digressions
  and no small amount of hand-waving.\n
UID:324
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220331T140000
DTEND;TZID=Europe/London:20220331T150000
LOCATION:Online
SUMMARY:Game Theory & Semi-Algebraic Geometry: A Symbiotic Relationship
DESCRIPTION:Speaker: Yehuda "John" Levy (University of Glasgow\, Adam
  Smith Business School)\nTitle: Game Theory & Semi-Algebraic Geometry: A
  Symbiotic Relationship\n\nThis talk will present some of the main results
  from the long and symbiotic history between game theory and
  semi-algebraic (s.a.) geometry. On the one hand\, tools from s.a.
  geometry have been used to characterize sets of Nash equilibria\, study
  stability properties of equilibria\, and have had applications to
  equilibrium selection and stochastic games\, among others. On the other
  hand\, a series of results developed in particular in the past decade
  have shown that Nash equilibria are\, in certain senses\, universal for
  s.a. sets\, and that the Nash equilibrium correspondence contains\, in a
  certain sense\, all s.a. functions as well as some classes of
  correspondences. Relations to some problems concerning complexity of
  finding Nash equilibria will be mentioned. No prior knowledge of
  semi-algebraic geometry is assumed.\n
UID:323
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220317T140000
DTEND;TZID=Europe/London:20220317T150000
LOCATION:Online
SUMMARY:Practical dependent lenses for backend architecture
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: Practical dependent
  lenses for backend architecture\n\n Backend architecture is hard\,
  requirements change\, databases migrate\, authentication systems evolve\,
  but our strategy to tackle those problems have remained the same: Employ
  humans to perform all the necessary changes in the code\, until the next
  product needs to ship.\n\n To help with this\, I will show how we can
  leverage dependent lenses and different lens composition operators in
  order to represent common operations on servers\, including managing
  server resources\, updating endpoints and their routing\, and even
  swapping in and out middleware as necessary\, without affecting the
  operation of the server\, and preserving its typing.\n
UID:321
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220309T110000
DTEND;TZID=Europe/London:20220309T170000
LOCATION:University of Edinburgh / Online
SUMMARY:Event: SPLS
DESCRIPTION:
UID:320
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220303T140000
DTEND;TZID=Europe/London:20220303T150000
LOCATION:Online
SUMMARY:On the differential structure of containers
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: On the
  differential structure of containers\n\nAbout twenty years ago\, Conor
  noticed a curious connection between rules for computing the type of
  `one-hole contexts' for algebraic data types\, and Leibniz's calculus
  differentiation rules: they are exactly the same! Together with Neil and
  Conor\, I've had some fun recently trying to put this result in Blute\,
  Cockett and Seely's categorical framework of differentiation\, by
  constructing a so-called Cartesian differential category of containers.
  Of course\, I will explain what these are during the talk.\n
UID:319
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220224T140000
DTEND;TZID=Europe/London:20220224T150000
LOCATION:Online
SUMMARY:An introduction to Non-idempotent Intersection Types
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: An introduction to
  Non-idempotent Intersection Types\n\nAre types for telling us what to
  program\, or for telling us what we have programed? MSP dogma leans to
  the former\, but it is worth looking at the latter too.\n\n If we take
  types to be explanations of programs' behaviour\, then it is only natural
  that they can have multiple types\, since programs may have multiple
  behaviours. Intersection types are the basic tool that allows the
  assignment of multiple behavioural descriptions to a single program.\n\n
  Traditional intersection types are idempotent: if we know that a term has
  some behaviour\, then it is of no interest to know this twice. Inspired
  by linear logic\, however\, we can start to wonder what happens if we
  record how many times we will need a program to have some behaviour --
  non-idempotent intersection types.\n\n When we start counting
  behaviours\, something remarkable happens. In a result due to Daniel de
  Carvalho\, it turns out that the size of the typing derivation is equal
  to the number of steps taken to evaluate the program in the Krivine
  Abstract Machine.\n\n I'll describe the non-idempotent intersection type
  system for a CBN untyped lambda-calculus\, and how to prove de Carvalho's
  result. If here is time\, I'll also discuss how non-idempotent
  intersection types relate to the relational semantics of Linear
  Logic.\n\n An Agda formalisation of de Carvalho's result is written up
  here:
  https://bentnib.org/posts/2020-08-13-non-idempotent-intersection-types.ht
 ml\n
UID:318
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220217T140000
DTEND;TZID=Europe/London:20220217T150000
LOCATION:Online
SUMMARY:Operational view on Optics
DESCRIPTION:Speaker: Bruno Gavranović (MSP)\nTitle: Operational view on
  Optics\n\n Optics\, lenses\, prisms\, and similar abstract gadgets are
  our best friends when it comes to modelling bidirectional processes.
  While optics are more general than lenses\, it's understood that they're
  equivalent in the special setting of a cartesian monoidal category.
  Fixing the setting of a cartesian monoidal category\, in this talk I'll
  explore how this equivalence is denotational in nature\, and the result
  of erasure of important operational data. I'll advocate that the
  operational aspect is not optional\, but rather crucial in understanding
  what these systems are doing.\n
UID:317
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220210T140000
DTEND;TZID=Europe/London:20220210T150000
LOCATION:Online
SUMMARY:An informal introduction to Game Semantics
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: An informal introduction
  to Game Semantics\n\nDenotational semantics specifies the meaning of a
  computer program by associating it with an abstract mathematical object
  (its <e*notation</* which represents its behaviour. In the case of game
  semantics\, a program is interpreted as a two-player game\, played
  between the program and its environment. More precisely\, types are
  modelled by arenas (on which the game is played)\, while the programs
  themselves are modelled by strategies played on those arenas. Game
  semantics originated in the 1990's to solve the full abstraction problem
  for PCF (i.e.\, λ-calculus with a fixpoint operator)\; but the framework
  is very flexible\, and many variants have been proposed to describe
  control\, state\, probability\, concurrency\, and many other program
  constructs.\n\n In this talk\, I will start with a (very) brief
  introduction to denotational semantics in general\, and define the
  concept of full abstraction. Then\, I will present the game semantics
  model for PCF (à la Hyland-Ong)\, and if time allows\, show how to extend
  it to model mutable references. I aim to keep the presentation intuitive
  and informal\, relying mostly on examples and pictures.\n
UID:316
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220203T140000
DTEND;TZID=Europe/London:20220203T150000
LOCATION:Online
SUMMARY:An introduction to Synthetic Guarded Domain Theory
DESCRIPTION:Speaker: Daniele Palombi (Sapienza University of
  Rome)\nTitle: An introduction to Synthetic Guarded Domain
  Theory\n\nSynthetic Guarded Domain Theory (SGDT) arose as a
  generalization of step-indexing and guarded recursion in ultrametric
  spaces. While clearly taking inspiration from Synthetic Domain Theory\, a
  geometric account of the field is still missing. This talk will serve as
  an introduction to SGDT sprinkled with remarks about the very geometric
  flavor of relevant properties of its known topos-theoretic models.\n
UID:315
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220127T140000
DTEND;TZID=Europe/London:20220127T150000
LOCATION:Online
SUMMARY:Ways of Staring at Free Monoidal Categories
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Ways of Staring at Free
  Monoidal Categories\n\nWhat's a free monoidal category? Imagine planar
  circuits connecting a sequence of inputs to a sequence of outputs\, built
  from components similarly taking a sequence of inputs to a sequence of
  outputs. They are categorical: you can wire the outputs of one circuit to
  the inputs of another if they match. They are monoidal: you can place
  them in parallel\, concatenating input and output sequences. They have an
  equational theory which amounts to allowing arbitrary jiggling around in
  the plane\, just as long as you keep everything connected in the same way
  and treat wires and components as deformable but impassable boundaries.
  Can we decide this equational theory? Yes\, in principle\, but how might
  we do it in practice? What would it take to give unique normal forms for
  such circuits as inductively defined data? Fred\, Jules and I were
  staring at this puzzle one evening\, looking over a notebook for a clue
  to plant upon the page\, in a pub not so many minutes away known for the
  central stairway up to its mezzanine. We were staring at circuits and
  staring at the stairway\, until we began to see the stairways in the
  circuits. And it made us wonder!\n
UID:314
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20220112T160000
DTEND;TZID=Europe/London:20220112T170000
LOCATION:Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:313
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211020T110000
DTEND;TZID=Europe/London:20211020T170000
LOCATION:Online
SUMMARY:Event: SPLS
DESCRIPTION:
UID:312
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211215T150000
DTEND;TZID=Europe/London:20211215T160000
LOCATION:Online
SUMMARY:Data types with negative information
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Data types with negative
  information\n\nInductive data types are a foundational tool for
  representing data and knowledge in dependently typed programming
  languages. The user provides a collection of rules that determine
  positive evidence for membership in the type. Elimination of an inductive
  type corresponds to structural induction on its members.\n\n But what if
  our data modelling requires negative information as well as positive? For
  example\, representing the result of a backtracking parser requires
  evidence that a certain parsing attempt *didn't* work. Standard
  formulations of inductive types do not allow negative information mixed
  with positive.\n\n Mixing positive and negative information has been
  studied in logic programming\, resulting in concepts like Negation as
  Failure\, stable models\, and answer set programming. Incorporating
  negative information into systems of rules leads us into the realm of
  non-monotonic logics\, where simply adding knowledge does not necessarily
  preserve existing conclusions.\n\n In this talk\, I'll describe a way to
  understand data types with negative information in type theory by
  combining ideas from 3-valued stable models in logic programming and
  constructive negation (or refutation) from linear logic. The hope is that
  by adding negation to data types we will be able to represent some
  reasoning tasks more easily in dependent types.\n
UID:311
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211208T150000
DTEND;TZID=Europe/London:20211208T160000
LOCATION:Online
SUMMARY:Constructing disjunctive formulas in the modal mu-calculus
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Constructing disjunctive
  formulas in the modal mu-calculus\n\nThe modal mu-calculus is a general
  modal fixpoint logic that allows to reason about the ongoing\, possibly
  infinite behaviour of a transition system. For example\, the temporal
  logics from Sean's 101 talk a few weeks ago can be seen as fragments of
  the mu-calculus.\n\n In this talk I am planning to give a brief
  introduction to the mu-calculus and then focus on a key result about the
  logic: every formula is equivalent to a so-called disjunctive formula.
  Constructing a disjunctive formula of "small" size is important e.g. for
  satisfiability checking. I am going to sketch a construction that yields
  a disjunctive formula that is single-exponential in the closure size of
  the input formula. The construction will highlight a few subtleties that
  arise when thinking about the size of a mu-calculus formula.\n\n Based on
  joint work with Johannes Marti and Yde Venema.\n
UID:310
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211201T150000
DTEND;TZID=Europe/London:20211201T160000
LOCATION:Online
SUMMARY:When completeness is not enough: introduction to algebraisable
  logics
DESCRIPTION:Speaker: Georgi Nakov (MSP)\nTitle: When completeness is not
  enough: introduction to algebraisable logics\n\nThe relation between
  logic and algebra is often expressed by existence of equational
  completeness theorems stating that a certain logic L is complete with
  respect to a certain class of algebras K. Perhaps the most famous example
  is given by the class of Boolean algebras and classical propositional
  logic. However\, CPC is also complete with respect to the class of
  Heyting algebras by a negative translation. In order to recover a
  univocal connection\, we need to dig deeper into the theory of
  algebraisability [1] - an algebraisable logic admits a unique algebraic
  semantics.\n\n In this talk we will introduce some notions and basic
  results from the theory of algebraisable logics. We will further propose
  an extension to the theory to accommodate for logics with weaker forms of
  substitutions (e.g. logics of dependence and independence\, various
  epistemic logics).\n\n This is joint work with Davide Quadrellaro.\n\n
  [1] W. J. Blok and D. Pigozzi. Algebraizable logics\,
  https://bookstore.ams.org/memo-77-396/\n
UID:309
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211124T150000
DTEND;TZID=Europe/London:20211124T160000
LOCATION:Online
SUMMARY:Homotopic and Compositional Aspects of (Hyper)graph Rewriting and
  Fundamental Physics
DESCRIPTION:Speaker: Jonathan Gorard (University of Cambridge)\nTitle:
  Homotopic and Compositional Aspects of (Hyper)graph Rewriting and
  Fundamental Physics\n\nGraph grammars and double-pushout rewriting are
  pretty old news at this point. But the abstract rewriting systems
  produced by (hyper)graph grammars actually carry an extremely rich
  compositional and algebraic structure\, many aspects of which have
  remained woefully under-investigated. We will show how causality
  relations in non-deterministic hypergraph rewriting systems can
  effectively be captured by means of a strict monoidal 2-category (a
  “multiway system”)\, and how higher homotopy types may consequently be
  constructed by adjoining appropriate sets of additional rewriting rules\,
  with the n → ∞ limit of the resulting n-fold category yielding an
  ∞-groupoid (the classifying space of which forms an (∞,1)-topos). We will
  discuss how this general framework has been applied pragmatically in the
  design of efficient automated theorem-proving and diagrammatic reasoning
  software\, before concluding with a more speculative discussion of the
  potential applicability of the overall formalism to the foundations of
  physics (especially categorical quantum mechanics and discrete quantum
  gravity).\n\n This is joint with Xerxes Arsiwalla.\n
UID:308
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211117T150000
DTEND;TZID=Europe/London:20211117T160000
LOCATION:Online
SUMMARY:Optics in three acts
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: Optics in three
  acts\n\nOptics can be constructed in at least three different ways: from
  Tambara theory (profunctor encoding)\, as open diagrams (existential
  optics) and as free 'categories with a counit' (free teleological
  categories). Each of these three constructions highlights a different
  point of view on optics\, and their interplay is an elegant mathematical
  story and a(n arguably) successful story for abstract nonsense. In this
  <del>play</del> talk\, we look at all three constructions and contemplate
  their equivalence.\n
UID:307
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211110T150000
DTEND;TZID=Europe/London:20211110T160000
LOCATION:Online
SUMMARY:A Tour of Temporal Logic
DESCRIPTION:Speaker: Sean Watters (MSP)\nTitle: A Tour of Temporal
  Logic\n\nModal logic can be applied to a diverse range of use-cases by
  fixing different notions of model and modality. Our motivation today will
  be the formal verification technique of model checking\, and with this in
  mind\, I will focus on temporal logic. In temporal logics\, the models
  represent systems which change over time\, and the modalities allow us to
  reason about exactly how they proceed in time.\n\n I will first introduce
  basic relational modal logic\, and show its limitations in this domain.
  We will then go on a tour of LTL\, CTL\, CTL*\, and the modal 𝜇-calculus.
  Key destinations on the tour will include the respective expressive power
  and model-checking complexity of each\, particularly in comparison to the
  𝜇-calculus. <del>I will end the tour with a closer look at the
  model-checking problem of the 𝜇-calculus\, and its relationship to parity
  games.</del>\n
UID:306
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211103T150000
DTEND;TZID=Europe/London:20211103T160000
LOCATION:Online
SUMMARY:An Introduction to Finite Model Theory
DESCRIPTION:Speaker: Dylan Braithwaite (MSP)\nTitle: An Introduction to
  Finite Model Theory\n\nModel theory in classical logic provides a number
  of tools useful for classifying structures described by sets of axioms.
  In computer science we are often interested in cases where these
  structures are finite\, but many results in classical model theory fail
  to specialise to cases where we require all models to be finite. In this
  talk I will give an introduction to some of the alternative techniques
  used for studying expressibility of finite models and discuss some
  interesting connections with complexity theory.\n
UID:305
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211027T150000
DTEND;TZID=Europe/London:20211027T160000
LOCATION:Online
SUMMARY:Categories for persistent homology
DESCRIPTION:Speaker: Riu Rodríguez Sakamoto (MSP)\nTitle: Categories for
  persistent homology\n\nData analysis has dealt traditionally with
  regression\, clustering and dimensionality reduction. Persistent
  homology\, a tool in Topological Data Analysis\, can be thought of as the
  counterpart of clustering: Instead of looking at clusters of data\, it
  classifies holes of data. And we mean `holes' in the most visual way:
  given some point cloud in a metric space\, it addresses how do we
  characterize regions of the space where there's no data. This talk will
  introduce persistence modules\, which are a central concept of the
  theory. We will overview their construction from data\, how we can
  compare between\, and stability properties.\n
UID:303
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211013T150000
DTEND;TZID=Europe/London:20211013T160000
LOCATION:Online
SUMMARY:The changing shapes of cybercats
DESCRIPTION:Speaker: Toby Smithe (Topos Institute and University of
  Oxford)\nTitle: The changing shapes of cybercats\n\nThe ménagerie of
  categorical models of dynamical systems is becoming a veritable zoo\, but
  what makes all these animals tick? In this talk\, I will introduce a new
  specimen: a symmetric monoidal category of continuous-time open Markov
  processes with general state spaces. I will explain how this category is
  obtained from a category of ``continuous-time coalgebras'' opindexed by
  polynomials\, and describe how this recipe also gives categories of
  nondeterministic systems in arbitrary (continuous) time. These new
  specimens are motivated by the cybernetic question of how to model
  systems that are continuously performing approximate Bayesian inference.
  I will therefore sketch why their better-known cousins weren't quite up
  to the job\, and show that our new SMC admits Bayesian inversion.
  Finally\, I will attempt to make contact with the MSP branch of
  categorical cybernetics\, asking what makes the shapes of our structures
  seem so similar-but-different\, and how we might begin to understand
  systems nested within systems.\n
UID:302
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20211006T150000
DTEND;TZID=Europe/London:20211006T160000
LOCATION:Online
SUMMARY:A very abridged introduction to open games
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: A very abridged
  introduction to open games\n\nOpen games allow you to talk about some
  amount of game theory (and thus\, some amount of economics) in terms of a
  lot of familiar ideas from category theory and compositionality. It isn’t
  possible to introduce open games adequately to anyone in this amount of
  time\, but this talk will be the best I can manage in the circumstances.
  I’ll explain approximately how open games work\, and how they relate to
  some other interests of MSP. I’ll also do a quick demo of the open game
  engine\, a Haskell implementation that’s robust enough to do some Real
  Economics ™.\n
UID:301
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210929T150000
DTEND;TZID=Europe/London:20210929T160000
LOCATION:Online
SUMMARY:Dependently typed programming: do you know what you are doing?
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Dependently
  typed programming: do you know what you are doing?\n\nWouldn't it be nice
  if you could tell the computer what you mean\, so that it could help you
  catch not only syntax errors\, but also semantics errors? Even better\,
  so it could help you and guide you towards the program that you want to
  write? So that knowing what you are doing could become a responsibility
  shared between human and machine\, instead of being only your problem?
  Using dependent types\, and some care\, we can achieve this by encoding
  the precise meaning of the program in its type -- any implementation will
  consequently be correct *by construction*. I will give a demonstration of
  such dependently typed programming\, based in part on a nice recent draft
  functional pearl by Wouter Swierstra: "A correct-by-construction
  conversion to combinators" [1]. I will not assume that you know much
  about correct-by-construction programming\, or combinatory logic.\n\n [1]
  https://webspace.science.uu.nl/~swier004/publications/2021-jfp-submission
 -2.pdf\n
UID:300
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210923T150000
DTEND;TZID=Europe/London:20210923T160000
LOCATION:Online
SUMMARY:Building the behavior of graphs compositionally
DESCRIPTION:Speaker: Jade Master (MSP)\nTitle: Building the behavior of
  graphs compositionally\n\nThe free category on a graph may be understood
  as an operational semantics. The objects of this free category represent
  states and the morphisms represent possible sequences of events which may
  occur. How can this operational semantics be built from smaller
  components? We will see how gluing graphs together is the composition of
  category and how the operational semantics of graphs extends to a functor
  on this category. Blackboxing is a process which takes a system and
  focuses only the relationship it induces between its inputs and outputs.
  In this talk we will explain how blackboxing is almost a functor\, and
  how the categorical framework developed so far gives insight into
  computation.\n
UID:299
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210916T150000
DTEND;TZID=Europe/London:20210916T160000
LOCATION:Online
SUMMARY:Introduction to universal coalgebra
DESCRIPTION:Speaker: Ezra Schoen (MSP)\nTitle: Introduction to universal
  coalgebra\n\nThe aim of this presentation is to give an overview of
  various concepts within universal coalgebra. We will explore such topics
  as corecursion\, bisimulation and coalgebraic (modal) logic. No prior
  knowledge is required\, save for some elementary category theory.\n
UID:298
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210909T150000
DTEND;TZID=Europe/London:20210909T160000
LOCATION:Online
SUMMARY:All kinds of types
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: All kinds of
  types\n\nWhat are types? What types of types exist? Why do we do bother
  and what does this buy us? This introduction to type theory aims to
  motivate the study of type systems and demonstrate their power. No
  knowledge is required except for basic programming concepts\, like
  functions and data structures. Our journey will take us from the Set
  theory slums\, through the curry-howard plains\, into the type-theory
  ivory tower and end looking at the stars where modal logic and QTT
  live.\n
UID:297
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210902T150000
DTEND;TZID=Europe/London:20210902T160000
LOCATION:Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:296
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210708T150000
DTEND;TZID=Europe/London:20210708T160000
LOCATION:Online
SUMMARY:Bite me! (Rational Fixpoints of Containers)
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Bite me! (Rational
  Fixpoints of Containers)\n\nLeast fixpoints\, often written mu X.
  Blah(X)\, give us inductive types (for strictly positive Blah)\, e.g.
  finite lists of A given as mu X. 1 + A*X: all the lists of finite length.
  Greatest fixpoints\, often written nu X. Blah(X)\, give us possibly
  infinite type (for strictly positive Blah)\, e.g. finite lists\, but also
  wild infinite lists like [0,1,2,3,...] which never repeat.\n\n There is
  no Greek letter between mu and nu. But there is at least one interesting
  fixpoint between the least and the greatest: things which can loop back
  on themselves\, but not diverge into the wide blue yonder. That is the
  rational fixpoint.\n\n What are we to do with it? I don't know but I
  intend to find out.\n\n I shall give a deeply unsatisfactory talk on this
  topic which leaves more questions than answers\, for the purpose of
  infecting people with this problem. There will be at least one solid
  clue.\n
UID:295
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210701T150000
DTEND;TZID=Europe/London:20210701T160000
LOCATION:Online
SUMMARY:Translating Extensive Form Games to Open Games with Agency
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: Translating Extensive
  Form Games to Open Games with Agency\n\nWe show open games cover
  extensive form games with both perfect and imperfect information. Doing
  so forces us to address two current weaknesses in open games: the lack of
  a notion of player and their agency within open games\, and the lack of
  choice operators. Using the former we construct the latter\, and these
  choice operators subsume previous proposed operators for open games\,
  thereby making progress towards a core\, canonical and ergonomic calculus
  of game operators. Collectively these innovations increase the level of
  compositionality of open games\, and demonstrate their
  expressiveness.\n\n This is a practice talk for ACT'21.\n
UID:294
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210715T150000
DTEND;TZID=Europe/London:20210715T160000
LOCATION:Online
SUMMARY:Expressivity of BCI algebras
DESCRIPTION:Speaker: Samuel Arsac (MSP)\nTitle: Expressivity of BCI
  algebras\n\nI will have a look into the expressivity of BCI-algebras\, by
  implementing them in Coq and by looking at them from a categorical point
  of view. The first step will be to implement the λ* operator as shown in
  [1]\, which will allow for the use of linear lambda-calculus. From this
  point it will be much easier to define useful terms with BCI
  combinators\, and I will use the encoding of booleans in linear
  lambda-calculus defined in [2] to create a type of duplicable and
  discardable booleans. In parallel\, I will talk about the categorical
  aspects with the notion of realisability and category of assemblies [1]\,
  with the aim of showing that we can obtain a linear-non-linear model.\n\n
  [1] <ttps://www.kurims.kyoto-u.ac.jp/~naophiko/paper/realizability.pdf'
  [2] <ttps://www.cs.brandeis.edu/~mairson/Papers/jfp02.pdf'
UID:293
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210630T110000
DTEND;TZID=Europe/London:20210630T170000
LOCATION:Online
SUMMARY:Event: SPLS
DESCRIPTION:
UID:292
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210624T140000
DTEND;TZID=Europe/London:20210624T150000
LOCATION:Online
SUMMARY:Optics for generic declarative server APIs
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: Optics for generic
  declarative server APIs\n\nMartin-Löf type theory has provided us with a
  new programming paradigm: One where types and terms have shed their
  differences in order to live harmoniously in the same universe. Despite
  this successful reunion we have yet to communicate this story to the
  people building today’s software\, for whom it is still a fairy-tale\,
  rather than reality.\n\n For this\, I will demonstrate how to use
  dependent types for a purpose that is extremely common in commercial
  software: Web servers. Web servers are a great example because of how
  ubiquitous they are. Every service\, company or product probably has a
  web server running behind it in some way (if only to serve web pages).
  Dependent types help the implementation of servers in small and big ways
  and the experience can be further enhanced by combining it with lenses in
  order to reach powerful new levels of abstraction.\n
UID:291
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210610T140000
DTEND;TZID=Europe/London:20210610T150000
LOCATION:Online
SUMMARY:Real Numbers in Agda
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Real Numbers in Agda\n\nIn a
  constructive logic real numbers are even more interesting than they are
  in the classical world. To demonstrate the differences\, I'll talk about
  how we can construct a type of real numbers in Agda in terms of the
  Cauchy completion of the metric space of rational numbers. This yields an
  implementation of real numbers that is reasonably efficient and that we
  can do proofs about. The basic construction closely follows Russell
  O'Connor's "A monadic\, functional implementation of real numbers" [1].
  I'll also talk about using the completion of a metric space to implement
  quantitative equational theories over complete separable metric spaces in
  Agda. I'll try to work from the assumption that the audience knows
  nothing about metric spaces\, completion\, or construction of real
  numbers.\n\n [1] https://arxiv.org/abs/cs/0605058\n
UID:290
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210527T150000
DTEND;TZID=Europe/London:20210527T160000
LOCATION:Online
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:289
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210617T150000
DTEND;TZID=Europe/London:20210617T160000
LOCATION:Online
SUMMARY:Executable Storytelling with Rule-Based Models
DESCRIPTION:Speaker: William Waites (LSHTM Centre for the Mathematical
  Modelling of Infectious Diseases)\nTitle: Executable Storytelling with
  Rule-Based Models\n\nI will tell a (very simplified) story about how the
  adaptive immune system works through the medium of rules. Rules are
  compositional creatures that can be looked at from the perspective of
  structured cospans\, algebras or double pushout graph rewriting systems.
  I won't belabour the abstract interpretation\, rather I will concentrate
  on how they can be used to good effect to both explain (normal mode)
  immune response to a pathogen like SARS-CoV-2 and generate a model that
  can be simulated and reproduces some interesting heterogeneity that is
  observed in the world. Furthermore\, compositionality means that this set
  of rules can be freely combined with sets of rules for transmission and
  diagnostic testing and will show this in action. Finally\, I’ll speculate
  about some other kinds of models that it might be interesting to
  incorporate.\n
UID:288
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210603T150000
DTEND;TZID=Europe/London:20210603T160000
LOCATION:Online
SUMMARY:A relationally parametric model of Quantitative Type Theory
DESCRIPTION:Speaker: Georgi Nakov (MSP)\nTitle: A relationally parametric
  model of Quantitative Type Theory\n\nPolymorphism allows a single
  function to be instantiated with multiple types. It is parametric if all
  of the instances behave uniformly. Reynolds managed to give rigorous
  formalization of this notion in his abstraction theorem for polymorphic
  lambda calculus. The key insight is that types may also be interpreted as
  relations. In this talk\, I will give an overview of relational
  parametricity and some of its consequences\, focus on an approach of
  extending parametricity to dependent type theories using reflexive graphs
  (due to Atkey\, Ghani and Johann) and finish by presenting a relationally
  parametric model of Quantitative Type Theory.\n
UID:287
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210520T150000
DTEND;TZID=Europe/London:20210520T160000
LOCATION:Online
SUMMARY:A Generic Framework for Analyzing (Featherweight) Java Programs
DESCRIPTION:Speaker: Chuangjie Xu (fortiss GmbH)\nTitle: A Generic
  Framework for Analyzing (Featherweight) Java Programs\n\nAs a notion to
  represent disjoint sets of memory locations\, regions serve as the basis
  of various techniques for e.g. memory management and pointer analysis.
  They are closely interrelated with effects\, and have been illustrated to
  be useful for improving the precision of analysis. We generalize the
  notion of region to represent properties of values\, introduce a region
  type system for Featherweight Java (FJ) that is parametrized with a
  monad-like structure\, and prove a uniform soundness theorem. Its
  instances include some type systems studied by Martin Hofmann et al. as
  well as a new one that performs more precise analysis of trace-based
  program properties. Our region type system is separate from the FJ type
  system\, making it simpler and also easier to move to larger fragments of
  Java. The uniform framework helps to avoid redundant work on the
  meta-theory when extending the system to cover other language features
  such as exception handling. This is joint work with Ulrich Schöpp.\n
UID:286
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210513T150000
DTEND;TZID=Europe/London:20210513T160000
LOCATION:Online
SUMMARY:Formalising the (Sub-)Structural Aspects of SystemVerilog\,
  Again...
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (Glasgow)\nTitle: Formalising
  the (Sub-)Structural Aspects of SystemVerilog\, Again...\n\nHardware
  design is commoditised and it might be the case that several components
  of your design use encrypted bitstreams bought from third-parties. We
  must have faith that the encrypted bitstreams do what they are supposed
  to. In the Border Patrol Project we are interested in being able to
  reason about the structure & behaviour of designs as a whole\, regardless
  of if we can inspect each module down to the individual gates.\n\n
  Following on from my SPLS Nov '20 I want to update everyone on my journey
  in capturing the physical structure of hardware design using
  lambda-calculi. Specifically\, I will re-introduce System-V\, a typed
  lambda calculus that is based upon the well-known hardware description
  and verification language SystemVerilog. I will show how a System-V
  design can capture physical hardware design in the Verilog style\, and
  its type-system enforce correct wiring. I will then show how we can
  formally look beyond System-V itself (and hardware design by extension)
  by leveraging known-things from programming-language theory\, and posit
  on where to go from here.\n
UID:285
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210506T150000
DTEND;TZID=Europe/London:20210506T160000
LOCATION:Online
SUMMARY:Categorical semantics of the Simply typed lambda calculus
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: Categorical semantics of
  the Simply typed lambda calculus\n\nThe Simply typed lambda calculus is a
  tried and true tool for experimentation and teaching\, today we're going
  to use it as our guide through an introduction to category theory.
  Category theory without proper motivation or context can be a bit
  puzzling to get into. But using the simply typed lambda calculus as our
  framework we will see what it takes in order to interpret it as a
  Cartesian Closed Category. This walkthough should provide you with the
  tools to understand Cartesian Closed Category as well as some hands-on
  experience with proving your first results in Category theory!\n
UID:284
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210429T150000
DTEND;TZID=Europe/London:20210429T160000
LOCATION:Online
SUMMARY:Games with players
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: Games with
  players\n\nThe algebra of open games is a compelling language for
  modelling large and medium scale games\, with many interacting players.
  Its most striking features are compositionality and an intuitive and
  expressive graphical calculus. In this talk I'll go through some recent
  developments in this area to sketch a general way to build open games\,
  starting from an informal specification\, a classical game\, or a bunch
  of given other games. The most important novelty is the presence of a
  well-defined and correct notion of player\, which was missing until now.
  The guiding principle will be that ‘games and players live in orthogonal
  planes’\, as suggested by the graphical language of the para
  construction.\n
UID:283
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210401T150000
DTEND;TZID=Europe/London:20210401T160000
LOCATION:Online
SUMMARY:All about convex sets
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: All about convex
  sets\n\nThis talk is about the algebras of the finite support probability
  monad on Set. They consist of a set equipped with a “mixture” operator
  satisfying some axioms\, and are variously known as (abstract) convex
  sets\, convex algebras\, barycentric algebras\, etc. Every
  actually-convex subset of a real vector space is a convex set\, but there
  are less expected examples too: every join-semilattice can be seen as a
  convex set\, and there are examples that combine aspects of both vector
  spaces and semilattices.\n\n I will spend a lot of time on the basic
  theory and examples\, which is mostly due to Marshall Stone. I’ll then
  transition into talking about work in progress with Paolo Perrone and
  Sharwin Rezagholi\, in which we aim to prove a version of Brouwer’s
  fixpoint theorem for convex sets. Specifically\, we aim to construct a
  “topological realisation” functor F: Conv -> Top and find sufficient
  convex properties on X such that F(X) satisfies the fixpoint property for
  continuous maps. Along the way we prove a classification theorem: every
  convex set can be decomposed as a family of convex subsets of vector
  spaces “fibred over” a semilattice (slightly improving a similar
  unpublished result by Tobias Fritz).\n
UID:281
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210325T150000
DTEND;TZID=Europe/London:20210325T160000
LOCATION:Online
SUMMARY:Type Preserving Crossover Operations for Genetic Programs
DESCRIPTION:Speaker: Donovan Crichton (Australian National
  University)\nTitle: Type Preserving Crossover Operations for Genetic
  Programs\n\nThis talk serves as my formal introduction to the MSP101
  Group\, and covers work from my Bachelor thesis. We will look at how
  dependent types can be used to enable a type-safe crossover operation to
  allow the generation of program examples that are guaranteed to be well
  typed. We'll also cover alternate approaches I could've taken\, as well
  as further work in the area.\n
UID:280
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210318T150000
DTEND;TZID=Europe/London:20210318T160000
LOCATION:Online
SUMMARY:Propositional Dynamic Logic(s)
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Propositional Dynamic
  Logic(s)\n\nI will provide an introduction to dynamic modal logics such
  as Propositional Dynamic Logic (PDL) and Game Logic (GL) and will then
  describe a (co)algebraic framework for these logics. This framework
  relates program/game constructs of these logics to monad structure. The
  axioms of these logics express compatibility requirements between the
  modal operators and the monad structure.\n
UID:279
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210311T150000
DTEND;TZID=Europe/London:20210311T160000
LOCATION:Online
SUMMARY:Quantitative containers
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Quantitative
  containers\n\nQuantitative Type Theory combines linear types (where we
  keep track of how many times a variable is used) and dependent types
  (where terms can appear in types). This gives a logical system which is
  both expressive and precise with respect to the resource usage of
  programs and proofs\, with a rich model theory. I will talk about work in
  progress investigating data types in this setting\, in the form of
  "resource-aware" quantitative containers\, and their initial algebra
  semantics.\n\n This is joint work with Georgi Nakov.\n
UID:278
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210304T150000
DTEND;TZID=Europe/London:20210304T160000
LOCATION:Online
SUMMARY:Quantitative Iteration Theories
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Quantitative Iteration
  Theories\n\nWe develop a fixed-point extension of quantitative equational
  logic and give semantics in one-bounded complete quantitative algebras.
  Unlike previous related work about fixed-points in metric spaces\, we are
  working with the notion of approximate equality rather than exact
  equality. The result is a novel theory of fixed points which can not only
  provide solutions to the traditional fixed-point equations but we can
  also define the rate of convergence to the fixed point. We show that such
  a theory is the quantitative analogue of a Conway theory and also of an
  iteration theory\; and it reflects the metric coinduction principle. We
  study the Bellman equation for a Markov decision process as an
  illustrative example.\n\n This is a recent joint work with Gordon Plotkin
  and Prakash Panangaden.\n
UID:277
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210225T150000
DTEND;TZID=Europe/London:20210225T160000
LOCATION:Online
SUMMARY:Some Thoughts on a Datatype for Higher Genus Graphs
DESCRIPTION:Speaker: Malin Altenmüller (MSP)\nTitle: Some Thoughts on a
  Datatype for Higher Genus Graphs\n\nCircuit diagrams are commonly
  modelled by graphs embedded into some oriented surface (maps). When the
  circuit's topology is non-trivial (e.g. for quantum circuits)\, the maps
  live on higher genus surfaces. I will give an introduction to the
  relevant graph theory and discuss some ideas on how we might be able to
  program with these higher genus structures. Starting from the plane
  case\, a multi-stack approach seems promising for approaching these more
  complex maps. Strategies for modelling structures with multiple stacks
  exist in various different contexts and any of your experiences are most
  welcome in the discussion!\n
UID:276
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210218T160000
DTEND;TZID=Europe/London:20210218T170000
LOCATION:Online
SUMMARY:Internal ∞-Categories with Families
DESCRIPTION:Speaker: Nicolai Kraus (University of Nottingham)\nTitle:
  Internal ∞-Categories with Families\n\nIt is natural to formalise the
  notion of a model of type theory (especially the syntax = intended
  initial model) inside type theory itself. This is often done by writing
  the definition of a category with families (CwF) as a generalised
  algebraic theory. What could the success criterion from a HoTT point of
  view be? The typical first goal is that the initial model is an h-set or
  even has decidable equality. Our second goal is to make the "standard
  model" work\, i.e. the universe U should be a CwF in a straightforward
  way (cf. Mike Shulman's 2014 question whether the n-th universe in HoTT
  models HoTT with n-1 universes). Unfortunately\, it is hard to combine
  these two goals. If we include set-truncatedness explicitly in the
  definition of a CwF\, then the "standard model" is not a CwF. If we
  don't\, then the initial model is not an h-set. The root of the problem
  is that 1-categories are not well-behaved concepts in an untruncated
  setting. The natural approach are higher categories\, which corresponds
  to "equipping the syntax with all coherences" instead of truncating. In
  this talk\, I will explain one approach to this based on a type-theoretic
  formulation of Segal spaces\, expressed in HTS/2LTT. I will discuss what
  works and what is still open. The talk will be based on
  <aXiv:2009.01883</ (tps://arxiv.org/abs/2009.01883'>)
UID:275
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210211T150000
DTEND;TZID=Europe/London:20210211T160000
LOCATION:Online
SUMMARY:Categorical Foundation of Gradient-Based Learning
DESCRIPTION:Speaker: Bruno Gavranović (MSP)\nTitle: Categorical
  Foundation of Gradient-Based Learning\n\nI will give an introduction to
  the categorical foundation of gradient-based learning algorithms. I'll
  define three abstract constructions and show how they can be put together
  to form general neural networks. The Para construction is used to compose
  neural networks while keeping track of their weights. Lenses/Optics which
  are used to take care of the forward-backward data flow and lastly\,
  reverse derivative categories are used to functorially construct the
  backward wires from the forward ones. In addition\, we'll see that
  gradient descent\, Momentum\, and a number of optimizers are lenses too\,
  and that this framework includes learning on boolean circuits\, in
  addition to standard Euclidean spaces.\n
UID:274
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210204T150000
DTEND;TZID=Europe/London:20210204T160000
LOCATION:Online
SUMMARY:Reviewing
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Reviewing\n\nI'll talk about
  how I go about writing\, reading\, and responding to reviews. Reviews are
  an essential part of academic publishing\, but why do we do them (for
  free!)\, and why do we care what they say? I discuss how reviews are used
  by programme committees and chairs to decide what papers are selected for
  conferences (and journals)\, how I think you should go about doing
  reviews\, and why you should write reviews. I'll also talk about reading
  reviews written about your own work\, and how to go about the author
  response period effectively.\n
UID:273
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210128T150000
DTEND;TZID=Europe/London:20210128T160000
LOCATION:Online
SUMMARY:Combinatorics\, Topology and Game theory: a proof of Nash's
  theorem
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: Combinatorics\, Topology
  and Game theory: a proof of Nash's theorem\n\nThe aim of this talk is to
  state and prove Nash's theorem\, which says that every finite game with
  mixed strategies has a Nash equilibrium. The proof makes use of two other
  famous results: Sperner's lemma\, a combinatorial result about coloring
  the vertices of a triangulation\, and Brouwer's fixed-point theorem.
  Thus\, my talk will be organised into three largely independent parts:
  first I will sketch the proof of Sperner's lemma\; then I will use
  Sperner's lemma to prove Brouwer's theorem\; and finally I will use
  Brouwer's theorem to prove the existence of Nash equilibria.\n
UID:272
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20210107T130000
DTEND;TZID=Europe/London:20210107T140000
LOCATION:Online
SUMMARY:Generic metatheory of linear programming languages
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: Generic metatheory of
  linear programming languages\n\nI will give an introduction to generic
  metatheory in the style of Allais\, Atkey\, Chapman\, McBride\, and
  McKinna\, leading into new work from me and Bob. Generic metatheory is
  about deriving proofs and operations for a whole class of programming
  languages\, rather than the usual 1 language. The class we consider
  combines variable binding with usage-sensitivity\, and contains many
  variants of linear natural deduction calculi (and\, as a special case\,
  intuitionistic and classical calculi). We build on the framework of
  Allais et al. (https://arxiv.org/abs/2001.11001) and our recent use of
  linear algebra in linear metatheory (https://arxiv.org/abs/2005.02247).\n
UID:271
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201217T130000
DTEND;TZID=Europe/London:20201217T140000
LOCATION:Online
SUMMARY:Algebraic effects and effect handlers
DESCRIPTION:Speaker: Sam Lindley (University of Edinburgh)\nTitle:
  Algebraic effects and effect handlers\n\nI'll give an introduction to
  algebraic effects and effect handlers as a general approach to
  programming and reasoning about effectful computation. I'll present the
  notion of a computation over an algebraic effect as a command-response
  tree over an effect signature quotiented by some equational theory. I'll
  consider how to interpret command-response trees and motivate effect
  handlers as the reification of such interpretations as an object language
  feature that provides a generic implementation strategy for algebraic
  effects. I'll give examples to show that it can be useful to interpret
  the same command-response tree using different interpretations which may
  not respect the same equational theory. Thus effect handlers can provide
  an expressive programming feature independently of any non-trivial
  algebraic theory.\n
UID:270
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201210T130000
DTEND;TZID=Europe/London:20201210T140000
LOCATION:Online
SUMMARY:Session Types
DESCRIPTION:Speaker: Uma Zalakain (University of Glasgow)\nTitle: Session
  Types\n\nThis talk is a brief introduction to session types\, a type
  formalism for structured communication between concurrent programs.
  Instead of typing programs\, we will session type channel endpoints\, to
  then ensure that the programs that make use of these endpoints do so in a
  principled manner\, according to their session types. I will go over some
  of the key ideas that enable session-typed programming\, and comment on
  the properties that session-typed programs exhibit. As an example\, I
  will introduce (and comment on the oddities of) a type system that uses
  session types to type the pi calculus. I will close mentioning some of
  the extensions to session types and more advanced type systems.\n
UID:269
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201203T130000
DTEND;TZID=Europe/London:20201203T140000
LOCATION:Online
SUMMARY:Metrics in probabilistic context
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Metrics in probabilistic
  context\n\nThis talk will (probably) be a tutorial on how metrics meet
  probability theory and how this provides us with the context for
  innovative paradigms in computer science. The novel challenges that
  machine learning\, cyber-physical systems and statistical computational
  methods rise to computer science require a fundamental change of the
  semantics of computation. While in the past we were happy to know whether
  two programs/algorithms/machines behave the same or not\, today it is
  obvious that this is not enough for our purposes. We need\, more and
  more\, to be able to reason about and measure the similarity of
  non-identical computational behaviours. Moreover\, we need to speak about
  randomness in computational phenomena\, especially when we formalize
  learning or behaviours in unknown contexts. Last but not least\, we need
  to eventually replace the classic metatheory of computation with a
  probabilistically-based one\, where questions can be answered
  probabilistically within controlled confidence boundaries.\n\n I will not
  have the time to approach all these during the talk\, but I will try to
  give an overview of the mathematical instruments one needs to approach
  such a complex challenge.\n
UID:268
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201126T130000
DTEND;TZID=Europe/London:20201126T140000
LOCATION:Online
SUMMARY:Event Structures and Games
DESCRIPTION:Speaker: Glynn Winskel (MSP)\nTitle: Event Structures and
  Games\n\nI’ll introduce event structures\, a model of computation in
  which behaviour is captured through partial orders of causal dependency
  between events. As an application I'll show their role in a theory of
  concurrent/distributed games and strategies\, which has been useful in
  the semantics of computation\, also for probabilistic and quantum
  programs. Though originally motivated by the limitations of traditional
  semantics\, through determinacy and value theorems\, and the preservation
  of winning/optimal strategies under composition\, a form of structural
  game theory is emerging. In this talk I'll concentrate on what I see as
  connection points with work here at Strathclyde: as a lead in\, relations
  with the stable domain theory of Berry and Girard\; then\, the view of
  strategies as profunctors\, whence how they connect to the traditional
  domain theory of Scott\; concluding with how distributed strategies
  support certain dialectica categories and lenses\, and through them open
  games. My hope is that these connections will be fruitful. On the one
  side\, distributed games can offer a rich metalanguage which extends to
  probabilistic and quantum computation.\n
UID:267
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201119T130000
DTEND;TZID=Europe/London:20201119T140000
LOCATION:Online
SUMMARY:Containers
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle:
  Containers\n\nHow do we represent and reason about data types\, in
  general? The theory of containers is one answer\, which is locally quite
  popular in the MSP group (and beyond). A container is given by a
  collection of shapes\, and for each shape\, a collection of positions\,
  where one is meant to plug in data. Containers can be used to analyse
  generic constructions on data types\, without resorting to a messy
  induction over syntax.\n\n Each container induces a functor from Set to
  Set\, which maps an "element type" X to the set of containers with data
  drawn from X. Furthermore\, there is a natural notion of morphism of
  containers\, with the remarkable property that it completely captures the
  natural transformations between the functors the containers represent:
  the interpretation functor from containers to the functor category from
  Set to Set is full and faithful. In general\, the category of containers
  is extremely nice\, eg containers are closed under almost all operations
  you can imagine (composition\, products\, coproducts\, exponentials\,
  initial algebras\, final coalgebras\, ...). I hope to give an
  introductory talk that will make the above more precise.\n
UID:266
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201112T130000
DTEND;TZID=Europe/London:20201112T140000
LOCATION:Online
SUMMARY:Lenses 101
DESCRIPTION:Speaker: Jules Hedges (MSP)\nTitle: Lenses 101\n\nI’ll talk
  about the zoo of closely-related structures (with a lot of clashing
  terminology) known as “lenses” and “optics”. Lenses and optics are a way
  of managing inherently state-heavy applications (for example videogames)
  in purely functional languages\, which turn out to have a lot of
  surprisingly deep category theory behind them. I will also talk about
  some of the places where lenses have recently appeared far outside their
  original domain\, for example in game theory\, machine learning and
  systems theory.\n
UID:265
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201105T130000
DTEND;TZID=Europe/London:20201105T140000
LOCATION:Online
SUMMARY:Probability theory with string diagrams
DESCRIPTION:Speaker: Eigil Rischel (MSP)\nTitle: Probability theory with
  string diagrams\n\nGoing back to Lawvere\, people have tried to study
  probability theory in terms of monads - the idea being that for each
  "space" of some type\, X\, there should be a space PX of probability
  distributions on X\, with point-distributions and integration of
  distributions giving the monad structure. The Kleisli category of this
  monad is of particular interest: it corresponds to "stochastic maps"
  between spaces.\n\n It turns out that one can actually often do without
  the monad - the Kleisli category itself carries enough structure that one
  can do probability theory "internally"\, rederiving the notions of
  determinism\, independence of measures\, and many others. I will present
  this picture of probability\, and give some examples of results that can
  be proven in this framework.\n
UID:264
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201029T130000
DTEND;TZID=Europe/London:20201029T140000
LOCATION:Online
SUMMARY:Realisability
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Realisability\n\nSometimes\,
  we think of the category of sets and functions as a simple model of
  programs in a functional programming language. But sets and functions are
  much too expressive -- there are plenty of set theoretic functions that
  aren't expressible in any implementable programming language.
  Realisability is a way to bring functions down to earth by requiring that
  they are computable in some model of computation. I'll cover the
  construction of categories of realizable functions\, usually called the
  category of Assemblies\, and its interesting sub-category\, the category
  of Modest Sets or PERs. I'll also sketch how to interpret type theory in
  the category of assemblies. If there is time\, I'll also cover linear
  realisability.\n
UID:263
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201022T130000
DTEND;TZID=Europe/London:20201022T140000
LOCATION:Online
SUMMARY:Fantastic sheaves and where to find them
DESCRIPTION:Speaker: Matteo Capucci (MSP)\nTitle: Fantastic sheaves and
  where to find them\n\nSheaves are among the oddest creatures roaming the
  world of mathematics. They come from the far land of algebraic geometry\,
  they speak a tricky language\, and they organize in unfathomably big
  herds ('topoi'). There's no reason to be afraid\, though: sheaves can be
  the tamest beasts and provide many useful services to the mathematician
  who's willing to learn their ways. In this talk\, I'll try to demystify
  sheaves by giving an elementary exposition of their basic features\,
  trying to convey useful intuition about their behaviour. I will also try
  to give a taste some of their most astounding tricks\, such as sheaf
  cohomology and topos-theoretic forcing.\n
UID:262
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201015T130000
DTEND;TZID=Europe/London:20201015T140000
LOCATION:Online
SUMMARY:Quantitative Type Theory and its application
DESCRIPTION:Speaker: Andre Videla (MSP)\nTitle: Quantitative Type Theory
  and its application\n\nTo build upon last week's talk on Dependent
  types\, we will develop the intuition around Quantitative types and their
  usage in modern programming languages. What does it mean to program when
  the type system is responsible for tracking resources rather than leave
  this task to the programmer? What new patterns do we see? And what are
  the limitations we encounter and how do we fix them? This talk aims to
  answers those questions in an approachable and interactive way.\n
UID:261
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201008T130000
DTEND;TZID=Europe/London:20201008T140000
LOCATION:Online
SUMMARY:Dependent Types
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Dependent Types\n\nI'll
  give an introduction to the setup for dependent type theories\, in the
  bidirectional style\, again sketching why fundamental metatheoretic
  properties hold by not asking the wrong questions. In particular I'll
  develop the theory of dependent function types\, then add lists. Let's
  conspire to make append associative\, and if time permits\, map a
  functorial action.\n
UID:260
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20201001T130000
DTEND;TZID=Europe/London:20201001T140000
LOCATION:Online
SUMMARY:Introduction to Monoidal Categories
DESCRIPTION:Speaker: Joe Collins (MSP)\nTitle: Introduction to Monoidal
  Categories\n\nA nice\, chill introduction to the basic definitions and
  theorems on monoidal categories. We will be defining monoidal categories
  and symmetric monoidal categories\, and talking about the coherence
  theorem and string diagrams.\n
UID:259
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200924T130000
DTEND;TZID=Europe/London:20200924T140000
LOCATION:Online
SUMMARY:Bidirectional STLC
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Bidirectional STLC\n\nBy
  way of kicking off this semester of MSP101\, I'll give an introduction to
  our local dialect of bidirectional type systems\, defined as mutually
  inductive systems of moded judgments. That is\, we not only assign a
  syntactic category to each place in a judgment form\, but also designate
  its mode as being "input"\, "subject"\, or "output". The syntactic
  categories of introduction and elimination forms are distinguished: the
  former have types as inputs\, the latter types as outputs. I'll
  illustrate this using the Simply Typed Lambda-Calculus\, and I'll rattle
  through as much metatheory thereof as I can before you bottle me off.\n
UID:258
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200910T130000
DTEND;TZID=Europe/London:20200910T140000
LOCATION:https://meet.jit.si/MSP101/
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:257
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200703T140000
DTEND;TZID=Europe/London:20200703T150000
LOCATION:Online
SUMMARY:Compositional Game Theory\, compositionally
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: Compositional Game
  Theory\, compositionally\n\nThe recent notion of Open Games allows to
  study game theory in a compositional way: complex games can be obtained
  from smaller ones using various operators such as sequential and parallel
  composition. Thus\, Open Games form a symmetric monoidal category. There
  are many flavors of open games\, ranging from small variations on how
  equilibria are treated\, to more radical changes such as introducing
  probabilistic behavior. Proving from scratch that each variant still
  forms a monoidal category is tedious.\n\n I will present a compositional
  construction of the category of Open Games\, which consists of three main
  steps. In each step\, one can swap a component for a similarly-behaved
  one\, without disturbing the rest of the structure. Thus\, one can define
  many variants of Open Games with minimal effort. This compositional
  approach is based on the notion of Arrows\, a concept first introduced in
  functional programming.\n\n This is a practise talk for ACT20 next week\,
  and joint work with Bob\, Bruno\, Neil\, Clemens and Fred.\n
UID:256
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200619T140000
DTEND;TZID=Europe/London:20200619T150000
LOCATION:Online
SUMMARY:Building Resource-Dependent EDSLs in a Dependently-Typed Language
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (Glasgow)\nTitle: Building
  Resource-Dependent EDSLs in a Dependently-Typed Language\n\nWhile many
  people use dependent types for theorem proving some of us like to use
  dependent types for building\, and running\, safer programs.\n\n Idris'
  /Effects/ library demonstrates how to embed resource dependent algebraic
  effect handlers into a dependently typed host language\, providing
  run-time and compile-time based reasoning on type-level resources.
  Building upon this work\, /Resources/ is a framework for realising EDSLs
  with type systems that contain domain specific substructural properties.
  Differing from /Effects/\, /Resources/ allows a language's substructural
  properties to be encoded within type-level resources that are associated
  with language variables. Such an association allows for multiple effect
  instances to be reasoned about autonomically and without explicit
  type-level declaration. We use type-level predicates as proof that a
  language's substructural properties hold.\n\n Using /Resources/ we have
  shown how to provide correctness-by-construction guarantees that
  substructural properties of written programs hold when working with
  =Files=\, specifying Domain Specific =BiGraphs=\, and Global Session
  Descriptions---=Sessions=. With this talk I want to discuss the how and
  why of /Resources/\, and show how we can use the framework to build EDSLs
  with interesting type-systems.\n\n This talk is part practise talk for
  ECOOP 2020\, part tutorial on an important idiom for practical
  dependently-typed programming\, and part chance to highlight more how
  dependent-types are useful when programming in the real world.\n
UID:254
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200612T140000
DTEND;TZID=Europe/London:20200612T150000
LOCATION:Online
SUMMARY:Interpreting Dependent Type Theory in Containers
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Interpreting Dependent Type
  Theory in Containers\n\nIn her PhD thesis\, Tamara von Glehn showed that
  the Category of Containers (a.k.a. Category of Polynomials\, Category of
  Dependent Lenses\, Dialectica Category) supports an interpretation of
  dependent types. I'll present the basic constructions used\, and\, if I
  get to it\, show that the model refutes the principle of functional
  extensionality.\n
UID:253
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200605T090000
DTEND;TZID=Europe/London:20200605T143000
LOCATION:Online
SUMMARY:Event: Verification of Session Types Workshop (VEST)
DESCRIPTION:
UID:252
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200529T110000
DTEND;TZID=Europe/London:20200529T120000
LOCATION:Online
SUMMARY:The 'graded types' paradigm: past\, present\, and a possible
  future
DESCRIPTION:Speaker: Dominic Orchard (University of Kent)\nTitle: The
  'graded types' paradigm: past\, present\, and a possible future\n\nIn the
  1970s\, the notion of 'grading' appeared in analytic philosophy and logic
  as a way of making reasoning more fine-grained\, capturing 'degrees' of
  necessity or possibility. Somewhat independently\, grading has become a
  topic of interest in type theory and programming language semantics\,
  with graded structures again providing a means of more fine-grained
  reasoning. In this talk\, I will give an overview of this idea (both its
  past and present) and explore two uses: (1) using graded modal types for
  program reasoning in the context of an experimental functional language
  with linear and indexed types\, called Granule\; (2) specialising program
  semantics to give correct-by-construction arguments about program
  analyses and transformations. I will also give a mathematical
  characterisation of grading which suggests a broad paradigm\, and will
  briefly mention various ongoing works.\n
UID:251
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200522T140000
DTEND;TZID=Europe/London:20200522T150000
LOCATION:Online
SUMMARY:A quantitative model for λ-calculus
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: A quantitative model for
  λ-calculus\n\nResource monoids and length spaces are a semantic framework
  inspired from realizability\, which was introduced by Dal Lago and
  Hofmann in the context of implicit complexity. It has been used to define
  quantitative models for various programming languages (such as Elementary
  Affine Logic\, LFPL)\, and deduce soundness properties of the form:
  "Every definable function lies in a given complexity class". In this
  talk\, I will show how this framework can be used to measure different
  quantitative properties of a language than time complexity. Namely\, I
  will present a model of simply-typed λ-calculus such that the
  interpretation of a λ-term contains an upper bound on the size of its
  normal form.\n
UID:250
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200515T140000
DTEND;TZID=Europe/London:20200515T150000
LOCATION:Online
SUMMARY:A Linear Algebra Approach to Linear Metatheory
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: A Linear Algebra Approach
  to Linear Metatheory\n\nSince its introduction\, linear logic has been
  the cause of and solution to many problems in theoretical computer
  science. There are many examples in the literature of calculi which
  restrict usage of variables\, allowing them to capture linearity\,
  monotonicity\, sensitivity analysis\, privacy constraints\, and other
  coeffects. However\, the syntactic metatheory of these calculi is often
  difficult\, and rarely in a form amenable to formalisation in a proof
  assistant.\n\n In this talk\, I will introduce the notion of kits and
  environments yielding generic traversals – a method developed by Conor
  for proving renaming and substitution lemmas. Then\, I will discuss
  recent work by myself and Bob on adapting this method to semiring-graded
  calculi. The result is a pleasingly and surprisingly minor variation on
  the original\, comprising the introduction of a linear map to mediate
  usage annotations. This solution gives us confidence that we can tackle
  all of quantitative metatheory in the familiar intuitionistic style.\n
UID:249
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200501T140000
DTEND;TZID=Europe/London:20200501T150000
LOCATION:Online
SUMMARY:Stone duality for Markov processes (second attempt)
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Stone duality for Markov
  processes (second attempt)\n\nThe talk will focus on the category of
  Markov processes\, on Markovian logics and Aumann algebras. Markovian
  logics are modal logics designed to specify (approximated) properties of
  Markov processes and characterize their bisimilarity. Aumann algebras are
  the algebraic counterpart of Markovian logics\, i.e.\, they are Boolean
  algebras with operators that encode probabilistic information. Markovian
  logics are not compact and for this reason the "classic" Stone duality
  fails. I will present a different version of Stone duality constructed on
  top of Rasiowa-Sikorski lemma\, which is a result bringing topological
  results into Model Theory.\n\n This talk summarizes results obtained in
  collaboration with Dexter Kozen and Prakash Panangaden.\n
UID:248
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200424T140000
DTEND;TZID=Europe/London:20200424T150000
LOCATION:Online
SUMMARY:Something Else About Mary
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Something Else About
  Mary\n\nThis is very much work in progress\, jointly with Guillaume
  Allais (now of St Andrews) and Fredrik Nordvall Forsberg\, with
  occasional involvement from others of the usual MSP suspects.\n\n Mary is
  our attempt to build a virtual learning environment which offers
  effective support to our own classes\, building from the experience (but
  thankfully not the codebase) of the tools I built for teaching and
  assessing my first year hardware class. Last time I talked about Mary\,
  she was just a twinkle in my eye. Now\, she is at least a toddler.\n\n
  Mary is a variant on pandoc markdown which allows code fragments to be
  embedded in documents and document fragments to be embedded in code. This
  talk will focus mainly on the programming language embedded in the system
  which is currently called "Shonkier"\, as it is a variant on the "Shonky"
  language to which Frank compiles. It is untyped\, for the time being\,
  but that's an opportunity.\n\n The key design choice in Shonkier is that
  the C-style function application notation\, f(e1,..,en)\, is used for all
  sorts of contextualization\, and there are many such sorts. "Functions"
  (which already generalize to effect handlers) are but one form of
  context. We have also added first class environments (computed by pattern
  matching expressions) and guarding contexts (computed by Boolean
  expressions). One recent tweak which pays dividends is that effect
  handlers can now reply to requests with effects as well as with values.
  We are now free to negotiate various forms of contingency in a
  refreshingly direct style.\n\n In short\, we have abandoned the naive
  delights of being context-free in favour of being context-negotiable.\n
UID:247
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200417T140000
DTEND;TZID=Europe/London:20200417T150000
LOCATION:Online at https://meet.jit.si/MSP101
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:246
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200206T140000
DTEND;TZID=Europe/London:20200206T150000
LOCATION:LT1415
SUMMARY:Rust\, Servo and Mixed Reality Research at Mozilla
DESCRIPTION:Speaker: Alan Jeffrey (Mozilla)\nTitle: Rust\, Servo and
  Mixed Reality Research at Mozilla\n\nMozilla is a non-profit whose
  mission is to expand access to\, and protect privacy on\, the Internet.
  Mozilla Research investigates emerging technologies\, such as programming
  languages and new web platforms. This talk is an overview of research
  efforts around the Rust programming language\, the Servo web engine\, and
  Mixed Reality (VR and AR) on the web.\n
UID:245
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200327T140000
DTEND;TZID=Europe/London:20200327T150000
LOCATION:https://meet.jit.si/MSP101
SUMMARY:Multidimensionally-correct by construction programming
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle:
  Multidimensionally-correct by construction programming\n\nPhysical
  dimensions such as length\, mass and time can be used to ensure that
  equations are physically meaningful -- it makes no sense to add 7 metres
  to 12 seconds\, and in an equation such as PV = nRT\, it better be the
  case that both sides have the same physical dimension (in this case
  pressure times length^3). Even better\, dimensions can not only be used
  to tell scientists off when making mistakes\, but also to deduce
  non-trivial formulas (the famous example being that of the period of a
  pendulum as a function of its mass and length\, and the acceleration of
  gravity).\n\n From an MSP perspective\, there is a strong similarity
  between physical dimensions and types in programming languages\, and
  indeed\, this connection was explored in the 1990's by various
  researchers. A concrete outcome is Andrew Kennedy's implementation of
  units of measure in Microsoft's F# language\, which makes it possible to
  write F# programs that are dimensionally-correct by construction.\n\n
  However\, a lot of numerical software is written manipulating not single
  numbers\, but vectors and matrices\, using the methods of linear algebra.
  I will report on work in progress with Conor on extending dimensional
  analysis to multiple dimensions in this second sense.\n
UID:243
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200403T140000
DTEND;TZID=Europe/London:20200403T150000
LOCATION:https://meet.jit.si/MSP101
SUMMARY:Completeness of Modal Logic via Stone Duality
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Completeness of Modal
  Logic via Stone Duality\n\nThis talk is intended to be introductory\,
  building on Radu's earlier intro to Stone duality. In my presentation I
  will show how to use duality for proving completeness of basic
  (propositional) modal logic. To this aim I will first recall what
  completeness means and then discuss two different kinds of semantics for
  modal logic: its algebraic semantics\, wrt which completeness of the
  logic is relatively straightforward\, and Kripke semantics\, which is the
  semantics one usually is interested in. Stone Duality allows to establish
  a connection between the two types of semantics such that completeness of
  modal logic wrt Kripke semantics follows.\n
UID:242
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200306T140000
DTEND;TZID=Europe/London:20200306T150000
LOCATION:LT1310
SUMMARY:Classic puns
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: Classic puns\n\nThere are
  several principles that are taken to be characteristic of
  non-constructive reasoning. These include the principles of excluded
  middle\, double negation elimination\, and choice.\n\n On the other
  side\, there are several formal systems that are well known to capture
  only constructive reasoning. These include dependent type theory (à la
  Martin-Löf) and linear logic.\n\n However\, each of the systems I just
  listed is able to derive at least one theorem that looks an awful lot
  like one of the non-constructive principles I listed earlier. What's
  going on here?\n
UID:240
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200228T140000
DTEND;TZID=Europe/London:20200228T150000
LOCATION:LT1310
SUMMARY:The Dialectica Categories
DESCRIPTION:Speaker: Georgi Nakov (MSP)\nTitle: The Dialectica
  Categories\n\nThe Dialectica Categories were introduced in de Paiva's
  eponymous work as an internalized version of Gödel's functional
  interpretation. The interpretation translates Heyting Arithmetic (HA)
  into System T (intended as an axiomatization of primitive recursive
  functionals of finite type) and was originally developed as a tool to
  prove the relative consistency of HA. Translating the contraction rule
  poses certain problems and as a solution\, Gödel requires decidability of
  atomic formulae. Several variants exist that lift this restriction.\n\n
  In this talk\, I will present the categorical constructions from de
  Paiva's paper. We will investigate their structure and see how the
  different versions of the interpretation are accommodated in this
  setting. Finally\, we will conclude that in the process we have obtained
  a model of Intuitionistic Linear Logic.\n
UID:239
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200214T140000
DTEND;TZID=Europe/London:20200214T150000
LOCATION:LT1310
SUMMARY:Towards Compositional Structures in Neural Networks
DESCRIPTION:Speaker: Bruno Gavranović (MSP)\nTitle: Towards Compositional
  Structures in Neural Networks\n\nNeural networks have become an
  increasingly popular tool for solving many real-world problems. They are
  a general framework for differentiable optimization which includes many
  other machine learning approaches as special cases. However\, at the
  moment there is no comprehensive mathematical account of their behavior.
  I'm exploring the hypothesis that the language of category theory could
  be well suited to describe these systems in a precise manner. I will give
  a short tour of recent developments in this area\, mostly based around
  the notion of lenses.\n
UID:237
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200207T140000
DTEND;TZID=Europe/London:20200207T150000
LOCATION:LT1415
SUMMARY:Stone Duality in Stochastic Context
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Stone Duality in
  Stochastic Context\n\nWe define Aumann algebras\, an algebraic analog of
  probabilistic modal logic. An Aumann algebra consists of a Boolean
  algebra with operators modeling probabilistic transitions. We prove that
  countable Aumann algebras and countably-generated continuous-space Markov
  processes are dual in the sense of Stone. Our results subsume existing
  results on completeness of probabilistic modal logics for Markov
  processes.\n\n This summarizes results obtained in collaboration with
  Dexter Kozen and Prakash Panangaden.\n
UID:236
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200131T140000
DTEND;TZID=Europe/London:20200131T150000
LOCATION:LT1310
SUMMARY:Resource Constrained Programming with Full Dependent Types
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Resource Constrained
  Programming with Full Dependent Types\n\nI will talk about a system that
  combines Dependent Types and Linear Types. As an application of this
  system\, I will show how to transport Martin Hofmann's LFPL and Amortised
  Resource analysis systems for resource constrained computing to full
  dependent types. This results in a theory where unconstrained
  computations are allowed at the type level\, but only polynomial time
  computations at the term level. The combined system now allows one to
  explore the world of propositions whose proofs are not only
  constructive\, but also of restricted complexity.\n
UID:235
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200124T140000
DTEND;TZID=Europe/London:20200124T150000
LOCATION:LT1310
SUMMARY:Simplicial Models for Multi-Agent Epistemic Logic
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: Simplicial Models for
  Multi-Agent Epistemic Logic\n\nEpistemic Logic is the modal logic of
  knowledge. It allows one to reason about a finite set of agents who can
  know facts about the world\, and about what the other agents know. The
  traditional way to interpret epistemic logic formulas is by using Kripke
  models: that is\, graphs whose vertices represent the possible worlds\,
  and whose edges indicate the agents that cannot distinguish between two
  worlds. I will present an alternative kind of model for epistemic logic
  based on chromatic simplicial complexes. Simplicial models are equivalent
  to Kripke models\; thus\, this connection uncovers the higher-dimensional
  geometric nature of knowledge. Finally\, I will show how to adapt these
  geometric models in order to interpret other epistemic notions\, such as
  belief\, distributed knowledge\, and more.\n
UID:234
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200117T140000
DTEND;TZID=Europe/London:20200117T150000
LOCATION:LT1310
SUMMARY:Something About Mary
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Something About
  Mary\n\nQuite a few colleagues in the MSP group have experienced both the
  pleasure and the pain of working with my Marx system in the course of
  delivering our classes. (I never meant to write a virtual learning
  environment\, but somehow\, I sort of did.) I propose to re-engineer it
  from scratch and do a rather better job (suitable for wider deployment)
  deliberately\, and am keen to solicit assistance in this mission\, lest
  it be yet another engineering project distinguished by my madness and
  dissolution that you are\, even so\, obliged to put up with. Inevitably\,
  I will struggle and rapidly fail to exclude interesting computer science
  from the design of the system. There will be fun.\n\n Mary will be a
  content management system with pages written in Markdown and stored in
  git repositories on the department's GitLab server. However\, every such
  page is also a form\, supporting interactive content. Pages will
  therefore need to embed code for processing the data in the form\,
  certainly on the server\, but preferably (unlike in Marx) on the client.
  So Mary will embed a programming language that we might have fun
  designing and implementing. I propose to base this language on Frank\, an
  effects and handlers language that I cooked up a while back. Access to
  form fields can be seen as an effect: by remember the resumption for each
  such access\, we can model what to recompute in the client when fields
  change\, after the fashion of spreadsheets\, programmed in apparently
  direct style.\n\n Mary will also need to maintain a database to achieve
  cross-session persistence of student work and staff configuration data.
  The Marx approach to analytics over this database amounted to "grep". In
  the meantime\, however\, Fred and I spent quite a while thinking about
  how to give an account of data models and analytics at a higher level of
  abstraction using carefully undermarketed ideas from dependent type
  theory. We should consider how to adapt these ideas to manage our own
  data.\n\n Let's get excited and make things!\n\n (Comrades who are not
  Strathclyders but who are interested in effects\, types\, or just having
  better tools to survive this business we call higher education\, should
  very much feel invited to engage. I will happily export this project.)\n
UID:233
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20200116T133000
DTEND;TZID=Europe/London:20200116T143000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:232
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191030T120000
DTEND;TZID=Europe/London:20191030T170000
LOCATION:University of Glasgow
SUMMARY:Event: SPLS
DESCRIPTION:
UID:231
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191212T133000
DTEND;TZID=Europe/London:20191212T143000
LOCATION:LT1310
SUMMARY:Potato Powered Proofs
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Potato Powered
  Proofs\n\nStuart and I have been working on interpreters for predicative
  calculi which are "potato-powered" in that they work by structural
  recursion on inductive data which may look suspiciously like types\, but
  are not statically checked to be the actual types of the programs in
  question. This works because the calculi are presented in a bidirectional
  style which\, by design\, causes every redex to carry some "potatoes"\,
  which hopefully contain enough inductive carbohydrate to keep you going
  for the whole of the computation to be done.\n\n Naturally\, it would be
  lovely if we could prove that the interpreter's output is genuinely a
  reduct of its input\, and that well typed input yields normal form output
  (i.e.\, that an honest type gives the potatoes required to do the whole
  computation). How is it done? Potato-powered logical relations\, of
  course! I'll give a crash course on cooking programs and proofs with
  potatoes.\n
UID:230
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191205T133000
DTEND;TZID=Europe/London:20191205T143000
LOCATION:LT1310
SUMMARY:Boolean-valued semantics
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Boolean-valued
  semantics\n\nThis talk is based on the paper with the same title that I
  have presented at LICS 2018. It is a joint work with Dana Scott\, Dexter
  Kozen\, Prakash Panangaden\, Robert Furber and Giorgio Bacci. We extend
  Dana's Boolean-valued set theory (introduced in 50's to demonstrate the
  independence of the continuum hypothesis) to get\, initially\, a
  denotational model of untyped lambda calculus\, and eventually extend it
  to a model of stochastic lambda calculus. The model is constructed over a
  space of random variables\, which inherit a natural continuous Boolean
  algebra structure.\n
UID:229
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191128T133000
DTEND;TZID=Europe/London:20191128T143000
LOCATION:off-campus
SUMMARY:Selective Applicative Functors (not a seminar\, due to the
  strike)
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Selective Applicative
  Functors (not a seminar\, due to the strike)\n\nAt this year's ICFP\,
  Mohkov\, Lukyanov\, Marlow\, and Dimino introduced "Selective Applicative
  Functors"\, a programming interface that is an intermediate stage between
  monads and applicative functors. I'll motivate what they're for\, and
  describe what they are\, and I'll talk about a more abstract way of
  thinking about them in terms of "right-skew monoidal categories".\n
UID:228
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191121T133000
DTEND;TZID=Europe/London:20191121T143000
LOCATION:LT1310
SUMMARY:Expressive Logics for Coinductive Predicates
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Expressive Logics for
  Coinductive Predicates\n\nThe classical Hennessy-Milner theorem says that
  two states of an image-finite transition system are bisimilar if and only
  if they satisfy the same formulas of a certain modal logic. I will place
  this type of result in a general context\, moving from transition systems
  to coalgebras and from bisimilarity to coinductive predicates.
  Furthermore I will present a sufficient condition for a coalgebraic logic
  to be expressive\, i.e.\, to fully characterise a coinductive predicate
  on coalgebras. Our approach will be illustrated with logics
  characterising similarity\, divergence and a behavioural metric on
  automata.\n\nThis is joint work with Jurriaan Rot to be presented at CSL
  2020.\n
UID:227
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191114T133000
DTEND;TZID=Europe/London:20191114T143000
LOCATION:LT1310
SUMMARY:Programs and Proofs in Linear Algebra
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: Programs and Proofs in
  Linear Algebra\n\nI try to understand the ways of linear algebraists from
  a programming languages perspective. In particular\, I investigate the
  practice of specifying a linear map by giving only its action on basis
  elements. We can turn this practice into a nice programming language for
  linear maps. Furthermore\, our reasoning about these maps is
  significantly simplified by only considering the basis elements.
  Finally\, keeping track of basis elements amounts to a typing
  discipline\, and we can expect to get some nice properties just by
  observation of the types.\n\nMeanwhile\, I will try to elucidate the
  similarity between\, on one side\, categories of spaces and linear maps
  and\, on the other\, Rel\, the category of sets and relations. This forms
  an important part of our programming languages view.\n
UID:226
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191107T133000
DTEND;TZID=Europe/London:20191107T143000
LOCATION:LT1310
SUMMARY:MSP 101: Coends and Kan extensions
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: MSP 101: Coends and Kan
  extensions\n\n\n
UID:225
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191031T133000
DTEND;TZID=Europe/London:20191031T143000
LOCATION:LT1310
SUMMARY:Directed algebraic topology for concurrency
DESCRIPTION:Speaker: Jérémy Ledent (MSP)\nTitle: Directed algebraic
  topology for concurrency\n\nI will give an introduction to the geometric
  semantics for concurrent programs that have been developed by Goubault\,
  Fajstrup\, Raussen et al. since the 1990's. A concurrent program can be
  viewed as a topological space equipped with a notion of direction\,
  modeling the passage of time. Thus\, in such a space\, the existence of a
  path from A to B does not guarantee the existence of a path from B to A.
  A path in a directed space corresponds to an execution of the program\;
  and two such executions are equivalent when the corresponding paths are
  homotopic\, that is\, when they can be deformed continuously into one
  another. This idea motivated the development of directed algebraic
  topology\, the analogue of algebraic topology for directed spaces.\n
UID:224
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191024T133000
DTEND;TZID=Europe/London:20191024T143000
LOCATION:LT1310
SUMMARY:Hopf Monads and Formally Adding in Morphisms
DESCRIPTION:Speaker: Joe Collins (MSP)\nTitle: Hopf Monads and Formally
  Adding in Morphisms\n\nIt should be noted that this is ongoing work. The
  talk that you will see is going to be very unpolished\; this is stuff
  that I have been working on for the past while\, and the material will
  not be fully formed yet. The things I say may not end up matching with
  reality. So with that minor caveat\, let us continue.\n\nA Hopf algebra
  is a monoid\, a comonoid\, and an extra endomorphism such that various
  commutation rules are obeyed\, and Hopf monads are a strange
  generalisation of Hopf algebras in the direction of monads. I have
  previously talked about when a Hopf algebra is a Hopf-Frobenius algebra\,
  and my goal now is to generalise this to the case of Hopf Monads.
  However\, to keep things interesting\, I am doing this in a weird
  way.\n\nLet T be a Hopf monad in monoidal category C. T is isomorphic to
  a Hopf algebra if there exists a natural transformation e: T -> 1 that
  respects the Hopf monad structure. There are many examples of Hopf monads
  which are not isomorphic to any Hopf algebras\, so this morphism does not
  exist in C in general. However\, what happens if I formally add in this
  morphism\, creating a new category C_e? In this category\, T would
  presumably be isomorphic to a Hopf algebra\, and this begs the question:
  what can T in C_e tell us about T in C? By looking at the natural functor
  C -> C_e\, can I use this to transfer my theorem about Hopf algebras to
  Hopf monads? I certainly believe so\, but let's find out together!\n
UID:223
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191017T133000
DTEND;TZID=Europe/London:20191017T143000
LOCATION:LT1310
SUMMARY:Ordinals below epsilon-zero in cubical Agda
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Ordinals
  below epsilon-zero in cubical Agda\n\nOrdinals and ordinal notation
  systems play an important role in program verification\, since they can
  be used to prove termination of programs. We present three ordinal
  notation systems representing ordinals below epsilon_0 in type theory\,
  using recent type-theoretical innovations such as mutual
  inductive-inductive definitions and higher inductive types. As case
  studies\, we show how basic ordinal arithmetic can be developed for these
  systems\, and how they admit a transfinite induction principle. We prove
  that all three notation systems are equivalent\, so that we can transport
  results between them using the univalence principle. All our
  constructions have been implemented in cubical Agda.\n
UID:222
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191010T133000
DTEND;TZID=Europe/London:20191010T143000
LOCATION:LT1310
SUMMARY:Quantitative algebras: towards a quantitative theory of effects
DESCRIPTION:Speaker: Radu Mardare (MSP)\nTitle: Quantitative algebras:
  towards a quantitative theory of effects\n\nWe develop a quantitative
  analogue of equational reasoning meant to provide metric semantics for
  stochastic/probabilistic/quantitative systems and programming languages.
  Quantitative algebras are algebras over metric spaces defined by these
  quantitative equational theories\, and they implicitly define monads over
  the category of (extended) metric spaces. We have a few relevant examples
  of such algebras\, where the induced free algebras correspond to
  well-known structures\; among these are Hausdorff metrics from quantitive
  semilattices\, p-Wasserstein metrics (hence also the Kantorovich metric)
  from barycentric algebras\, the total variation metrics from a variant of
  barycentric algebras\, and more.\n\nThe talk is based on a series of
  joint works with Prakash Panangaden and Gordon Plotkin. The main results
  have been presented at LICS'16\, LICS'17 and LICS'18.\n
UID:221
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20191003T133000
DTEND;TZID=Europe/London:20191003T143000
LOCATION:LT1310
SUMMARY:Summer trip reports
DESCRIPTION:Speaker: James Wood\, Joe Collins\, Bob Atkey\, Guillaume
  Allais\, Fredrik Nordvall Forsberg (MSP)\nTitle: Summer trip
  reports\n\n\n
UID:220
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190926T130000
DTEND;TZID=Europe/London:20190926T140000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:219
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190830T110000
DTEND;TZID=Europe/London:20190830T120000
LOCATION:LT1415
SUMMARY:A combinatorial representation of the operad of plane graphs
DESCRIPTION:Speaker: Malin Altenmüller (MSP)\nTitle: A combinatorial
  representation of the operad of plane graphs\n\nI will present how we can
  formalise non-symmetric monoidal categories (i.e. string diagrams) in a
  combinatorial way. These kind of diagrams will be represented by plane
  graphs with a distinguished boundary vertex. For encoding plane graphs it
  is sufficient to store the order of neighbours for each vertex\, called a
  rotation system. I'll show how to define these sorts of graphs\, how to
  compose them and &--together with the right notion of rewriting &--how
  they form an operad.\n\nThis is practice for a talk I will give at
  STRINGS in Birmingham next week.\n
UID:218
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190816T160000
DTEND;TZID=Europe/London:20190816T170000
LOCATION:LT1415
SUMMARY:Polynomial certificates for nondeterministic automata
DESCRIPTION:Speaker: Rob Myers \nTitle: Polynomial certificates for
  nondeterministic automata\n\nGiven a deterministic finite automaton
  accepting /L/\, another accepting the reverse language\, and an integer
  /n/\, does there exist a nondeterministic acceptor with /n/ or fewer
  states? We've proved that this problem is in NP i.e. polynomial
  certificates exist. All previous algorithms constructing small
  nondeterministic automata for arbitrary regular languages are at best
  PSPACE-complete. We achieve this by explaining and substantially
  improving the Kameda-Weiner algorithm using coalgebraic methods. At the
  underlying level we use a categorical equivalence between finite
  join-semilattices and bipartitioned graphs.\n
UID:217
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190705T160000
DTEND;TZID=Europe/London:20190705T170000
LOCATION:LT1310
SUMMARY:The Thing with Thinnings: CodeBruijn is (Free;Stuff)
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: The Thing with
  Thinnings: CodeBruijn is (Free;Stuff)\n\nI've been hacking away on tools
  to do metatheory using "codebruijn" representation of syntax. The
  method\, as with scoped de Bruijn representation\, is to index terms by
  their *scope*\, but the codebruijn method goes further\, by
  systematically treating the *support* of terms\, i.e.\, the particular
  subscope of variables which are actually *relevant*\, paired with the
  thinning that embeds support into scope. The key codebruijn type
  constructor is "pair a thing with a thinning from some support"\, and it
  turns any old sort of thing into something which uniformly admits further
  thinning just by postcomposition\, without affecting either the thing or
  its support.\n\nStuff-which-uniformly-admits-thinning is stuff with
  structure\, so there is a forgetful functor back to plain old Stuff. The
  Free functor which adds uniform thinning\, is its left adjoint. The
  codebruijn type constructor is the monad (Free;Stuff). The corresponding
  comonad\, (Stuff;Free)\, is rather more familiar to semanticists as the
  abstraction over *larger* scopes found in Kripke models.\n\nI've always
  been a bit shaky on adjunctions\, presheaves and what have you\, so this
  talk will not assume categorical confidence\, but rather seek to build
  intuition\, guided by a concrete example grounded in the practicalities
  of manipulating syntax.\n
UID:216
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190627T160000
DTEND;TZID=Europe/London:20190627T170000
LOCATION:LT1310
SUMMARY:Isbell Duality\, Stone Duality\, and Physical Theories
DESCRIPTION:Speaker: Kevin Dunne \nTitle: Isbell Duality\, Stone
  Duality\, and Physical Theories\n\n Isbell duality is an adjunction
  between a category of "generalised algebras" and a category of
  "generalised spaces"\, and is an abstraction of Stone duality. Broadly
  speaking\, a Stone duality is an equivalence between some category of
  commutative algebras\, and some category of spaces\, for example: Boolean
  algebras and Stone spaces\; or\, commutative C*-algebras and Hausdorff
  spaces.\n\nThere is a Stone duality which applies in the setting of
  Newtonian mechanics\, between the category of smooth manifolds and a
  category of commutative algebras\, and this equivalence of categories
  admits an extremely elegant and intuitive interpretation from the
  perspective of physics.\n\nI am going to discuss how to build an
  analogous interpretation for quantum theory using the machinery of Isbell
  duality\, in such a way that directly generalises Newtonian mechanics\,
  with the ultimate aim being to resolve some of the conceptual problems of
  quantum theory.\n
UID:215
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190607T160000
DTEND;TZID=Europe/London:20190607T170000
LOCATION:LT1415
SUMMARY:TYPES 2019 practice talks
DESCRIPTION:Speaker: Malin Altenmüller and James Wood (MSP)\nTitle: TYPES
  2019 practice talks\n\nMalin and James will practice giving their talks
  "Containers of Applications and Applications of Containers" and "Linear
  metatheory via linear algebra" respectively.\n
UID:214
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190529T130000
DTEND;TZID=Europe/London:20190529T140000
LOCATION:LT1415
SUMMARY:Departmental seminar: The next 700 abstract machines
DESCRIPTION:Speaker: Dan Ghica (Birmingham)\nTitle: The next 700 abstract
  machines\n\nWe propose a new formalism for representing programming
  languages\, based on a universal graph-rewriting abstract machine. The
  calculus itself only deals with the basic structural aspects of a
  programming languages\, namely variables\, names (e.g. memory locations)
  and thunks (i.e. fragments with delayed execution). Everything else needs
  to be supplied as extrinsic operations\, with associated rewrite rules.
  This basic calculus allows us to represent all known sequential
  programming language features in a uniform framework\, reason abstractly
  about their cost\, and also reason about challenging
  equivalences.\n\nThis is joint work with Koko Muroya and Todd Waugh
  Ambridge.\n
UID:213
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190503T160000
DTEND;TZID=Europe/London:20190503T170000
LOCATION:LT1310
SUMMARY:MSP 101: Fixed points of indexed containers
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: MSP 101: Fixed points of
  indexed containers\n\nIn an attempt to con Agda into allowing alternation
  of least and greatest fixed points\, I try to remember how to construct
  these things for indexed containers.\n
UID:212
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190515T160000
DTEND;TZID=Europe/London:20190515T170000
LOCATION:LT1310
SUMMARY:Getting the unifier on your side
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Getting the unifier
  on your side\n\nI will explain how to write practical generic n-ary
  functions and combinators for n-ary relations.\n
UID:211
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190510T130000
DTEND;TZID=Europe/London:20190510T140000
LOCATION:LT1415
SUMMARY:A Purely Functional Array Language and its Optimising GPU
  Compiler
DESCRIPTION:Speaker: Troels Henriksen (University of Copenhagen)\nTitle:
  A Purely Functional Array Language and its Optimising GPU
  Compiler\n\nFuthark is a small programming language designed to be
  compiled to efficient parallel code. It is a statically typed\,
  data-parallel\, and purely functional array language\, and comes with a
  optimising ahead-of-time compiler that generates GPU code via OpenCL and
  CUDA. Futhark is not designed for graphics programming\, but instead uses
  the compute power of the GPU to accelerate data-parallel array
  computations ("GPGPU").\n\nThis talk presents the design of the Futhark
  language\, as well as outlines several of the key compiler optimisations
  that have enabled performance comparable to hand-written GPU code.
  Through the use of a functional source language\, we obtain strong
  invariants that simplify and empower the application of traditional
  compiler optimisation techniques. In particular\, I will discuss (i)
  aggressively restructuring transformations such as fusion\, (ii) loop
  interchange and distribution to extract flat parallel kernels from nested
  parallel source programs\, (iii) multi-versioned code generation that
  exploits as much parallelism as necessary and efficiently sequentialises
  the rest\, and (iv) data layout transformations to ensure coalesced
  memory access on GPUs.\n
UID:210
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190412T160000
DTEND;TZID=Europe/London:20190412T170000
LOCATION:LT1310
SUMMARY:A Type-System of Sorts for Bigraphs
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (Glasgow)\nTitle: A
  Type-System of Sorts for Bigraphs\n\nBigraphs are a mathematical model
  (hypergraph) for representing the spatial and communication structures of
  networked entities [fn:1]. Bigraph Reactive Systems (BRS) build upon
  bigraphs by incorporating temporal changes to a model as specified with
  reaction rules. There is a wealth of theory (category) that supports
  reasoning about bigraphs\, and an emergent tool (BigraphER [fn:2]) for
  their modelling.\n\nBigraphs have an elegant algebraic structure that is
  general purpose and simply typed. However\, it is common to place
  restrictions on the shape of a bigraph by a /system of sorts/ that are
  applied as side-conditions. The details\, and application\, of these
  sorts are presented as an aside from the bigraph definition itself. This
  makes transformation of Bigraph models harder to enforce during
  manipulation as part of a BRS. We must provide runtime checks to provide
  relevant guarantees over model correctness.\n\nIn this talk\, I want to
  introduce you to the interesting world of Bigraph specification\, and my
  current and ongoing work on developing a dependent type-system to embed a
  system-of-sorts directly into the algebraic definition of bigraphs. This
  allows one to provide correct-by-construction guarantees that a given
  model is correct w.r.t. a provided system-of-sorts.\n\n[fn:1] Robin
  Milner. 2009. The Space and Motion of Communicating Agents. Cambridge
  University Press.\n[fn:2] http://dcs.gla.ac.uk/~michele/bigrapher.html\n
UID:209
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190524T160000
DTEND;TZID=Europe/London:20190524T170000
LOCATION:LT1310
SUMMARY:Bigraphs with sharing and their algebra
DESCRIPTION:Speaker: Michele Sevegnani (Glasgow)\nTitle: Bigraphs with
  sharing and their algebra\n\nBigraphical Reactive Systems (BRS) are a
  universal model of computation introduced by Robin Milner for the
  representation of interacting systems that evolve in both time and space.
  Bigraphs have been shown forming a category called symmetric partial
  monoidal category and their dynamic theory is defined in terms of
  rewriting and transition. A limitation of bigraphs is that the underlying
  model of location is a forest\, which means there is no straightforward
  representation of locations that can overlap or intersect. In this talk\,
  I will present bigraphs with sharing\, an extension of bigraphs which
  solves this problem by defining the model of location as a directed
  acyclic graph\, thus allowing a natural representation of overlapping or
  intersecting locations. I will give a complete presentation of the
  extended theory\, including a categorical semantics\, algebraic
  properties\, a normal form and several essential procedures for
  computation.\n
UID:208
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190405T160000
DTEND;TZID=Europe/London:20190405T170000
LOCATION:LT1310
SUMMARY:Shonan "Programming and Reasoning with Algebraic Effects and
  Effect Handlers" trip report
DESCRIPTION:Speaker: Bob Atkey and Conor McBride (MSP)\nTitle: Shonan
  "Programming and Reasoning with Algebraic Effects and Effect Handlers"
  trip report\n\n\n
UID:207
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190401T160000
DTEND;TZID=Europe/London:20190401T170000
LOCATION:LT1310
SUMMARY:Determinacy and the red-green chase
DESCRIPTION:Speaker: Johannes Marti (Universität Bremen)\nTitle:
  Determinacy and the red-green chase\n\nThe determinacy problem is to
  decide for queries v<sub>1</sub>,...,v<sub>n</sub> and q whether for
  every database D knowing the answers to v<sub>1</sub>,...,v<sub>n</sub>
  in D suffices to deduce the answer to q in D. It has been shown that this
  problem is undecidable if v<sub>1</sub>,...,v<sub>n</sub> and q are
  arbitrary conjunctive queries.\n\nIn this talk I give a gentle
  introduction to some of the formal tools that are used to study the
  determinacy problem. Especially\, I focus on the red-green chase\, which
  is a neat construction that links the problem of determinacy with query
  answering relative to ontologies. Lastly\, I might present some of our
  own\, very modest\, results about classes of conjunctive queries for
  which the determinacy problem is decidable.\n
UID:206
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190320T160000
DTEND;TZID=Europe/London:20190320T170000
LOCATION:LT1310
SUMMARY:Probabilistic open games
DESCRIPTION:Speaker: Alasdair Lambert (MSP)\nTitle: Probabilistic open
  games\n\nWe extend the Open Games framework for compositional game theory
  to encompass also mixed strategies\, making essential use of the discrete
  probability distribution monad on Set. We show how to compose the
  resulting probabilistic games in parallel and sequentially\, and
  illustrate the framework on the well-known Matching Pennies game.\n
UID:205
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190315T160000
DTEND;TZID=Europe/London:20190315T170000
LOCATION:LT1310
SUMMARY:Fropf algebras
DESCRIPTION:Speaker: Joe Collins (MSP)\nTitle: Fropf algebras\n\nLast
  time I talked\, you heard about Interacting Frobenius algebras -- this
  time\, get ready for "Hopf-Frobenius algebras"\, as Ross likes to call
  them\, or "Fropf algebras"\, as Ross doesn't like to call them. I am in
  the process of writing about them\, so this is going to be quite similar
  to the last talk except we're coming at them from a new angle\, and with
  new results.\n
UID:204
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190308T160000
DTEND;TZID=Europe/London:20190308T170000
LOCATION:LT1415
SUMMARY:Coalgebra Learning via Duality
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Coalgebra Learning via
  Duality\n\nA key result in computational learning theory is Dana
  Angluin's L* algorithm that describes how to learn a deterministic finite
  automaton (DFA) using membership and equivalence queries. I will present
  a generalisation of this algorithm to the level of coalgebras. The
  approach relies on the use of logical formulas as tests\, based on a dual
  adjunction between states and logical theories. This allows us to learn\,
  e.g.\, labelled transition systems\, using modal formulas as
  tests.\n\nJoint work with Simone Barlocco and Jurriaan Rot.\n
UID:203
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190222T160000
DTEND;TZID=Europe/London:20190222T170000
LOCATION:LT1310
SUMMARY:MSP 101: Proof-irrelevance for Dependent Type Theory
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: MSP 101:
  Proof-irrelevance for Dependent Type Theory\n\nProof-irrelevance can mean
  two similar but different things: on the one hand\, irrelevant proofs can
  be discarded when extracting programs to execute (run-time erasability)\,
  and on the other hand\, one might want to treat proofs as irrelevant
  during type checking (type-checking time erasability). I will give an
  overview of the subject\, focusing on type-checking time erasability. I
  suspect that at least three people in the audience knows more than me\,
  so my main function will be to keep things accessible. I plan to follow
  the recent paper "Degrees of Relatedness: A Unified Framework for
  Parametricity\, Irrelevance\, Ad Hoc Polymorphism\, Intersections\,
  Unions and Algebra in Dependent Type Theory" by Andreas Nuyts and
  Dominique Devriese (LICS 2018).\n
UID:202
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190215T160000
DTEND;TZID=Europe/London:20190215T170000
LOCATION:LT1310
SUMMARY:Finitary indexed containers
DESCRIPTION:Speaker: Malin Altenmüller (MSP)\nTitle: Finitary indexed
  containers\n\nI will talk about two different representatives of indexed
  containers which &--all together in the end &--will construct an
  application that manages windows on a screen.\n\nThe first instance of
  containers are rectangular windows. Defining these in terms of finite
  indexed containers (finite in the number of positions where elements can
  be stored) lets us interpret indices as outer boundaries. I will show
  some constructions on these space partitioning structures\, e.g. product
  operations and overlaying of windows (this will hopefully include some
  pretty pictures!).\n\nSecondly I will explain how we can encode
  applications as indexed containers (not necessarily finite\, despite the
  title)\, being defined in terms of commands and responses. To sum up I
  present the window managing application where all the above things will
  occur and get combined.\n\nI am working on these topics together with
  Conor and we are currently collocating them in a paper.\n
UID:201
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190208T160000
DTEND;TZID=Europe/London:20190208T170000
LOCATION:LT1310
SUMMARY:Evaluators for bidirectional type systems
DESCRIPTION:Speaker: Stuart Gale (MSP)\nTitle: Evaluators for
  bidirectional type systems\n\nIn this talk I'll introduce syntax and
  semantics of a generic bidirectionally type checked lambda calculus. I'll
  also show that lumps of syntax that act as a type annotation are in fact
  the fuel which powers structural evaluation.\n
UID:200
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190201T160000
DTEND;TZID=Europe/London:20190201T170000
LOCATION:LT1310
SUMMARY:Linear logic: how hard can it be?
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: Linear logic: how hard can
  it be?\n\nIn the linear world\, we are no longer allowed to freely
  discard or duplicate hypotheses and conclusions. This should mean that
  there are fewer possible strategies for proving a given proposition\,
  making the task of proving things easier. However\, we find that linear
  logic proof search is a surprisingly powerful model of computation. In
  this talk\, I'll give an introduction to linear logic sequent calculus.
  I'll then go through a neat construction of [0] embedding quantified
  boolean formulae into linear logic without bangs\, and sketch the proof
  from the same paper that linear logic with bangs is Turing-complete. Some
  content from CS106 may come in handy.\n\n[0]: Lincoln\, Mitchell\,
  Scedrov\, Shankar\, 1992\, "Decision problems for propositional linear
  logic"\n
UID:199
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190125T160000
DTEND;TZID=Europe/London:20190125T170000
LOCATION:LT1310
SUMMARY:MSP 101: Chu spaces
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: MSP 101: Chu spaces\n\nI'll
  talk about Chu Spaces\, a general construction of *-autonomous categories
  (a.k.a. models of classical linear logic). Chu spaces are interesting
  because they come with an inbuilt notion of duality\, which has been
  interpreted as a kind of player/opponent duality.\n
UID:198
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190118T160000
DTEND;TZID=Europe/London:20190118T170000
LOCATION:LT1310
SUMMARY:Metametatheory of Bidirectional Type Systems
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Metametatheory of
  Bidirectional Type Systems\n\nIn previous talks\, I've written down
  bidirectional versions of particular type systems\, with type checking
  for introduction forms and type synthesis for elimination forms. But what
  are the metarules for writing down the rules? How do we show that
  following the metarules ensures good properties of the rules? I'll report
  some progress towards capturing the syntactic properties of "good" rules
  which might push us closer to the goal of metatheory by
  construction.\n\nNB This talk has nothing to do with bidirectional
  transformations.\n
UID:197
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20190111T163000
DTEND;TZID=Europe/London:20190111T173000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:196
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181217T113000
DTEND;TZID=Europe/London:20181217T123000
LOCATION:Strathclyde
SUMMARY:Event: SYCO 2
DESCRIPTION:
UID:195
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181214T161500
DTEND;TZID=Europe/London:20181214T171500
LOCATION:LT1415
SUMMARY:Abstract differential geometry matters!
DESCRIPTION:Speaker: Robin Cockett (University of Calgary )\nTitle:
  Abstract differential geometry matters!\n\nThe last few years has seen
  the development -- largely in Canada and Australia -- of an axiomatic
  approach to differential geometry based on tangent categories. Tangent
  categories incorporate the previous leading settings for differential
  geometry: finite dimensional manifolds\, synthetic differential
  geometry\, convenient manifolds\, etc. In addition they widen the scope
  significantly as they also include combinatorial species\, Goodwillie
  Functor calculi\, and examples from computer science. The talk will give
  a survey of tangent categories and some of the developments so far.\n
UID:194
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181123T161500
DTEND;TZID=Europe/London:20181123T171500
LOCATION:LT1310
SUMMARY:The reachable part of a coalgebra
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: The reachable part of a
  coalgebra\n\nState-based transition systems are often studied relative to
  a specified initial state. System behavior then only depends on those
  states that are "reachable" from the initial state. This has both
  consequences for the theory (e.g. by allowing to prove non-definability
  results in modal logic) and practice (by making seemingly large systems
  more manageable) of such systems.\n\nCoalgebras provide a general model
  for transition systems. In this introductory talk I will discuss how to
  define the reachable part of a coalgebra via the notion of T-base for an
  endofunctor T from [1]. We will first discuss this notion and then
  provide a sufficient categorical condition for the existence of the
  T-base. We will then show how to characterise the reachable part of a
  coalgebra as least fixpoint of a monotone operator.\n\nThis is based on
  joint work with Simone Barlocco and Jurriaan
  Rot.\n\n========================\n[1] Alwin Blok. Interaction\,
  observation and denotation. Master's thesis\, ILLC Amsterdam\, 2012.\n
UID:193
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181207T160000
DTEND;TZID=Europe/London:20181207T170000
LOCATION:LT1310
SUMMARY:Interacting Frobenius Algebras
DESCRIPTION:Speaker: Joe Collins (MSP)\nTitle: Interacting Frobenius
  Algebras\n\nWhat is a Frobenius algebra? What is a Hopf algebra? And why
  are they such good friends? In this talk\, I will be talking about
  PROPs\, what an interacting Frobenius algebra is\, and some weird stuff
  that appears with them\, and I shall be drawing lots of pretty pictures
  as well.\n
UID:191
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181130T161500
DTEND;TZID=Europe/London:20181130T171500
LOCATION:LT1310
SUMMARY:Dual adjunctions
DESCRIPTION:Speaker: Simone Barlocco (MSP)\nTitle: Dual
  adjunctions\n\nCoalgebras provide an abstract framework to represent
  state-based transition systems. Modal logics provide a formal language to
  specify such systems. In our recently submitted work (joint work with
  Clemens Kupke and Jurriaan Rot) we devise a general algorithm to learn
  coalgebras. Modal formulas are used as tests to probe the behaviour of
  states.\n\nIn my introductory talk\, I will discuss how to set up a
  general framework that connects coalgebras and their modal logics via a
  dual adjunction. Moreover\, I will show a known result which guarantees
  that indistinguishable states wrt to modal formulas are behavioural
  equivalent\, a key fact that entails that -- whenever possible -- our
  algorithm learns a minimal representation of a coalgebra.\n
UID:190
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181116T161500
DTEND;TZID=Europe/London:20181116T171500
LOCATION:LT1310
SUMMARY:MSP 101: Polynomial time programming languages
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: MSP 101: Polynomial time
  programming languages\n\nImplicit Computational Complexity is the study
  of programming languages or logical systems that capture complexity
  classes. Roughly\, every program that can be written in the language is
  in some complexity class. Many of the languages that have been proposed
  for capturing useful classes like PTIME are not much fun to program in.
  However\, the work of the late Martin Hofmann included work on languages
  like LFPL\, which only allows polynomial time computation\, but is also
  reasonably usable. I'll talk about LFPL\, and how the proof of polynomial
  time bounds works.\n
UID:189
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181109T160000
DTEND;TZID=Europe/London:20181109T170000
LOCATION:LT1310
SUMMARY:The semantics of worldly type systems
DESCRIPTION:Speaker: Ben Price (MSP)\nTitle: The semantics of worldly
  type systems\n\nI will present a type theory whose judgements are indexed
  by a preorder of "worlds"\, representing for example nodes in a
  distributed computation\, or a security level. This means a term may only
  typecheck at particular worlds\, and will be mobile upwards along the
  preorder (for instance every low security value is also a high security
  one). To enable talking about the world structure without compromising
  mobility\, the terms can talk about "shifts"\, which describe relative
  worlds.\n\nI then give a semantic model based on the usual presheaf model
  for STLC where worlds form the base category\, and shifts are
  endofunctors on the worlds. This semantics will show our programs are
  indeed oblivious to data they cannot "see". Examples will be given to
  demonstrate this framework in some concrete cases\, and to motivate
  future work.\n
UID:188
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181102T160000
DTEND;TZID=Europe/London:20181102T170000
LOCATION:LT1310
SUMMARY:The Next 700 Program Transformers
DESCRIPTION:Speaker: Geoff Hamilton (Dublin City University)\nTitle: The
  Next 700 Program Transformers\n\nIn this talk\, I will describe a
  hierarchy of program transformers in which the transformer at each level
  builds on top of the transformers at lower levels. The program
  transformer at the bottom of the hierarchy corresponds to positive
  supercompilation\, and that at the next level corresponds to
  distillation. I will then try to characterise the improvements that can
  be made at each level\, and show how the transformers can be used for
  program verification and theorem proving.\n
UID:187
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181026T160000
DTEND;TZID=Europe/London:20181026T170000
LOCATION:LT1310
SUMMARY:Syrup: circuits with memory
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Syrup: circuits with
  memory\n\nBy way of giving CS106 students better tools to tackle the
  concept of memory in circuits\, I implemented a small programming
  language called (for reasons which are unlikely to become clear) Syrup.
  Syrup is suspiciously like a dialect of Haskell\, except that the blessed
  monad allows bits of state. Marking homework done in Syrup necessitates
  checking whether two circuits have the same /externally observable/
  behaviour\, which makes it a matter of *bisimulation*. I'll talk a bit
  about how much fun it was implementing the decision procedure to find
  either a bisimulation or a countermodel (for purposes of decent
  feedback).\n
UID:186
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181019T160000
DTEND;TZID=Europe/London:20181019T170000
LOCATION:LT1310
SUMMARY:SPLS Post-mortem
DESCRIPTION:Speaker: Stuart Gale (MSP)\nTitle: SPLS Post-mortem\n\n\n
UID:185
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181012T160000
DTEND;TZID=Europe/London:20181012T170000
LOCATION:LT1310
SUMMARY:Why quantum computers suck\, and what we might do about it
DESCRIPTION:Speaker: Ross Duncan (Cambridge Quantum Computing)\nTitle:
  Why quantum computers suck\, and what we might do about it\n\nNear-term
  quantum computers have many limitations which make them difficult to use
  for stuff. I will outline some of the difficulties and handwave at some
  new ideas from compositional mathematics that might help us address these
  problems.\n
UID:184
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181005T160000
DTEND;TZID=Europe/London:20181005T170000
LOCATION:LT1310
SUMMARY:ICFP trip report
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: ICFP trip report\n\nLast
  week\, I attended the ICFP conference and various associated workshops in
  St Louis. In this trip report\, I will talk about selected talks and the
  people I met there. If time allows\, I may also cover the adventures of
  Ioan\, one of our summer interns and current undergraduate.\n
UID:183
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20181017T120000
DTEND;TZID=Europe/London:20181017T170000
LOCATION:Strathclyde
SUMMARY:Event: SPLS
DESCRIPTION:
UID:182
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180928T160000
DTEND;TZID=Europe/London:20180928T170000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning meeting
DESCRIPTION:
UID:181
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180921T160000
DTEND;TZID=Europe/London:20180921T170000
LOCATION:LT1310
SUMMARY:First-order unification
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: First-order
  unification\n\nI'll do a 101 today\, filed under "stuff everybody should
  know" about first-order unification (the algorithm underlying
  Hindley-Milner type inference\, Prolog\, etc). But then I'll throw in the
  twist of considering syntax with binding. The way I cook it\, this makes
  essential use of the structure of the category of thinnings.\n
UID:180
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180831T150000
DTEND;TZID=Europe/London:20180831T160000
LOCATION:LT1415
SUMMARY:Telescopic [Constraint] Trees\, or: Information-Aware Type
  Systems In Context
DESCRIPTION:Speaker: Philippa Cowderoy \nTitle: Telescopic [Constraint]
  Trees\, or: Information-Aware Type Systems In Context\n\nThe minimalist
  tradition in type systems makes for easy mathematics\, but often leaves
  their mechanisms needlessly obscured.\n\nI build a structure for
  Hindley-Milner checking problems in the tradition of Type Inference in
  Context. This structure is derived from typing rules in the style of my
  first talk and mirrors data structures used for elaboration problems in
  dependent type systems -- offering a notation that can be used among
  designers and implementors of type systems and even in explaining their
  behaviour to users.\n
UID:179
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180829T150000
DTEND;TZID=Europe/London:20180829T160000
LOCATION:LT1415
SUMMARY:Information-Aware Type Systems
DESCRIPTION:Speaker: Philippa Cowderoy \nTitle: Information-Aware Type
  Systems\n\nThe minimalist tradition in type systems makes for easy
  mathematics\, but often leaves their mechanisms needlessly
  obscured.\n\nOne possible remedy is to track the behaviour of information
  in a system -- its creation\, its destruction and how it flows between
  constraints and source locations. I illustrate this with the Simply-Typed
  Lambda Calculus.\n
UID:178
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180718T120000
DTEND;TZID=Europe/London:20180718T130000
LOCATION:LT1310
SUMMARY:Finite and Infinite Traces\, Inductively and Coinductively
DESCRIPTION:Speaker: Jurriaan Rot (Radboud University Nijmegen)\nTitle:
  Finite and Infinite Traces\, Inductively and Coinductively\n\nIt is a
  well-known fact (used e.g. in model checking) that\, on finitely
  branching transition systems\, finite trace equivalence coincides with
  infinite trace equivalence. I will show how to prove this coinductively\,
  which is arguably nicer than the standard inductive proof.\n
UID:177
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180613T110000
DTEND;TZID=Europe/London:20180613T120000
LOCATION:LT1310
SUMMARY:Gillette Fusion: Kits for Hutton's Razor or Type Unsafe and Scope
  Unsafe Programs and Their Proofs
DESCRIPTION:Speaker: James Chapman (MSP)\nTitle: Gillette Fusion: Kits
  for Hutton's Razor or Type Unsafe and Scope Unsafe Programs and Their
  Proofs\n\nThe paper Type-and-Scope Safe Programs and Their Proofs
  abstracts the common type-and-scope safe structure from computations on
  lambda-terms that deliver\, e.g.\, renaming\, substitution\, evaluation\,
  CPS-transformation\, and printing with a name supply. By exposing this
  structure\, we can prove generic simulation and fusion lemmas relating
  operations built this way. In this talk I will present this approach but
  for simpler setting of Hutton's Razor. This reduces the mathematical
  structures involved from relative structures to the ordinary
  counterparts.\n
UID:176
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180605T120000
DTEND;TZID=Europe/London:20180605T170000
LOCATION:Cairn Auditorium\, PG G.01\, Postgraduate Centre\, Heriot-Watt
  University
SUMMARY:Event: SPLS
DESCRIPTION:
UID:175
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180529T130000
DTEND;TZID=Europe/London:20180529T140000
LOCATION:LT1310
SUMMARY:A Coinductive Proof of Policy Iteration Correctness
DESCRIPTION:Speaker: Helle Hvid Hansen (TU Delft)\nTitle: A Coinductive
  Proof of Policy Iteration Correctness\n\nThis is the second half of
  Helle's talk on a (co)algebraic treatment of Markov Decision Processes.
  It focuses on a coinductive explanation of policy improvement using a new
  proof principle\, based on Banach's Fixpoint Theorem\, that we call
  contraction coinduction.\n
UID:174
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180517T130000
DTEND;TZID=Europe/London:20180517T140000
LOCATION:LT1310
SUMMARY:HoTT for sets
DESCRIPTION:Speaker: Thorsten Altenkirch (Nottingham)\nTitle: HoTT for
  sets\n\nBefore getting lost in the realms of higher dimensions we should
  see wether we can interpret set-level HoTT. We know how to deal with
  functional extensionality and a static universe of propositions (see
  Observational Type Theory) but what about a dynamic universe of
  propositions\, i.e. one reflecting HProps that also validates
  propositional extensionality. I will discuss the problems modelling this
  and a possible solution using globular setoids.\n\nThe dynamic prop
  corresponds to a subobject classifier in a topos (in particular we get
  unique choice) while the static universe corresponds to a quasitopos I am
  told.\n
UID:173
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180523T160000
DTEND;TZID=Europe/London:20180523T170000
LOCATION:LT1310
SUMMARY:How Do We Model a Problem Like Mutable State?
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: How Do We Model a Problem
  Like Mutable State?\n\n\n
UID:172
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180516T110000
DTEND;TZID=Europe/London:20180516T120000
LOCATION:LT1310
SUMMARY:Long-Term Values in Markov Decision Processes\, (Co)Algebraically
DESCRIPTION:Speaker: Helle Hvid Hansen (TU Delft)\nTitle: Long-Term
  Values in Markov Decision Processes\, (Co)Algebraically\n\nIn this talk\,
  we study Markov decision processes (MDPs) with the discounted sums
  criterion from the perspective of coalgebra and algebra. Probabilistic
  systems\, similar to MDPs but without rewards\, have been extensively
  studied\, also coalgebraically\, from the perspective of program
  semantics. Here\, we focus on the role of MDPs as models in optimal
  planning\, where the reward structure is central. Our main contributions
  are: (i) a coinductive explanation of policy improvement using a new
  proof principle\, based on Banach's Fixpoint Theorem\, that we call
  contraction coinduction\, and (ii) showing that the long-term value
  function of a policy can be obtained via a generalized notion of
  corecursive algebra\, which takes boundedness into account.\n\nThis is
  joint work with Frank Feys (Delft) and Larry Moss (Indiana).\n
UID:171
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180530T110000
DTEND;TZID=Europe/London:20180530T120000
LOCATION:LT1310
SUMMARY:Multi-Dimensional Arrays and their Types
DESCRIPTION:Speaker: Artjoms Šinkarovs and Peter Hancock
  (Heriot-Watt)\nTitle: Multi-Dimensional Arrays and their Types\n\nThough
  Multi-Dimensional Arrays (MDAs) seem conceptually straightforward\, it's
  not easy to come up with a mathematical theory of arrays that can be used
  within optimising compilers. We'd like to treat arrays as functions from
  indices to values with some domain restrictions. It is desirable that
  these domain restrictions are specified in a compact form\, and are
  equipped with closed algebraic operations like intersection\, union\,
  etc. We are going to consider a few typical models like
  hyperrectangulars\, grids and polyhedrons.\n\nWhen typing array
  operations\, ideally we'd like to find a balance between tracking all the
  shapes of arrays and allowing for generic array operations. This proves
  to be tricky\, for reasons we'll explain.\n\nWe will propose\,
  tentatively\, an analysis of MDAs in terms of container functors. The aim
  is to supply concepts helpful when thinking about MDAs\, e.g. when
  designing notations for coding with arrays. Some intriguing gadgetry
  shows up.\n
UID:170
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180504T110000
DTEND;TZID=Europe/London:20180504T120000
LOCATION:LT1310
SUMMARY:MSP 101: The Dialectica Interpretation
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: MSP 101: The
  Dialectica Interpretation\n\nA proof interpretation translates proofs of
  one logical system into proofs of another (example: the double-negation
  interpretation of classical logic into constructive logic). This often
  reveals some information about the original system (e.g. classical logic
  is equiconsistent with constructive logic). Gödel's Dialectica
  interpretation (named after the journal it was published in) translates
  Heyting arithmetic (the constructive theory of the natural numbers\,
  including induction) into System T (the quantifier-free theory of the
  simply typed lambda calculus with natural numbers) -- quantifier
  complexity is traded for higher type complexity. Combining this
  translation with (a refined) double negation translation\, one can
  extract System T programs from a proof of a forall-exists statement\,
  even if this proof is using non-constructive priciples such as Markov's
  Principle\, Excluded Middle\, or the Quantifier-Free Axiom of Choice.
  I've always found the Dialectica translation mystifying\, so I'll try to
  explain the intuition behind it.\n
UID:169
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180419T110000
DTEND;TZID=Europe/London:20180419T120000
LOCATION:LT1310
SUMMARY:Midlands Graduate School Trip Report
DESCRIPTION:Speaker: James Wood (MSP)\nTitle: Midlands Graduate School
  Trip Report\n\n\n
UID:168
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180412T110000
DTEND;TZID=Europe/London:20180412T120000
LOCATION:LT1415
SUMMARY:Quotient Inductive-Inductive Types
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Quotient
  Inductive-Inductive Types\n\nHigher inductive types (HITs) in Homotopy
  Type Theory (HoTT) allow the definition of datatypes which have
  constructors for equalities over the defined type. HITs generalise
  quotient types and allow to define types which are not sets in the sense
  of HoTT (i.e. do not satisfy uniqueness of equality proofs) such as
  spheres\, suspensions and the torus. However\, there are also interesting
  uses of HITs to define sets\, such as the Cauchy reals\, the partiality
  monad\, and the internal\, total syntax of type theory. In each of these
  examples we define several types that depend on each other mutually\,
  i.e. they are inductive-inductive definitions. We call those HITs
  quotient inductive-inductive types (QIITs).\n\nAlthough there has been
  recent progress on the general theory of HITs\, there isn't yet a
  theoretical foundation of the combination of equality constructors and
  induction-induction\, despite having many interesting applications. In
  the present paper we present a first step towards a semantic definition
  of QIITs. In particular\, we give an initial-algebra semantics and show
  that this is equivalent to the section induction principle\, which
  justifies the intuitively expected elimination rules.\n
UID:167
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180328T123000
DTEND;TZID=Europe/London:20180328T133000
LOCATION:LT1310
SUMMARY:What is a category\, actually?
DESCRIPTION:Speaker: Thorsten Altenkirch (Nottingham)\nTitle: What is a
  category\, actually?\n\nLet us revisit the definition of a category and
  define it in a way which has the advantage that we can generalize it to
  higher dimensions. Why am I interested in higher categories (or
  specifically (\\infty,1)-categories)? I have a few problems in Homotopy
  Type Theory which I think can be solved using these beasts: the coherence
  problem for type theory in type theory (in the moment I cannot even
  define the standard model) and generalizing the Hungarian approach to
  Quotient Inductive Inductive Types (QIITs) to Higher Inductive Inductive
  Types (HIITs).\n
UID:166
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180321T150000
DTEND;TZID=Europe/London:20180321T160000
LOCATION:LT1415
SUMMARY:Equivariant ZFA and the foundations of nominal techniques
DESCRIPTION:Speaker: Jamie Gabbay (Heriot-Watt)\nTitle: Equivariant ZFA
  and the foundations of nominal techniques\n\nThe sets foundations of
  nominal techniques are usually taken to be Fraenkel-Mostowski set theory
  (which is ZFA + a finite support property). I will argue that in many
  situations\, a new foundation which I call Equivariant ZFA (EZFA) may be
  a better choice\, because you can do everything in EZFA that you can do
  in FM and furthermore EZFA with Choice (EZFAC) is consistent whereas FM
  with Choice is not.\n\n* I will define EZFA and how it interacts with
  Choice.\n* I will prove that EZFA is *equivalent* to ZFA.\n* I will then
  prove that EZFA is *not equivalent* to ZFA.\n* I will explain why I think
  EZFA(C) may be useful\, why my last three papers were actually written in
  EZFAC\, and finally I will discuss the implications this may have for
  mathematical foundations in general.\n\n
UID:165
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180214T150000
DTEND;TZID=Europe/London:20180214T160000
LOCATION:LT1310
SUMMARY:MSP 101: Domain Theory
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: MSP 101:
  Domain Theory\n\nI will give an introduction to Domain Theory\, focusing
  on motivation. I hope to cover recursive definitions\, and solving domain
  equations using retraction pairs.\n
UID:164
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180208T150000
DTEND;TZID=Europe/London:20180208T160000
LOCATION:LT1212
SUMMARY:Introduction to coalgebra
DESCRIPTION:Speaker: Alexander Kurz (Leicester)\nTitle: Introduction to
  coalgebra\n\n\n
UID:163
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180207T150000
DTEND;TZID=Europe/London:20180207T160000
LOCATION:LT1415
SUMMARY:Departmental seminar: From Couplings to Probabilistic Relational
  Program Logics
DESCRIPTION:Speaker: Justin Hsu (UCL)\nTitle: From Couplings to
  Probabilistic Relational Program Logics\n\nMany program properties are
  relational\, comparing the behavior of a program (or even two different
  programs) on two different inputs. While researchers have developed
  various techniques for verifying such properties for standard\,
  deterministic programs\, relational properties for probabilistic programs
  have been more challenging. In this talk\, I will survey recent
  developments targeting a range of probabilistic relational properties\,
  with motivations from privacy\, cryptography\, machine learning. The key
  idea is to meld relational program logics with an idea from probability
  theory\, called a probabilistic coupling. The logics allow a highly
  compositional and surprisingly general style of analysis\, supporting
  clean proofs for a broad array of probabilistic relational properties.\n
UID:162
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180406T110000
DTEND;TZID=Europe/London:20180406T120000
LOCATION:LT1310
SUMMARY:Setoids and Quotients
DESCRIPTION:Speaker: James Chapman (MSP)\nTitle: Setoids and
  Quotients\n\nIn preparation for Fred's talk about "Quotient
  Inductive-Inductive Types" next week I will introduce quotients and
  setoids in type theory and some of the issues surrounding them. The use
  of setoids is discouraged by many doctors and can lead to a contagious
  and incurable condition: relation preservation. Quotients on the other
  hand are dangerous if not correctly handled and can lead to unsightly
  things appearing where they shouldn't such as inhabitants of the excluded
  middle.\n
UID:161
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180314T150000
DTEND;TZID=Europe/London:20180314T160000
LOCATION:LT1310
SUMMARY:Quantum Computing with ZX Calculus
DESCRIPTION:Speaker: Joe Collins (MSP)\nTitle: Quantum Computing with ZX
  Calculus\n\nQuantum mechanics is dope\, so it makes sense that making a
  computer using the principles of quantum mechanics would also be pretty
  sick. However\, the formalism that is used by physicists\, called a
  Hilbert space\, is not specialised for this purpose. In particular\, it
  is\n1) Difficult to prove properties about programs for quantum
  computers\n2) Difficult to see what is these programs are actually
  doing\n\nThankfully\, category theory is very cool! Using ZX calculus\,
  we can talk about quantum computing in a much clearer manner. I will be
  introducing some fundamental quantum mechanics and ZX calculus\, and then
  using ZX calculus I will talk about Shor's algorithm.\n
UID:160
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180307T100000
DTEND;TZID=Europe/London:20180307T170000
LOCATION:Level 5\, School of Computing Science\, University of Glasgow
SUMMARY:Event: SPLS
DESCRIPTION:
UID:159
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180221T150000
DTEND;TZID=Europe/London:20180221T160000
LOCATION:LT1310
SUMMARY:A Type-System for describing the Structural Topology of
  System-on-a-Chip Architectures
DESCRIPTION:Speaker: Jan de Muijnck-Hughes (Glasgow)\nTitle: A
  Type-System for describing the Structural Topology of System-on-a-Chip
  Architectures\n\nThe protocols that describe the interactions between IP
  Cores on System-on-a-Chip architectures are well-documented. These
  protocols described not only the structural properties of the physical
  interfaces but also the behaviour of the emanating signals. However\,
  there is a disconnect between the design of SoC architectures\, their
  formal description\, and the verification of their implementation in
  known hardware description languages.\n\nWithin the Border Patrol project
  we are investigating how to capture and reason about the structural and
  behavioural properties of SoC architectures using state-of-the-art
  advances in programming language research. Namely\, we are investigating
  using dependent types and session types for the description of hardware
  communication.\n\nIn this talk I will discuss my work in designing a
  linked family of languages that captures and reasons about the
  topological structure of a System-on-a-Chip. These languages provide
  correct-by-construction guarantees over the interaction protocols
  themselves\; the adherence of a component that connects using said
  protocols\; and the validity of the specified connections. These
  guarantees are provided through abuse of indexed monads to reason about
  resource usage\; and general (ab)use of dependent types as presented in
  Idris.\n\nI will not cover all aspects of the languages but will
  concentrate my talk detailing the underlying theories that facilitate the
  correct-by-construction guarantees.\n
UID:158
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180309T160000
DTEND;TZID=Europe/London:20180309T170000
LOCATION:LT1310
SUMMARY:MSP 101: Kan extensions
DESCRIPTION:Speaker: Alasdair Lambert and Ben Price (MSP)\nTitle: MSP
  101: Kan extensions\n\n\n
UID:157
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180207T150000
DTEND;TZID=Europe/London:20180207T160000
LOCATION:LT1310
SUMMARY:MSP 101: The adjoint functor theorem
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: MSP 101: The
  adjoint functor theorem\n\nAdjoint functors arise everywhere\, but how do
  we find them? It is a fun exercise to prove that right adjoints preserve
  limits\, and\, dually\, that left adjoints preserve colimits. An adjoint
  functor theorem is a statement that (under certain conditions) the
  converse holds: a functor which preserves limits is a right adjoint. I
  will discuss the General Adjoint Functor Theorem\, and why Peter
  Johnstone considers it fundamentally useless.\n
UID:155
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180131T150000
DTEND;TZID=Europe/London:20180131T160000
LOCATION:LT1310
SUMMARY:Reflections on the PhD process
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Reflections on the PhD
  process\n\n\n
UID:154
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180124T150000
DTEND;TZID=Europe/London:20180124T160000
LOCATION:LT1310
SUMMARY:Coinduction and the Companion
DESCRIPTION:Speaker: Jurriaan Rot (Radboud University Nijmegen)\nTitle:
  Coinduction and the Companion\n\nThe coinductive proof method can be
  enhanced by several techniques\, often referred to as up-to-techniques. I
  will talk about the basic theory of coinduction-up-to\, and a little
  about the more recent notion of companion. This companion is the largest
  valid up-to technique for a given predicate\, and gives a nice way of
  working with coinduction up-to.\n
UID:153
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20180116T160000
DTEND;TZID=Europe/London:20180116T170000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning session
DESCRIPTION:
UID:152
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171208T160000
DTEND;TZID=Europe/London:20171208T170000
LOCATION:LT1310
SUMMARY:Dijkstra Monads
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Dijkstra Monads\n\nOne monad
  to the tune of another.\n
UID:151
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171027T160000
DTEND;TZID=Europe/London:20171027T170000
LOCATION:LT1310
SUMMARY:Size-Matters in the Modal mu-Calculus
DESCRIPTION:Speaker: Johannes Marti (Universität Bremen)\nTitle:
  Size-Matters in the Modal mu-Calculus\n\nI talk about three methods for
  measuring the size of formulas in the modal mu-calculus and explore how
  the choice between them influences the complexity of computations on
  formulas. Especially\, I focus on the guarded transformation\, which is a
  simple syntactic transformation on formulas that is commonly assumed to
  be polynomial but has recently been shown to require exponential
  time.\n\nI will complain about the mess in the literature and present two
  of our (Clemens\, Yde and me) own preliminary results:\n\n1) There is a
  polynomial guarded transformation if we measure the input formula in the
  number of its subformulas and measure the output formula in the size of
  its closure.\n\n2) If there is a polynomial guarded transformation where
  we measure the input formula in the size of its closure then there is a
  polynomial algorithm for solving parity games. Hence finding such a
  transformation is at least as hard as solving parity games\, which is
  commonly believed to be quite hard.\n\nWe employ an automata-theoretic
  approach that relates the different measures for the size of a formula to
  different constraints on the transition structure of an automaton
  corresponding to the formula.\n\nThis is a very technical talk but there
  will be many pictures!\n
UID:150
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171011T120000
DTEND;TZID=Europe/London:20171011T170000
LOCATION:Informatics Forum\, Edinburgh
SUMMARY:Event: SPLS
DESCRIPTION:
UID:149
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170922T160000
DTEND;TZID=Europe/London:20170922T170000
LOCATION:LT1310
SUMMARY:Bidirectional Martin-Löf 1971
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Bidirectional Martin-Löf
  1971\n\nPer Martin-Löf's 1971 Theory of Types is the ancestor of the type
  systems used today in Agda\, Coq\, Idris\, NuPRL\, and many other
  variations on the theme of dependent types. Its principal virtue is its
  simplicity: it has very few moving parts (but they move quite a lot). Its
  well known principal vice is its inconsistency: you can write a looping
  program inhabiting any type (thus 'proving' any proposition). I'll be
  talking about the design principles for constructing dependent type
  systems which are bidirectional -- clearly split into a type checking
  part and a type synthesis part. By following these principles\, it gets
  easier to establish good safety properties of these systems. In
  particular\, I'll sketch how to keep type safety ("well typed programs
  don't go wrong") separate from normalization ("all computations
  terminate"). Martin-Löf's 1971\, reformulated bidirectionally\, makes a
  good example\, because it's small and type-safe\, but not normalizing.\n
UID:148
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170929T160000
DTEND;TZID=Europe/London:20170929T170000
LOCATION:LT1310
SUMMARY:Worlds
DESCRIPTION:Speaker: Ben Price (MSP)\nTitle: Worlds\n\nBuilding on last
  week's introduction to Martin-Löf 1971\, we describe a toy type theory
  which not only accounts for what type terms have\, but also where they
  live. This extra information can be interpreted as where (physically)
  data lives\, at what phase (typechecking vs runtime) it exists\, when it
  exists\, or who has access to the data.\n\nIn return for caring about
  these "worlds" describing where data lives\, we get applications to
  distributed computing and erasure for efficient code generation\, with
  future work to consider productivity and security.\n
UID:147
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171006T160000
DTEND;TZID=Europe/London:20171006T170000
LOCATION:LT1310
SUMMARY:Tetration
DESCRIPTION:Speaker: Peter Hancock \nTitle: Tetration\n\nIn ghci\, you
  can write something like <tt>let two f = f . f in two two two two (+1)
  0</tt></div> and it will print "65536". If you write something like <div
  class='centered'><tt>let two f = f . f \; four = two . two in four ($
  two) id (+1) 0</tt> \n it will print "Occurs check: cannot construct the
  infinite type: a ~ a -> a".\n\nCan haskell not count to four?(*)\n\nThe
  topic is the compact representation of unfeasibly large numbers using a
  pure (Glaswegian?) universe. Some excursions into the hinterland of the
  topic are likely.\n\nBy the way\, tetration is the function m n |-> n ^
  .. ^ n with m n's.\n\n(*) No doubt mad haskell mambo or pragma exists
  that will trick it into counting up to four. I will reward the most
  amusing/revolting demonstration with a large (reasonably priced) malt
  whisky.\n
UID:146
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171013T160000
DTEND;TZID=Europe/London:20171013T170000
LOCATION:LT1310
SUMMARY:Coalgebraic Learning
DESCRIPTION:Speaker: Simone Barlocco (MSP)\nTitle: Coalgebraic
  Learning\n\nAutomata learning is a well known technique to infer a finite
  state machine from a set of observations. One important algorithm for
  automata learning is the L* algorithm by Dana Angluin. In this 101 I will
  present a new perspective on L* using ideas from coalgebra and modal
  logic. After a brief recap of how L* works\, I will describe a
  generalisation of the L* algorithm to the coalgebraic level. I will
  conclude my talk with two concrete instances of the general framework:
  the learning of Mealy machines and of bisimulation quotients of
  probabilistic transition systems. Joint work with Clemens Kupke.\n
UID:145
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171103T160000
DTEND;TZID=Europe/London:20171103T170000
LOCATION:LT1310
SUMMARY:Measuring the sizes of trees
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Measuring the sizes of
  trees\n\nI'll talk about a way of measuring the sizes of trees using
  weighted tree automata\, in a compositional way that works well with
  pattern matching. This is based on some work by Georg Moser and Martin
  Hofmann.\n
UID:144
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171117T160000
DTEND;TZID=Europe/London:20171117T170000
LOCATION:LT1310
SUMMARY:Deep Learning
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Deep Learning\n\nI'll
  explain the first concepts of Deep Learning. This is an advert for a
  reading group on the topic which will run over the next few weeks.\n
UID:143
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171110T160000
DTEND;TZID=Europe/London:20171110T170000
LOCATION:LT1310
SUMMARY:Infinite Iteration of Games
DESCRIPTION:Speaker: Alasdair Lambert (MSP)\nTitle: Infinite Iteration of
  Games\n\nMy talk will be based on our recent paper "A Compositional
  Treatment of Iterated Open Games". In this paper we introduce a new
  operator on open games to capture the concept of subgame perfect
  equilibrium as well as providing final coalgebra semantics of infinite
  games.\n
UID:141
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171201T160000
DTEND;TZID=Europe/London:20171201T170000
LOCATION:LT1310
SUMMARY:MSP 101: Hereditary substitution
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: MSP 101: Hereditary
  substitution\n\n\n
UID:138
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20171206T130000
DTEND;TZID=Europe/London:20171206T140000
LOCATION:LT1415
SUMMARY:The Power of Parameterization in Coinductive Proof
DESCRIPTION:Speaker: Chung-Kil Hur (Seoul National University)\nTitle:
  The Power of Parameterization in Coinductive Proof\n\nIn this talk\, I
  will present a simple yet powerful principle for coinductive reasoning\,
  which we call "parameterized coinduction". More specifically\, it is as
  simple as the Knaster-Tarski theorem without requiring any syntactic
  checking\, yet as powerful as Coq's syntactic guarded coinduction
  supporting incremental reasoning. As an important consequence\,
  parameterized coinduction can easily support complex nested
  induction-coinduction. \n\nWe also implemented the parameterized
  coinduction as the Coq library called "paco"\, which can be found
  at:\n\nhttp://plv.mpi-sws.org/paco\n\nThis is joint work with Georg
  Neis\, Derek Dreyer and Viktor Vafeiadis\, and was presented at POPL'13.
  \n
UID:137
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170914T114000
DTEND;TZID=Europe/London:20170914T124000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning session
DESCRIPTION:
UID:136
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170911T140000
DTEND;TZID=Europe/London:20170911T150000
LOCATION:LT1101 (Board room)
SUMMARY:Adding Cubes to Agda
DESCRIPTION:Speaker: Andrea Vezzosi (Chalmers)\nTitle: Adding Cubes to
  Agda\n\nCubical Type Theory (CTT) provides an extension of Martin-Löf
  Type Theory (MLTT) where we can interpret the univalence axiom while
  preserving the canonicity property\, i.e. every closed term actually
  computes to a value. The typing and equality rules of CTT come as a
  fairly well-behaved extension of the ones of MLTT and the denotational
  model and prototype implementation help clarifying the system
  further.\n\nGiven the above it felt reasonable to introduce the features
  of CTT into a more mature proof assistant like Agda\, and this talk
  reports the status of this endeavour. In short:\n\n* The univalence axiom
  is proven as a theorem and we successfully tested its computational
  behavior on small examples.\n* <tt>comp</tt> computes for any
  parametrized data or record types\, including coinductive ones\, but it
  is stuck for inductive families.\n* The interaction of the path type and
  copatterns gives extensionality principles for coinductive records.\n*
  The interval <tt>I</tt> is an actual type\, we also have restriction
  types <tt>A[&phi&mapsto\; u]</tt> and types for partial elements
  <tt>Partial &phiA</tt>. Their sort makes sure <tt>comp</tt> does not
  apply to them.\n\nExamples are collected at
  https://github.com/Saizan/cubical-demo.\n
UID:135
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170906T140000
DTEND;TZID=Europe/London:20170906T150000
LOCATION:LT1310
SUMMARY:Binding and Substitution in String Diagrams
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Binding and Substitution
  in String Diagrams\n\nIn the categorical semantics of (e.g.) the simply
  typed lambda calculus substitution of a variable by a term is achieved by
  composing morphisms. What is the equivalent notion in diagrammatic
  languages? What even is a "variable" in this context? I'll sketch some
  (pretty) rough ideas for the beginnings of a “functional language” of
  diagrams including substitution\, binding\, and pattern matching. It
  turns out to all be about operads and co-operads.\n
UID:134
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170710T100000
DTEND;TZID=Europe/London:20170710T170000
LOCATION:LT1415
SUMMARY:Event: Open Games Workshop
DESCRIPTION:
UID:133
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170705T140000
DTEND;TZID=Europe/London:20170705T150000
LOCATION:LT1415
SUMMARY:Some enumerative\, topological\, and algebraic aspects of linear
  lambda calculus
DESCRIPTION:Speaker: Noam Zeilberger (Birmingham)\nTitle: Some
  enumerative\, topological\, and algebraic aspects of linear lambda
  calculus\n\nEnumeration of graphs on surfaces (or "maps") is an active
  topic of research in combinatorics\, with links to wide-ranging domains
  such as algebraic geometry\, knot theory\, and mathematical physics. In
  the last few years\, it has also been found that map enumeration is
  related to the combinatorics of lambda calculus\, with various well-known
  families of maps in 1-to-1 correspondence with various natural families
  of linear lambda terms. In the talk I will begin by giving a brief survey
  of these enumerative connections\, then use those to motivate a closer
  look at the surprisingly rich topological and algebraic properties of
  linear lambda calculus.\n
UID:132
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170615T140000
DTEND;TZID=Europe/London:20170615T150000
LOCATION:LT1310
SUMMARY:Informal introduction to knot theory and the unknotting problem
DESCRIPTION:Speaker: Stuart Gale (MSP)\nTitle: Informal introduction to
  knot theory and the unknotting problem\n\nThis is an informal talk on the
  interesting properties I've found when playing with the unknotting
  problem (knot simplification moves that help to establish whether any
  given knot is a loop in complicated disguise\, or something really
  knotted).\n\nI'll discuss the syntax that I've used for annotating knots
  that leads to a(n almost) syntax based method for unknotting\, but that
  hints further at unknotting in a more interesting way by using an
  unintentional property of the syntax.\n\nI'll present some examples of
  the problems with representing knots and how the syntax and reduction
  rules help\, in my opinion\, to make unknotting more tangible.\n
UID:131
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170629T140000
DTEND;TZID=Europe/London:20170629T150000
LOCATION:LT1310
SUMMARY:Syntax and semantics of Quantitative Type Theory
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Syntax and semantics of
  Quantitative Type Theory\n\nAt last year's WadlerFest celebration\, Conor
  presented a dependent type theory where variables are tagged with
  information about how they are used. Variable usage tagging has been
  developed in the non dependent setting\, starting with Girard's Linear
  Logic\, and culminating with recent work in contextual effects\,
  coeffects\, and quantitative type theories. The subtlety with dependent
  types lies in how to account for the difference between usage in types
  and terms. Conor's system handles this by treating usage in types as a
  "zero" usage\, so that it doesn't affect the usage in terms. This is a
  departure from previous "linear" type theories that maintains a strict
  separation between usage controlled information\, which types cannot
  depend on\, and unrestricted information\, which types can depend
  on.\n\nConor presented a syntax and typing rules for the system\, as well
  as an erasure property that exploits the difference between "not used"
  and "used"\, but doesn't do anything with the finer usage information
  available. I'll present a collection of models for the system that fully
  exploit the usage information. This will give interpretations of type
  theory in resource constrained computational models\, Geometry of
  Interaction models\, and imperative models. To maintain order\, I will
  gather all these notions of model under a new concept of "Quantitative
  Category with Families"\, a generalisation of the standard "Category with
  Families" class of models of dependent types.\n
UID:130
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170608T140000
DTEND;TZID=Europe/London:20170608T150000
LOCATION:LT1310
SUMMARY:TYPES 2017 Trip report
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: TYPES 2017
  Trip report\n\nI'll tell you about the most interesting talks\, ideas and
  gossip that came out of the TYPES conference in BudaPest last week.\n
UID:129
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170727T140000
DTEND;TZID=Europe/London:20170727T150000
LOCATION:LT1415
SUMMARY:The Rise and Fall of Cooperative Communities
DESCRIPTION:Speaker: Matteo Cavaliere (Edinburgh)\nTitle: The Rise and
  Fall of Cooperative Communities\n\nSocial\, biological and economic
  networks grow and decline with recurrent fragmentation and re-formation\,
  often explained in terms of external perturbations. I will present a
  model of dynamical networks and evolutionary game theory that explains
  these phenomena as consequence of imitation and endogenous conflicts
  between "cooperators" and "cheaters". Cooperators promote well-connected
  prosperous (but fragile) networks and cheaters cause the network to
  fragment and lose its prosperity. Once the network is fragmented it can
  be reconstructed by a new invasion of cooperators\, leading to recurrent
  cycles of formation and fragmentation observed\, for instance\, in
  bacterial communities and socio-economic networks. In the last part of
  the talk\, I will briefly introduce my current works on the role of
  individual decision-making in cooperative communities and the possibility
  of synthetic biology to address these ideas in microbial
  communities.\n\nReferences\n\nM. Cavaliere\, S. Sedwards\, C.E. Tarnita\,
  M.A. Nowak\, A. Csikasz-Nagy.\nProsperity is Associated with Instability
  in Dynamical Networks.\nJournal of Theoretical Biology\, 299\,
  2012.\n\nPlasticity Facilitates Sustainable Growth in the Commons.\nM.
  Cavaliere\, J.F. Poyatos.\nJournal of the Royal Society Interface\, 10\,
  2013.\n\nEco-Evolutionary Feedbacks can Rescue Cooperation in Microbial
  Populations.\nC. Moreno-Fenoll\, M. Cavaliere\, E. Martinez-Garcia\, J.F.
  Poyatos.\nScientific Reports\, 7\, 2017.\n
UID:128
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170601T140000
DTEND;TZID=Europe/London:20170601T150000
LOCATION:LT1310
SUMMARY:Optimal nondeterminism: explaining the Kameda-Weiner algorithm
DESCRIPTION:Speaker: Rob Myers \nTitle: Optimal nondeterminism:
  explaining the Kameda-Weiner algorithm\n\nThe Kameda-Weiner algorithm
  takes a machine (nondeterministic finite automaton) as input\, and
  provides an optimal machine (state-minimal nondeterministic finite
  automaton) as output. In this talk I will discuss work which provides a
  clear explanation of it\, by translating the various syntactic constructs
  into more meaningful order-theoretic ones\, and then composing them
  together to prove correctness.\n
UID:127
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170525T110000
DTEND;TZID=Europe/London:20170525T120000
LOCATION:LT1310
SUMMARY:Learning via Coalgebraic Logic
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Learning via Coalgebraic
  Logic\n\nA key result in computational learning theory is Dana Angluin's
  L* algorithm that describes how to learn a regular language\, or a
  deterministic finite automaton (DFA)\, using membership and equivalence
  queries. In my talk I will present a generalisation of this algorithm
  using ideas from coalgebra and modal logic -- please note\, however\,
  that prior knowledge of these topics will not be required.\n\nIn the
  first part of my talk I will recall how the L* algorithm works and
  establish a link to the notion of a filtration from modal logic.
  Furthermore I will provide a brief introduction to coalgebraic modal
  logic. In the second part of my talk I will present a generalisation of
  Angluin's original algorithm from DFAs to coalgebras for an arbitrary
  finitary set functor T in the following sense: given a (possibly
  infinite) pointed T-coalgebra that we assume to be regular (i.e. having
  an equivalent finite representation) we can learn its finite
  representation by (i) asking "logical queries" (corresponding to
  membership queries) and (ii) making conjectures to which a teacher has to
  reply with a counterexample (equivalence queries). This covers (known
  variants of) the original L* algorithm and algorithms for learning Mealy
  and Moore machines. Other examples are infinite streams\, trees and
  bisimulation quotients of various types of transition systems.\n\nJoint
  work with Simone Barlocco.\n
UID:126
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170518T150000
DTEND;TZID=Europe/London:20170518T160000
LOCATION:LT1310
SUMMARY:The joy of QIITs
DESCRIPTION:Speaker: Thorsten Altenkirch (Nottingham)\nTitle: The joy of
  QIITs\n\nQuotient inductive inductive types (QIITS) are set-truncated
  mutually defined higher inductive types. I am going to discuss two
  applications of QIITs:\n\n1. define an internal syntax of Type Theory
  without reference to untyped preterms;\n2. define a version of the
  partiality monad that doesn't require countable choice.\n\nOn the one
  hand I think that these applications are interesting because they
  represent applications of HoTT which have nothing to do with homotopy
  theory\; on the other hand they are clearly not very higher order (in the
  sense of truncation levels) but can be defined in the set-truncated
  fragment of HoTT. Hence my question: what are interesting applications of
  higher types which are not directly related to synthetic homotopy
  theory?\n\nThis talk is based on joint work with Paolo Capriotti\, Nils
  Anders Danielsoon\, Gabe Dijkstra\, Ambrus Kaposi and Nicolai Kraus.\n
UID:125
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170420T140000
DTEND;TZID=Europe/London:20170420T150000
LOCATION:LT1310
SUMMARY:Modular Datalog
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Modular Datalog\n\n\n
UID:124
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170504T140000
DTEND;TZID=Europe/London:20170504T150000
LOCATION:LT1310
SUMMARY:MSP 101: Differential Operators
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: MSP 101: Differential
  Operators\n\nA traditional source of complaint from CS undergraduates
  (especially in the USA\, but in other places\, too) is that they are made
  to learn too much standard issue mathematics with little apparent
  relevance to computation. Differential calculus (with its usual
  presentational focus on physical systems) is often picked upon as the
  archetype. What we see in action is the fragile male ego: they are not so
  quick to complain about the unimportance of things they do not find
  difficult. All of which makes more delicious the irony that differential
  operators have a key role to play in understanding discrete structures\,
  such as automata\, datatypes\, execution stacks\, and plenty more.\n\nThe
  basic idea is as follows: to put your finger over any single K in the
  pair of words BREKEKEKEX KOAXKOAX \n you must choose either to put your
  finger over a single K in BREKEKEKEX and pair with KOAXKOAX intact\, or
  to leave BREKEKEKEX intact and cover a K in KOAXKOAX. You have just
  followed Leibniz's rule for differentiating a product (with respect to
  K)\, and computed a one-hole context for a K in a data
  structure.\n\nNewton\, of course\, would point out that such derivatives
  arise as the limit of a divided difference\, a concept worthy of study in
  more generality. I would point out that divided differences are often
  definable\, even in situtations when neither division nor difference
  makes much apparent sense. Notably\, Brzozowski's derivative for regular
  languages is a divided difference (even though it is not Leibniz's
  derivative).\n\nI'll work mainly with containers (which look a lot like
  power series) but make sure there are plenty of concrete examples. In
  practice\, it becomes rather useful to compute derivatives by pattern
  matching on types\, which is especially funny as symbolic differentiation
  is the first example in the literature of computing anything by pattern
  matching at all.\n
UID:123
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170405T100000
DTEND;TZID=Europe/London:20170405T170000
LOCATION:Strathclyde\, room LT1415
SUMMARY:Event: CLAP
DESCRIPTION:
UID:122
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170410T090000
DTEND;TZID=Europe/London:20170410T170000
LOCATION:Strathclyde\, Room MC301 (McCance Building)
SUMMARY:Event: ALCOP2017
DESCRIPTION:
UID:121
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170222T150000
DTEND;TZID=Europe/London:20170222T160000
LOCATION:LT1415
SUMMARY:Departmental seminar: An introduction to Blockchains
DESCRIPTION:Speaker: Andrea Bracciali (Stirling)\nTitle: An introduction
  to Blockchains\n\nBlockchains\, i.e. decentralised\, distributed data
  structures which can also carry executable code for a non-standard
  execution environment\, introduce new models of computation.
  Decentralised\, here\, means\, informally speaking\, "without central
  control"\, e.g. a currency without a (central) bank\, but much more.
  Blockchains support the recently introduced virtual currencies\, a la
  Bitcoin\, and a new class of decentralised applications\, including smart
  contracts. In this talk we will introduce the main aspects of a
  blockchain\, with particular reference to the Bitcoin blockchain as a
  paradigmatic case of such a new model of computation\, and also touching
  on smart contracts. No previous knowledge of bitcoin/blockchain required
  for this introductory talk.\n
UID:120
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170215T130000
DTEND;TZID=Europe/London:20170215T140000
LOCATION:LT1415
SUMMARY:Departmental seminar: Semantics for probabilistic programming
DESCRIPTION:Speaker: Chris Heunen (Edinburgh)\nTitle: Semantics for
  probabilistic programming\n\nStatistical models in e.g. machine learning
  are traditionally expressed in some sort of flow charts. Writing
  sophisticated models succinctly is much easier in a fully fledged
  programming language. The programmer can then rely on generic inference
  algorithms instead of having to craft one for each model. Several such
  higher-order functional probabilistic programming languages exist\, but
  their semantics\, and hence correctness\, are not clear. The problem is
  that the standard semantics of probability theory\, given by measurable
  spaces\, does not support function types. I will describe how to get
  around this.\n
UID:119
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170206T140000
DTEND;TZID=Europe/London:20170206T150000
LOCATION:LT1415
SUMMARY:On the expressive power of user-defined effects: effect
  handlers\, monadic reflection\, delimited control without
  answer-type-modification
DESCRIPTION:Speaker: Ohad Kammar (Oxford)\nTitle: On the expressive power
  of user-defined effects: effect handlers\, monadic reflection\, delimited
  control without answer-type-modification\n\nWe compare the expressive
  power of three programming abstractions for user-defined computational
  effects: Bauer and Pretnar's effect handlers\, Filinski's monadic
  reflection\, and delimited control. This comparison allows a precise
  discussion about the relative merits of each programming
  abstraction.\n\nWe present three calculi\, one per abstraction\,
  extending Levy's call-by-push-value. These comprise syntax\, operational
  semantics\, a natural type-and-effect system\, and\, for handlers and
  reflection\, a set-theoretic denotational semantics. We establish their
  basic meta-theoretic properties: adequacy\, soundness\, and strong
  normalisation. Using Felleisen's notion of a macro translation\, we show
  that these abstractions can macro-express each other\, and show which
  translations preserve typeability. We use the adequate finitary
  set-theoretic denotational semantics for the monadic calculus to show
  that effect handlers cannot be macro-expressed while preserving
  typeability either by monadic reflection or by delimited control. We
  supplement our development with a mechanised Abella
  formalisation.\n\nJoint work with Yannick Forster\, Sam Lindley\, and
  Matija Pretnar.\n
UID:118
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170427T140000
DTEND;TZID=Europe/London:20170427T150000
LOCATION:LT1310
SUMMARY:What I\, Dunne\, done in my PhD
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: What I\, Dunne\, done in
  my PhD\n\n\n
UID:117
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170330T140000
DTEND;TZID=Europe/London:20170330T150000
LOCATION:LT1310
SUMMARY:Cubical adventures in Connecticut
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Cubical
  adventures in Connecticut\n\nI'll report on my attempts to design a
  cubical type theory together with Dan Licata and Ed Morehouse during my
  visit to Wesleyan University\, Middletown\, Connecticut. We had something
  which seemed quite promising\, but that falls apart just short of the
  finish line\; I'll tell you about it in the hope of miraculous rescue
  from the audience. However\, I'll start from basics so that everyone has
  a chance to join in in the fun. Mentions of Donald Trump will be kept to
  a minimum.\n
UID:116
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170323T140000
DTEND;TZID=Europe/London:20170323T150000
LOCATION:LT1310
SUMMARY:Blockchain discussion
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Blockchain discussion\n\n\n
UID:115
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170316T140000
DTEND;TZID=Europe/London:20170316T150000
LOCATION:LT1310
SUMMARY:MSP 101: Operational and Denotational Semantics for PCF
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: MSP 101: Operational and
  Denotational Semantics for PCF\n\nPCF is the prototypical functional
  programming language\, with two data types (naturals and booleans)\,
  lambda-abstraction and recursion. PCF was introduced by Gordon Plotkin in
  his seminal "LCF Considered as a Programming Language" paper from 1977.
  Despite PCF's simplicity\, its semantics is theoretically interesting. I
  will introduce PCF\, its operational semantics\, the "standard"
  domain-theoretic denotational semantics and show that the two agree on
  closed programs. Finally\, I will discuss observational equivalence for
  PCF and show that the denotational semantics fails to be "fully
  abstract".\n
UID:114
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170309T140000
DTEND;TZID=Europe/London:20170309T150000
LOCATION:LT1310
SUMMARY:MSP 101: Indexed Containers/Interaction Structures
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: MSP 101: Indexed
  Containers/Interaction Structures\n\n\n
UID:113
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170302T140000
DTEND;TZID=Europe/London:20170302T150000
LOCATION:LT1310
SUMMARY:MSP 101: Separation Logic and Hoare Logic
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: MSP 101: Separation Logic
  and Hoare Logic\n\nHoare Logic is a logic for proving properties of
  programs of the form: if the initial state satisfies a precondition\,
  then the final state satisfies a postcondition. Hoare logic proofs are
  structured around the structure of the program itself\, making the system
  a compositional one for reasoning about pieces of programs. I'll
  introduce Hoare Logic for a little imperative language with WHILE loops.
  I'll then motivate Separation Logic\, which enriches Hoare Logic with a
  Frame Rule for local reasoning. \n
UID:112
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170223T140000
DTEND;TZID=Europe/London:20170223T150000
LOCATION:LT1415
SUMMARY:MSP 101: Blockchain
DESCRIPTION:Speaker: James Chapman (MSP)\nTitle: MSP 101: Blockchain\n\nI
  will try to follow on from yesterday's introduction by getting to nitty
  gritty of bitcoin/blockchain. I won't assume attendance of the seminar
  but will try not to repeat it!\n
UID:111
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170216T140000
DTEND;TZID=Europe/London:20170216T150000
LOCATION:LT1310
SUMMARY:MSP 101: Automata on infinite words
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: MSP 101: Automata on
  infinite words\n\nIn this 101 I plan to discuss omega-automata\, i.e.\,
  finite automata that operate on infinite words/streams. These automata
  form an important tool for the specification and verification of the
  ongoing\, possibly infinite behaviour of a system. In my talk I will
  provide the standard definition(s) of omega-automata and highlight what
  makes omega-automata difficult from a coalgebraic perspective. Finally\,
  I am going to discuss the work by Ciancia & Venema that provides a first
  coalgebraic representation of a particular type of omega-automata\,
  so-called Muller automata.\n
UID:110
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170209T140000
DTEND;TZID=Europe/London:20170209T150000
LOCATION:LT1310
SUMMARY:MSP 101: Automata learning
DESCRIPTION:Speaker: Simone Barlocco (MSP)\nTitle: MSP 101: Automata
  learning\n\nAutomata learning is a well known technique to infer a finite
  state machine from a set of observations. One important algorithm for
  automata learning is the L* algorithm by Dana Angluin. In this 101\, I
  will explain how the L* algorithm works via an example. Afterwards\, I
  will discuss the ingredients of the algorithm both in the standard
  framework by Angluin and in a recently developed categorical/coalgebraic
  framework by Jacobs & Silva. Lastly\, I plan to outline the proof of the
  minimality of the automaton that is built by the learning algorithm.\n
UID:109
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170202T140000
DTEND;TZID=Europe/London:20170202T150000
LOCATION:LT1310
SUMMARY:MSP 101: First-order logic
DESCRIPTION:Speaker: Johannes Marti (MSP)\nTitle: MSP 101: First-order
  logic\n\nIn this 101 I outline the syntax and semantics of classical
  first order predicate logic. I try to also mention some of the
  characteristic properties of first order logic such as compactness\, the
  Löwenheim-Skolem theorem or locality properties in finite model theory.\n
UID:108
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170126T140000
DTEND;TZID=Europe/London:20170126T150000
LOCATION:LT1310
SUMMARY:La Vie Parisienne: POPL trip report
DESCRIPTION:Speaker: Conor McBride\, James Chapman\, and Bob Atkey
  (MSP)\nTitle: La Vie Parisienne: POPL trip report\n\n Our POPL attendees
  will tell us about their favourite talks\, the latest research gossip and
  show us their most scenic photos from POPL in Paris.\n
UID:107
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170119T140000
DTEND;TZID=Europe/London:20170119T150000
LOCATION:LT1310
SUMMARY:MSP 101: Automata and games for fixpoint logics
DESCRIPTION:Speaker: Johannes Marti (MSP)\nTitle: MSP 101: Automata and
  games for fixpoint logics\n\nI explain how we can use automata and games
  to understand the behaviour of modal fixpoint logics.\n
UID:106
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20170112T114000
DTEND;TZID=Europe/London:20170112T124000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning session
DESCRIPTION:
UID:105
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161214T160000
DTEND;TZID=Europe/London:20161214T170000
LOCATION:LT1415
SUMMARY:Departmental seminar: Do be do be do
DESCRIPTION:Speaker: Sam Lindley (Edinburgh)\nTitle: Do be do be do\n\nWe
  explore the design and implementation of Frank\, a strict functional
  programming language with a bidirectional effect type system designed
  from the ground up around a novel variant of Plotkin and Pretnar's effect
  handler abstraction.\n\nEffect handlers provide an abstraction for
  modular effectful programming: a handler acts as an interpreter for a
  collection of commands whose interfaces are statically tracked by the
  type system. However\, Frank eliminates the need for an additional effect
  handling construct by generalising the basic mechanism of functional
  abstraction itself. A function is simply the special case of a Frank
  /operator/ that interprets no commands.\n\nMoreover\, Frank's operators
  can be /multihandlers/ which simultaneously interpret commands from
  several sources at once\, without disturbing the direct style of
  functional programming with values.\n\nEffect typing in Frank employs a
  novel form of effect polymorphism which avoid mentioning effect variables
  in source code. This is achieved by propagating an /ambient ability/
  inwards\, rather than accumulating unions of potential effects
  outwards.\n\nI'll give a tour of Frank through a selection of concrete
  examples.\n\n(Joint work with Conor McBride and Craig McLaughlin) \n
UID:104
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161130T120000
DTEND;TZID=Europe/London:20161130T170000
LOCATION:Strathclyde
SUMMARY:Event: CLAP
DESCRIPTION:
UID:103
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161102T140000
DTEND;TZID=Europe/London:20161102T150000
LOCATION:LT1415
SUMMARY:An introduction to many-valued logics and effect algebras
DESCRIPTION:Speaker: Phil Scott (University of Ottawa)\nTitle: An
  introduction to many-valued logics and effect algebras\n\nThe algebras of
  many-valued Lukasiewicz logics (MV algebras) as well as the theory of
  quantum measurement (Effect algebras) have undergone considerable
  development in the 1980s and 1990s\; they now constitute important
  research fields\, with connections to several contemporary areas of
  mathematics\, logic\, and theoretical computer science.\n\nBoth subjects
  have recently attracted considerable interest among groups of researchers
  in categorical logic and foundations of quantum computing. I will give a
  leisurely introduction to MV algebras (and their associated logics)\, as
  well as the more general world of effect algebras. If time permits\, we
  will also illustrate some new results (with Mark Lawson\, Heriot-Watt) on
  coordinatization of some concrete MV-algebras using inverse semigroup
  theory.\n
UID:102
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161109T120000
DTEND;TZID=Europe/London:20161109T170000
LOCATION:Room 301\, McCance building\, Strathclyde
SUMMARY:Event: SPLS
DESCRIPTION:
UID:101
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160928T150000
DTEND;TZID=Europe/London:20160928T160000
LOCATION:LT1310
SUMMARY:Towards a Generic Treatment of Syntaxes with Binding
DESCRIPTION:Speaker: Guillaume Allais (Radboud University
  Nijmegen)\nTitle: Towards a Generic Treatment of Syntaxes with
  Binding\n\nThe techniques used by the generic programming community have
  taught us that we can greatly benefit from exposing the common internal
  structure of a family of objects. One can for instance derive once and
  for all a wealth of iterators from an abstract characterisation of
  recursive datatypes as fixpoints of functors.\n\nOur previous work on
  type and scope preserving semantics and their properties has made us
  realise that numerous semantics of the lambda calculus can be presented
  as instances of the fundamental lemma associated to an abstract notion of
  'Model'. This made it possible to avoid code duplication as well as prove
  these semantics' properties generically.\n\nPutting these two ideas
  together\, we give an abstract description of syntaxes with binding
  making both their recursive and scoping structure explicit. The
  fundamental lemma associated to these syntaxes can be instantiated to
  provide the user with proofs that its language is stable under renaming
  and substitution as well as provide a way to easily define various
  evaluators.\n
UID:100
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160915T150000
DTEND;TZID=Europe/London:20160915T160000
LOCATION:LT1310
SUMMARY:Morphisms of open games
DESCRIPTION:Speaker: Jules Hedges (Oxford)\nTitle: Morphisms of open
  games\n\n\n
UID:99
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161214T110000
DTEND;TZID=Europe/London:20161214T120000
LOCATION:LT1310
SUMMARY:Compositional Game Theory
DESCRIPTION:Speaker: Alasdair Lambert (MSP)\nTitle: Compositional Game
  Theory\n\nI will be discussing composition in a model of economic game
  theory and methods for representing the impact of choice on subsequent
  games. Time permitting I will also work through some games using this
  model.\n
UID:98
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161207T110000
DTEND;TZID=Europe/London:20161207T120000
LOCATION:LT1310
SUMMARY:Nominal filters and semantics of predicate logic
DESCRIPTION:Speaker: Jamie Gabbay (Heriot-Watt)\nTitle: Nominal filters
  and semantics of predicate logic\n\nA /filter/ P is a consistent
  deductively closed set of predicates. A filter is /prime/ when\n (phi or
  psi) in P => (phi in P or psi in P) \nIn words: if phi-or-psi is in P
  then phi is in P or psi is in P. Primeness gives soundness for
  disjunction.\n\nUsing this it is not hard to construct a semantics to
  propositional logic in which a predicate phi "means" the set of prime
  filters containing it. This is a standard "trick" for building semantics
  and is an extremely useful proof-method.\n\nI have developed a semantics
  for predicate logic and also for the lambda-calculus based on similar
  notions of filter\, but in a /nominal/ context -- meaning that filters
  are developed using Fraenkel-Mostowski (FM) set theory instead of
  Zermelo-Fraenkel (ZF) set theory. What matters here is that FM sets have
  additional name structure over ZF sets\, and this additional structure
  can be exploited to give semantics to the extra structure that predicates
  have over propositions\, and in particular the additional name structure
  lets us write down primeness conditions for soundness for universal
  quantification.\n\nThe resulting semantics is rich and interesting. In a
  sentence: nominal techniques help us to extend the notion of Stone
  representation and duality from propositional logic to full first-order
  logic (also with equality\, if we wish\, and also to other logics and
  calculi with variables and quantifiers).\n\nI will give a detailed
  description of the filter-style conditions involved\, and discuss some of
  what I think they tell us about predicates and quantification in logic
  and computation. More information can also be found in two papers
  here:\nhttp://www.gabbay.org.uk/papers.html#semooc\nhttp://www.gabbay.org
 .uk/papers.html#repdul\n
UID:97
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161123T110000
DTEND;TZID=Europe/London:20161123T120000
LOCATION:LT1310
SUMMARY:Some model theory for the modal mu-calculus
DESCRIPTION:Speaker: Yde Venema (ILLC\, Amsterdam)\nTitle: Some model
  theory for the modal mu-calculus\n\nWe discuss a number of semantic
  properties pertaining to formulas of the modal mu-calculus. For each of
  these properties we provide a corresponding syntactic fragment\, in the
  sense that a mu-calculus formula \\phi has the given property iff it is
  equivalent to a formula \\phi' in the corresponding fragment. Since this
  formula \\phi' will always be effectively obtainable from \\phi\, as a
  corollary\, for each of the properties under discussion\, we prove that
  it is decidable in elementary time whether a given mu-calculus formula
  has the property or not.\n\nThe properties that we study have in common
  that they all concern the dependency of the truth of the formula at
  stake\, on a single proposition letter p. In each case the semantic
  condition on \\phi will be that \\phi\, if true at a certain state in a
  certain model\, will remain true if we restrict the set of states where p
  holds\, to a special subset of the state space. Important examples
  include the properties of complete additivity and (Scott) continuity\,
  where the special subsets are the singletons and the finite sets\,
  respectively.\n\nOur proofs for these characterisation results will be
  automata-theoretic in nature\; we will see that the effectively defined
  maps on formulas are in fact induced by rather simple transformations on
  modal automata.\n
UID:96
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161116T110000
DTEND;TZID=Europe/London:20161116T120000
LOCATION:LT1310
SUMMARY:MSP 101: Modal logic
DESCRIPTION:Speaker: Johannes Marti (MSP)\nTitle: MSP 101: Modal
  logic\n\nModal logic provides a simple\, yet surprisingly powerful\,
  language for specifying properties of coalgebras. In this talk I
  introduce the basic modal logic that is interpreted on relational
  structures. My aim is to provide an idea how modal logic relates to other
  logics\, such as first-order and intuitionistic logic\, and to the
  duality between algebraic and coalgebraic structures.\n\nIf time
  permits\, I might also give a very informal warm-up for the modal
  mu-calculus which is the topic of next week's talk.\n
UID:95
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161109T103000
DTEND;TZID=Europe/London:20161109T113000
LOCATION:LT1310
SUMMARY:MSP 101: Meta-theory of lambda-calculi
DESCRIPTION:Speaker: Stuart Gale (MSP)\nTitle: MSP 101: Meta-theory of
  lambda-calculi\n\nI'll give a standard overview of Simply Typed Lambda
  Calculus (STLC) (syntax\, typing and computation rules) in a well-typed
  setting\, and then modify it to show STLC in a bidirectional
  setting.\n\nAfterwards I'll show Strong Confluence (Church-Rosser
  theorem) in the bidirectional setting.\n
UID:94
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161102T110000
DTEND;TZID=Europe/London:20161102T120000
LOCATION:LT1310
SUMMARY:System F and proof-relevant parametricity
DESCRIPTION:Speaker: Ben Price (MSP)\nTitle: System F and proof-relevant
  parametricity\n\nI shall give a brief introduction to System F.\nI will
  then explain how to capture our intuition about polymorphic functions
  behaving uniformly by relational parametricity\, and talk about ongoing
  work to find a notion of proof-relevant parametricity.\n
UID:93
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161026T110000
DTEND;TZID=Europe/London:20161026T120000
LOCATION:LT1310
SUMMARY:MSP 101: Data types and initial-algebra semantics
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: MSP 101:
  Data types and initial-algebra semantics\n\nI will give a basic
  introduction to data types and initial-algebra semantics. The meaning of
  a data type is given as the initial object in a category of types with
  the corresponding constructors. Initiality immediately allows the
  modelling of a non-dependent recursion principle. I'll show how this can
  be upgraded to full dependent elimination\, also known as induction\, by
  using the uniqueness of the mediating arrow\; in fact\, induction is
  equivalent to recursion plus uniqueness. All possibly unfamiliar terms in
  this abstract will also be explained.\n
UID:92
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161019T110000
DTEND;TZID=Europe/London:20161019T120000
LOCATION:LT1310
SUMMARY:MSP 101: A first introduction to coalgebra
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: MSP 101: A first
  introduction to coalgebra\n\nThe core subject of Computer Science is
  "generated behaviour" (quiz: who said this?). Coalgebra provides the
  categorical formalisation of generated behaviour. I am planning to
  provide a first\, very basic introduction to coalgebra. This will consist
  of two parts: i) coinduction & corecursion as means to define & reason
  about the (possibly) infinite behaviour of things\; ii)modal logics for
  coalgebras.\n
UID:91
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161012T110000
DTEND;TZID=Europe/London:20161012T120000
LOCATION:LT1310
SUMMARY:MSP 101: Category Theory
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: MSP 101: Category
  Theory\n\n\n
UID:90
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20161005T110000
DTEND;TZID=Europe/London:20161005T120000
LOCATION:LT1310
SUMMARY:MSP 101: Rewriting\, and operads
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: MSP 101: Rewriting\, and
  operads\n\n\n
UID:89
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160928T110000
DTEND;TZID=Europe/London:20160928T120000
LOCATION:LT1310
SUMMARY:ICFP trip report
DESCRIPTION:Speaker: James Chapman (MSP)\nTitle: ICFP trip report\n\n\n
UID:88
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160921T110000
DTEND;TZID=Europe/London:20160921T120000
LOCATION:LT1310
SUMMARY:Eventual image functors
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Eventual image
  functors\n\nFor a category C we consider the endomorphism category End(C)
  and the subcategory of automorphisms Aut(C) -> End(C). It has been
  observed that for C the category of finite sets\, finite dimensional
  vector spaces\, or compact metric spaces this inclusion functor admits a
  simultaneous left and right adjoint.\n\nWe give general criteria for the
  existence of such adjunctions for a broad class of categories which
  includes FinSet\, FinVect and CompMet as special cases. This is done
  using the language of factorisation systems and by introducing a notion
  of eventual image functors which provide a general method for
  constructing adjunctions of this kind.\n
UID:87
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160914T114000
DTEND;TZID=Europe/London:20160914T124000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning session
DESCRIPTION:
UID:86
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160824T160000
DTEND;TZID=Europe/London:20160824T170000
LOCATION:LT1415
SUMMARY:Information Effects for Understanding Type Systems
DESCRIPTION:Speaker: Philippa Cowderoy \nTitle: Information Effects for
  Understanding Type Systems\n\nOr: how someone else found the maths to
  justify my dogma\n
UID:85
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160701T140000
DTEND;TZID=Europe/London:20160701T150000
LOCATION:LT1415
SUMMARY:A New Perspective On Observables in the Category of Relations
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: A New Perspective On
  Observables in the Category of Relations\n\nPractice talk for Quantum
  Interactions.\n
UID:84
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160701T140000
DTEND;TZID=Europe/London:20160701T150000
LOCATION:LT1415
SUMMARY:Interacting Frobenius Algebras are Hopf
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Interacting Frobenius
  Algebras are Hopf\n\nPractice talk for LICS.\n\nTheories featuring the
  interaction between a Frobenius algebra and a Hopf algebra have recently
  appeared in several areas in computer science: concurrent programming\,
  control theory\, and quantum computing\, among others. Bonchi\,
  Sobocinski\, and Zanasi have shown that\, given a suitable distribution
  law\, a pair of Hopf algebras forms two Frobenius algebras. Coming from
  the perspective of quantum theory\, we take the opposite approach\, and
  show that interacting Frobenius algebras form Hopf algebras. We
  generalise \\cite{Bonchi2014a} by including non-trivial dynamics of the
  underlying object -- the so-called phase group -- and investigate the
  effects of finite dimensionality of the underlying model\, and recover
  the system of Bonchi et al as a subtheory in the prime power dimensional
  case. We show that the presence of a non-trivial phase group means that
  the theory cannot be formalised as a distributive law.\n
UID:83
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160606T090000
DTEND;TZID=Europe/London:20160606T170000
LOCATION:McCance building\, Strathclyde
SUMMARY:Event: Quantum Physics and Logic 2016
DESCRIPTION:
UID:82
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160601T120000
DTEND;TZID=Europe/London:20160601T130000
LOCATION:LT1310
SUMMARY:Interacting Frobenius algebras
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Interacting Frobenius
  algebras\n\nPractice talk for QPL.\n\nTheories featuring the interaction
  between a Frobenius algebra and a Hopf algebra have recently appeared in
  several areas in computer science: concurrent programming\, control
  theory\, and quantum computing\, among others. Bonchi\, Sobocinski\, and
  Zanasi (2014) have shown that\, given a suitable distributive law\, a
  pair of Hopf algebras forms two Frobenius algebras. Here we take the
  opposite approach\, and show that interacting Frobenius algebras form
  Hopf algebras. We generalise (BSZ 2014) by including non-trivial dynamics
  of the underlying object -- the so-called phase group -- and investigate
  the effects of finite dimensionality of the underlying model. We recover
  the system of Bonchi et al as a subtheory in the prime power dimensional
  case\, but the more general theory does not arise from a distributive
  law.\n
UID:81
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160504T110000
DTEND;TZID=Europe/London:20160504T120000
LOCATION:LT1310
SUMMARY:Factorisation Systems and Algebra
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Factorisation Systems and
  Algebra\n\nI'll show how to generalise some results from algebra (think
  groups\, rings\, R-modules etc.) to a categorical setting using
  factorisation systems and an appropriate notion of finiteness on the
  objects of a category.\n
UID:80
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160427T110000
DTEND;TZID=Europe/London:20160427T120000
LOCATION:LT1310
SUMMARY:Typing with Leftovers
DESCRIPTION:Speaker: Guillaume Allais (Radboud University
  Nijmegen)\nTitle: Typing with Leftovers\n\n\n
UID:79
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160419T160000
DTEND;TZID=Europe/London:20160419T170000
LOCATION:LT1415
SUMMARY:Departmental seminar: Formal languages\, coinductively formalized
DESCRIPTION:Speaker: Andreas Abel (Chalmers and Gothenburg
  University)\nTitle: Formal languages\, coinductively formalized\n\nFormal
  languages and automata are taught to every computer science student.
  However\, the student will most likely not see the beautiful coalgebraic
  foundations.\n\nIn this talk\, I recapitulate how infinite trees can
  represent formal languages (sets of strings). I explain Agda's
  coinduction mechanism based on copatterns and demonstrate that it allows
  an elegant representation of the usual language constructions like
  union\, concatenation\, and Kleene star\, with the help of Brzozowski
  derivatives. We will also investigate how to reason about equality of
  languages using bisimulation and coinductive proofs.\n
UID:78
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160414T103000
DTEND;TZID=Europe/London:20160414T170000
LOCATION: School of Informatics\, Edinburgh
SUMMARY:Event: Categories\, Logic\, and Physics\, Scotland
DESCRIPTION:
UID:77
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160331T103000
DTEND;TZID=Europe/London:20160331T113000
LOCATION:LT1415
SUMMARY:Presentations by candidates for the 'Coalgebraic Foundations of
  Semi-Structured Data' RA position
DESCRIPTION:Speaker: \nTitle: Presentations by candidates for the
  'Coalgebraic Foundations of Semi-Structured Data' RA position\n\n\n
UID:76
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160323T160000
DTEND;TZID=Europe/London:20160323T170000
LOCATION:LT1415
SUMMARY:Departmental seminar: A static analyser for concurrent Java
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: A static analyser for
  concurrent Java\n\nThreadSafe is a static analysis tool for finding bugs
  in concurrent Java code that has been used by companies across the world
  to analyse and find bugs in large mission industrial applications. I will
  talk about how ThreadSafe works\, and our experiences in applying static
  analysis technology to the "real world".\n\nThreadSafe is available from
  http://www.contemplateltd.com/\n
UID:75
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160525T153000
DTEND;TZID=Europe/London:20160525T163000
LOCATION:LT908
SUMMARY:Departmental seminar: A Compositional Approach to Game Theory
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: A Compositional Approach to
  Game Theory\n\nI will sketch an alternative approach to economic game
  theory based upon the computer science idea of compositionality:
  concretely we i) give a number of operators for building up complex and
  irregular games from smaller and simpler games\; and ii) show how the
  Nash equilibrium of these complex games can be defined recursively from
  their simpler components. We apply compositional reasoning to
  sophisticated games where agents must reason about how their actions
  affect future games and how those future games effect the utility they
  receive. This forces us into a second innovation -- we augment the usual
  lexicon of games with a dual notion to utility because\, in order for
  games to accept utility\, this utility must be generated by other games.
  Our third innovation is to represent our games as string diagrams so as
  to give a clear visual interface to manipulate them. Our fourth\, and
  final\, innovation is a categorical formalisation of these intuitive
  diagrams which ensures our reasoning about them is fully rigorous.\n\nThe
  talk will be general so as appeal to as wide an audience as possible. In
  particular\, no knowledge of category theory will be assumed!\n
UID:74
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160317T110000
DTEND;TZID=Europe/London:20160317T120000
LOCATION:LT1310
SUMMARY:On the rule algebraic reformulation of graph rewriting
DESCRIPTION:Speaker: Nicolas Behr (Edinburgh)\nTitle: On the rule
  algebraic reformulation of graph rewriting\n\nMotivated by the desire to
  understand the combinatorics of graph rewriting systems\, it proved
  necessary to invent a formulation of graph rewriting itself that is not
  based on category theoretic structures as in the traditional framework\,
  but on the concept of diagrammatic combinatorial Hopf algebras and
  reductions thereof. In this talk\, I will present how the classical
  example of the Heisenberg-Weyl algebra of creation and annihilation of
  indistinguishable particles\, which can alternatively be interpreted as
  the algebra of discrete graph rewriting\, gave the initial clues for this
  novel framework. In hindsight\, to pass from the special case of discrete
  graph rewriting to the case of general graph rewriting required every
  aspect of the framework of diagrammatic combinatorial Hopf algebras as a
  guideline for the construction\, yet none of the traditional category
  theoretic ideas\, whence one might indeed consider this reformulation as
  an independent formulation of graph rewriting.\n\nThe new framework
  results in a number of surprising results even directly from the
  formulation itself: besides the two main variants of graph rewriting
  known in the literature (DPO and SPO rewriting)\, there exist two more
  natural variants in the new framework. For all four variants\, graph
  rewriting rules are encoded in so-called rule diagrams\, with their
  composition captured in the form of diagrammatic compositions followed by
  one of four variants of reduction operations. Besides the general
  structure theory of the resulting algebras aka the rule algebras\, one of
  the most important results to date of this framework in view of
  applications is the possibility to formulate stochastic graph rewriting
  systems in terms of the canonical representations of the rule algebras.
  Notably\, this is closely analogous to the formulation of chemical
  reaction systems in terms of the canonical representation of the
  Heisenberg-Weyl algebra aka the bosonic Fock space. The presentation will
  not assume any prior knowledge of the audience on the particular
  mathematics required for this construction\, and will be given on the
  whiteboard. The work presented is the result of a collaboration with
  Vincent Danos and Ilias Garnier (ENS Paris/LFCS University of
  Edinburgh)\, and (in an earlier phase) with Tobias Heindel (University of
  Copenhagen).\n
UID:73
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160303T110000
DTEND;TZID=Europe/London:20160303T120000
LOCATION:LT1310
SUMMARY:Comprehensive Parametric Polymorphism
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle:
  Comprehensive Parametric Polymorphism\n\nIn this talk\, we explore the
  fundamental category-theoretic structure needed to model relational
  parametricity (i.e.\, the fact that polymorphic programs preserve all
  relations) for the polymorphic lambda calculus (a.k.a. System F). Taken
  separately\, the notions of categorical model of impredicative
  polymorphism and relational parametricity are well-known
  (lambda2-fibrations and reflexive graph categories\, respectively).
  Perhaps surprisingly\, simply combining these two structures results in a
  notion that only enjoys the expected properties in case the underlying
  category is well-pointed. This rules out many categories of interest
  (e.g. functor categories) in the semantics of programming
  languages.\n\nTo circumvent this restriction\, we modify the definition
  of fibrational model of impredicative polymorphism by adding one further
  ingredient to the structure: comprehension in the sense of Lawvere. Our
  main result is that such comprehensive models\, once further endowed with
  reflexive-graph-category structure\, enjoy the expected consequences of
  parametricity. This is proved using a type-theoretic presentation of the
  category-theoretic structure\, within which the desired consequences of
  parametricity are derived. Working in this type theory requires new
  techniques\, since equality relations are not available\, so that
  standard arguments that exploit equality need to be reworked.\n\nThis is
  joint work with Neil Ghani and Alex Simpson\, and a dry run for a talk in
  Cambridge the week after.\n
UID:72
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160126T150000
DTEND;TZID=Europe/London:20160126T160000
LOCATION:LT1310
SUMMARY:Rewriting modulo symmetric monoidal structure
DESCRIPTION:Speaker: Aleks Kissinger (Nijmegen)\nTitle: Rewriting modulo
  symmetric monoidal structure\n\nString diagrams give a powerful graphical
  syntax for morphisms in symmetric monoidal categories (SMCs). They find
  many applications in computer science and are becoming increasingly
  relevant in other fields such as physics and control theory.\n\nAn
  important role in many such approaches is played by equational theories
  of diagrams\, which can be oriented and used as rewrite systems. In this
  talk\, I'll lay the foundations for this form of rewriting by
  interpreting diagrams combinatorially as typed hypergraphs and establish
  the precise correspondence between diagram rewriting modulo the laws of
  SMCs on the one hand and double pushout (DPO) rewriting of hypergraphs\,
  subject to a soundness condition called convexity\, on the other. This
  result rests on a more general characterisation theorem in which we show
  that typed hypergraph DPO rewriting amounts to diagram rewriting modulo
  the laws of SMCs with a chosen special Frobenius structure.\n\nIf there's
  time\, I'll also discuss some of the results we have in developing the
  rewrite theory of hypergraphs for SMCs\, namely termination proofs via
  graph metrics and strongly convex critical pair analysis.\n
UID:71
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160126T103000
DTEND;TZID=Europe/London:20160126T113000
LOCATION:LT1310
SUMMARY:Enriched Lawvere Theories
DESCRIPTION:Speaker: John Power (Bath)\nTitle: Enriched Lawvere
  Theories\n\nIn this talk\, we consider extending Lawvere theories to
  allow enrichment in a base category such as CMonoid\, Poset or Cat. In
  doing so\, we see that we need to alter the formulation in a fundamental
  way\, using the notion of cotensor\, a kind of limit that is hidden in
  the usual accounts of ordinary category theory but is fundamental to
  enriched category theory. If time permits\, we will briefly consider the
  specific issues that arise when one has two-dimensional structure in the
  enriching category\, as exemplified by Poset and Cat.\n
UID:70
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160125T103000
DTEND;TZID=Europe/London:20160125T113000
LOCATION:LT1310
SUMMARY:Lawvere Theories
DESCRIPTION:Speaker: John Power (Bath)\nTitle: Lawvere Theories\n\nIn
  1963\, Bill Lawvere characterised universal algebra in category theoretic
  terms. His formulation being category theoretic was not its central
  contribution: more fundamental was its presentation independence. Three
  years later\, monads were proposed as another category theoretic
  formulation of universal algebra. Overall\, the former are technically
  better but the relationship is particularly fruitful and the latter are
  more prominent\, cf Betamax vs VHS. So we study Lawvere theories
  carefully in the setting of universal algebra and in relation to
  monads.\n
UID:69
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160225T110000
DTEND;TZID=Europe/London:20160225T120000
LOCATION:LT1310
SUMMARY:Excuse My Extrusion
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Excuse My Extrusion\n\nI
  have recently begun to learn about the Cubical Type Theory of Coquand et
  al.\, as an effective computational basis for Voevodsky's Univalent
  Foundations\, inspired by a model of type theory in cubical sets. It is
  in some ways compelling in its simplicity\, but in other ways
  intimidating in its complexity. In order to get to grips with it\, I have
  begun to develop my own much less subtle variation on the theme. If I am
  lucky\, I shall get away with it. If I am unlucky\, I shall have learned
  more about why Cubical Type Theory has to be as subtle as it is.\n\nMy
  design separates Coquand's all-powerful "compose" operator into smaller
  pieces\, dedicated to more specific tasks\, such as transitivity of
  paths. Each type path Q : S = T\, induces a notion of value path s {Q}
  t\, where either s : S\, or s is •\, "blob"\, and similarly\, t : T or t
  = •. A "blob" at one end indicates that the value at that end of the path
  is not mandated by the type. This liberalisation in the formation of
  "equality" types allows us to specify the key computational use of paths
  between types\, extrusion:\n\nif Q : S = T and s : S\, then s ⌢• Q : s
  {Q} •\n\nThat is\, whenever we have a value s at one end of a type path Q
  : S = T\, we can extrude that value across the type path\, getting a
  value path which is s at the S end\, but whose value at the T end is not
  specified in advance of explaining how to compute it. Extrusion gives us
  a notion of coercion-by-equality which is coherent by construction. It is
  defined by recursion on the structure of type paths. Univalence can be
  added to the system by allowing the formation of types interpolating two
  equivalent types\, with extrusion demanding the existence of the
  corresponding interpolant values\, computed on demand by means of the
  equivalence.\n\nSo far\, there are disconcerting grounds for optimism\,
  but the whole of the picture has not yet emerged: I may just have pushed
  the essential complexity into one corner\, or the whole thing may be
  holed below the waterline. But if it does turn out to be nonsense\, it
  will be nonsense for an interesting reason.\n
UID:68
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160218T140000
DTEND;TZID=Europe/London:20160218T150000
LOCATION:LT1310
SUMMARY:Coalgebraic Dynamic Logics
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Coalgebraic Dynamic
  Logics\n\nI will present work in progress on a (co)algebraic framework
  that allows to uniformly study dynamic modal logics such as Propositional
  Dynamic Logic (PDL) and Game Logic (GL). Underlying our framework is the
  basic observation that the program/game constructs of PDL/GL arise from
  monad structure\, and that the axioms of these logics correspond to
  compatibility requirements between the modalities and this monad
  structure. So far we have a general soundness and completeness result for
  PDL-like logics wrt T-coalgebras for a monad T. I will discuss our
  completeness theorem\, its limitations and plans for extending our
  results. [For the latter we might require the help of koalas\, wallabies
  and wombats.]\n
UID:67
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160211T110000
DTEND;TZID=Europe/London:20160211T120000
LOCATION:LT1310
SUMMARY:Introduction to (infinity\, 1)-categories
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Introduction
  to (infinity\, 1)-categories\n\nInfinity-categories simultaneously
  generalise topological spaces and categories. Intuitively\, a (weak)
  infinity-category should have objects\, morphisms\, 2-morphisms\,
  3-morphisms\, ... and identity morphisms and composition which is
  suitably unital and associative up to a higher (invertible) morphism (the
  number 1 in (infinity\, 1)-category means that k-morphisms for k > 1 are
  invertible) . The trouble begins when one naively tries to make these
  coherence conditions precise\; already 4-categories famously requires 51
  pages to define explicitly
  (http://math.ucr.edu/home/baez/trimble/tetracategories.html). Instead\,
  one typically turns to certain "models" of infinity-categories that
  encode all this data implicitly\, usually as some kind of simplicial
  object with additional properties. I will introduce two such models:
  quasicategories and complete Segal spaces. If time allows\, I will also
  discuss hopes and dreams about internalising these notions in Type
  Theory\, which should give a satisfactory treatment of category theory in
  Type Theory without assuming Uniqueness of Identity Proofs.\n
UID:66
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160204T110000
DTEND;TZID=Europe/London:20160204T120000
LOCATION:LT1310
SUMMARY:Two Constructions on Games
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: Two Constructions on
  Games\n\nI've been working with Jules Hedges on a compositional model of
  game theory. After briefly reminding you of the model\, I'll discuss
  where we are at -- namely the definition of morphisms between games\, and
  the treatment of choice and iteration of games. I'm hoping you will be
  able to shed some light on this murky area. There is a draft paper if
  anyone is interested.\n
UID:65
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160128T110000
DTEND;TZID=Europe/London:20160128T120000
LOCATION:LT1310
SUMMARY:Introduction to sheaves
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Introduction to
  sheaves\n\n\n
UID:64
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160121T110000
DTEND;TZID=Europe/London:20160121T120000
LOCATION:LT1310
SUMMARY:Overview: A Type Theory for Probabilistic and Bayesian Reasoning
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Overview: A Type
  Theory for Probabilistic and Bayesian Reasoning\n\nThe probabilistic
  calculus introduced in the eponymous paper by Robin Adams and Bart Jacobs
  is inspired by quantum theory by considering that conditional
  probabilities can be seen as side-effect-free measurements. A
  type-theoretic treatment of this semantic observation leads\, once
  equipped with suitable computation rules\, to the ability to do exact
  conditional inference.\n\nI will present the type theory and the
  accompanying computation rules proposed in the paper and discuss some of
  the interesting open questions I will be working on in the near future.
  \n
UID:63
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20160113T134000
DTEND;TZID=Europe/London:20160113T144000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning session
DESCRIPTION:
UID:62
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151202T110000
DTEND;TZID=Europe/London:20151202T120000
LOCATION:LT1310
SUMMARY:Introduction to coherence spaces\, and how to use them for
  dependent session types
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: Introduction to coherence
  spaces\, and how to use them for dependent session types\n\nCoherence
  spaces are a simplification of Scott domains\, introduced by Girard to
  give a semantics to the polymorphic lambda-calculus. While investigating
  the structure of coherence spaces\, Girard noticed that the denotation of
  the function type in coherence spaces can be decomposed into two
  independent constructions: a linear ("use-once") function space\, and a
  many-uses-into-one-use modality. And so Linear Logic was
  discovered.\n\nCoherence spaces are interesting because they model
  computation at a low level in terms of interchange of atomic 'tokens' of
  information. This makes them a useful tool for understanding several
  different computational phenomena.\n\nIn this talk\, I'll show how
  coherence spaces naturally model session types\, via Wadler's
  interpretation of Classical Linear Logic as a session-typed pi-calculus\,
  and how that interpretation extends to an interpretation of a dependently
  typed version of session types.\n
UID:61
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151118T110000
DTEND;TZID=Europe/London:20151118T120000
LOCATION:LT1310
SUMMARY:The categorical structure of von Neumann algebras
DESCRIPTION:Speaker: Bram Westerbaan (Nijmegen)\nTitle: The categorical
  structure of von Neumann algebras\n\nI would like to speak about the
  categorical structure of the category of von Neumann algebras\, with as
  morphisms normal\, completely positive\, unital linear maps. For some
  years my colleagues and I have worked on identifying basic structures in
  this category\, and while surprisingly many things do not exist or do not
  work in this category (it's not a topos or even an extensive category\,
  there's no epi-mono factorisation system\, there is no dagger\, colimits
  -- if they exist at all -- are horrendous...)\, we did find some
  structure (the products behave reasonable in some sense\, there is a
  'quotient'\, and 'comprehension'\, and we have a universal property for
  the minimal Stinespring dilation\, and a universal property for M_2--the
  qubit). There is no deep category theory involved by any standards\, and
  I promise I will spare you the functional analysis\, so it should be a
  light talk.\n
UID:60
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151111T110000
DTEND;TZID=Europe/London:20151111T120000
LOCATION:LT1310
SUMMARY:The Power of Coalitions
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: The Power of
  Coalitions\n\nDue to popular demand I am going to give a brief
  introduction to Marc Pauly's Coalition Logic\, a propositional modal
  logic that allows to reason about the power of coalitions in strategic
  games. I will provide motivation and basic definitions. Furthermore I am
  planning to discuss how the logic can be naturally viewed as a
  coalgebraic logic and what we gain from the coalgebraic perspective.
  Finally -- if (preparation) time permits -- I am going to say how the
  logic can be applied to the area of mechanism design.\n
UID:59
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151022T150000
DTEND;TZID=Europe/London:20151022T160000
LOCATION:LT1415
SUMMARY:Semantics for Social Systems where Theory about the System
  Changes the System
DESCRIPTION:Speaker: Viktor Winschel (ETH Zurich)\nTitle: Semantics for
  Social Systems where Theory about the System Changes the System\n\nIn
  societies the notion of a law is not given by nature. Instead social
  dynamics are driven by the theories the citizens have about the dynamics
  of the social system. Obviously self-referential mathematical
  structures\, developed in computer science\, are candidates to be applied
  in social sciences for this foundational issue. We will see a
  prototypical game theoretical problem where several computer scientific
  tools can help to discuss these structures. It is a long standing problem
  in economics and of human kind and their scarce recourses: "should we go
  to a bar that is always so overcrowded"?\n
UID:58
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151006T150000
DTEND;TZID=Europe/London:20151006T160000
LOCATION:LT1415
SUMMARY:Proof-theoretic semantics for dynamic logics
DESCRIPTION:Speaker: Alessandra Palmigiano (TU Delft)\nTitle:
  Proof-theoretic semantics for dynamic logics\n\nResearch in the proof
  theory of dynamic logics has recently gained momentum. However\, features
  which are essential to these logics prevent standard proof-theoretic
  methodologies to apply straightforwardly. In this talk\, I will discuss
  the main properties proof systems should enjoy in order to serve as
  suitable environments for an inferential theory of meaning
  (proof-theoretic semantics). Then\, I'll identify the main challenges to
  the inferential semantics research agenda posed by the very features of
  dynamic logics which make them so appealing and useful to applications.
  Finally\, I'll illustrate a methodology generating multi-type display
  calculi\, which has been successful on interesting case studies (dynamic
  epistemic logic\, propositional dynamic logic\, monotone modal
  logic).\n\nReferences\n\n1. S. Frittella\, G. Greco\, A. Kurz\, A.
  Palmigiano\, V. Sikimić\, A Proof-Theoretic Semantic Analysis of Dynamic
  Epistemic Logic\, Journal of Logic and Computation\, Special issue on
  Substructural logic and information dynamics (2014)\,
  DOI:10.1093/logcom/exu063.\n\n2. S. Frittella\, G. Greco\, A. Kurz\, A.
  Palmigiano\, V. Sikimić\, Multi-type Display Calculus for Dynamic
  Epistemic Logic\, Journal of Logic and Computation\, Special issue on
  Substructural logic and information dynamics (2014)\,
  DOI:10.1093/logcom/exu068.\n\n3. S. Frittella\, G. Greco\, A. Kurz\, A.
  Palmigiano\, Multi-type Display Calculus for Propositional Dynamic
  Logic\, Special issue on Substructural logic and information dynamics
  (2014)\, DOI:10.1093/logcom/exu064.\n\n4. S. Frittella\, G. Greco\, A.
  Kurz\, A. Palmigiano\, V. Sikimić\, Multi-type Sequent Calculi\, Proc.
  Trends in Logic XIII\, A. Indrzejczak\, J. Kaczmarek\, M. Zawidski eds\,
  p 81-93\, 2014.\n\n5. G. Greco\, A. Kurz\, A. Palmigiano\, Dynamic
  Epistemic Logic Displayed\, Proc. Fourth International Workshop on
  Logic\, Rationality and Interaction (LORI 2013) Eds: Huaxin Huang\,
  Davide Grossi\, Olivier Roy eds\, 2013.\n
UID:57
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150925T160000
DTEND;TZID=Europe/London:20150925T170000
LOCATION:LT1415
SUMMARY:Coinduction\, Equilibrium and Rationality of Escalation
DESCRIPTION:Speaker: Pierre Lescanne (ENS Lyon)\nTitle: Coinduction\,
  Equilibrium and Rationality of Escalation\n\nEscalation is the behavior
  of players who play forever in the same game. Such a situation is a
  typical field for application of coinduction which is the tool conceived
  for reasoning in infinite mathematical structures. In particular\, we use
  coinduction to study formally the game called /dollar auction/\, which is
  considered as the paradigm of escalation. Unlike what is admitted since
  1971\, we show that\, provided one assumes that the other agent will
  always stop\, bidding is rational\, because it results in a subgame
  perfect equilibrium. We show that this is not the only rational strategy
  profile (the only subgame perfect equilibrium). Indeed if an agent stops
  and will stop at every step\, whereas the other agent keeps bidding\, we
  claim that he is rational as well because this corresponds to another
  subgame perfect equilibrium. In the infinite dollar auction game the
  behavior in which both agents stop at each step is not a Nash
  equilibrium\, hence is not a subgame perfect equilibrium\, hence is not
  rational. Fortunately\, the notion of rationality based on coinduction
  fits with common sense and experience. Finally the possibility of a
  rational escalation in an arbitrary game can be expressed as a predicate
  on games and the rationality of escalation in the dollar auction game can
  be proved as a theorem which we have verified in the proof assistant COQ.
  In this talk we will recall the principles of infinite extensive games
  and use them to introduce coinduction and equilibria (Nash equilibrium\,
  subgame perfect equilibrium). We will show how one can prove that the two
  strategy profiles presented above are equilibria and how this leads to a
  "rational" escalation in the dollar auction. We will show that escalation
  may even happen in much simpler game named 0,1-game.\n
UID:56
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151028T110000
DTEND;TZID=Europe/London:20151028T120000
LOCATION:LT1310
SUMMARY:Interacting Frobenius Algebras Are Hopf
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Interacting Frobenius
  Algebras Are Hopf\n\nCommutative Frobenius algebras play an important
  role in both Topological Quantum Field Theory and Categorical Quantum
  Mechanics\; in the first case they correspond to 2D TQFTs\, while in the
  second they are non-degenerate observables. I will consider the case of
  "special" Frobenius algebras\, and their associated group of phases. This
  gives rise to a free construction from the category of abelian groups to
  the PROP generated by this Frobenius algebra. Of course a theory with
  only one observable is not very interesting. I will consider how two such
  PROPs should be combined\, and show that if the two algebras (i) jointly
  form a bialgebra and (ii) their units are "mutually real"\; then they
  jointly form a Hopf algebra. This gives a "free" model of a pair of
  strongly complementary observables. I will also consider which unitary
  maps must exist in such models.\n\nSlides are here
  (http://personal.strath.ac.uk/ross.duncan/talks/2015/vienna.pdf) if you
  want a preview.\n
UID:55
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151021T123000
DTEND;TZID=Europe/London:20151021T170000
LOCATION:Edinburgh
SUMMARY:Event: SPLS
DESCRIPTION:
UID:54
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151014T110000
DTEND;TZID=Europe/London:20151014T120000
LOCATION:LT1310
SUMMARY:Type and Scope Preserving Semantics
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Type and Scope
  Preserving Semantics\n\nWe introduce a notion of type and scope
  preserving semantics generalising Goguen and McKinna's "Candidates for
  Substitution" approach to defining one traversal generic enough to be
  instantiated to renaming first and then substitution. Its careful
  distinction of environment and model values as well as its variation on a
  structure typical of a Kripke semantics make it capable of expressing
  renaming and substitution but also various forms of Normalisation by
  Evaluation as well as\, perhaps more surprisingly\, monadic computations
  such as a printing function.\n\nWe then demonstrate that expressing these
  algorithms in a common framework yields immediate benefits: we can deploy
  some logical relations generically over these instances and obtain for
  instance the fusion lemmas for renaming\, substitution and normalisation
  by evaluation as simple corollaries of the appropriate fundamental lemma.
  All of this work has been formalised in Agda.\n
UID:53
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20151007T120000
DTEND;TZID=Europe/London:20151007T170000
LOCATION:Dundee
SUMMARY:Event: STP
DESCRIPTION:
UID:52
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150930T110000
DTEND;TZID=Europe/London:20150930T120000
LOCATION:LT1310
SUMMARY:ICFP trip report
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: ICFP trip report\n\n\n
UID:51
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150923T113000
DTEND;TZID=Europe/London:20150923T123000
LOCATION:LT1310
SUMMARY:Event: MSP101 Planning session
DESCRIPTION:
UID:50
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150916T110000
DTEND;TZID=Europe/London:20150916T120000
LOCATION:LT1310
SUMMARY:Contextuality\, path logic and a modal logic for Social Choice
  Theory
DESCRIPTION:Speaker: Giovanni Ciná (Amsterdam)\nTitle: Contextuality\,
  path logic and a modal logic for Social Choice Theory\n\nSocial Choice
  functions are procedures used to aggregate the preferences of individuals
  into a collective decision. We outline two recent abstract approaches to
  SCFs: a recent sheaf treatment of Arrow's Theorem by Abramsky and a modal
  logic studied by Ulle Endriss and myself. We show how to relate the
  categorical modelling of Social Choice problems to said work in Modal
  Logic. This insight prompts a number of research questions\, from the
  relevance of sheaf-like condition to the modelling of properties of SCFs
  on varying electorates.\n
UID:49
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150902T110000
DTEND;TZID=Europe/London:20150902T120000
LOCATION:LT1310
SUMMARY:Concurrent games
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Concurrent games\n\n\n
UID:48
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150813T150000
DTEND;TZID=Europe/London:20150813T160000
LOCATION:LT1415
SUMMARY:The Polymorphic Blame Calculus and Parametricity
DESCRIPTION:Speaker: Jeremy Siek (Indiana University)\nTitle: The
  Polymorphic Blame Calculus and Parametricity\n\nThe Polymorphic Blame
  Calculus (PBC) of Ahmed et al. (2011) combines polymorphism\, as in
  System F\, with type dynamic and runtime casts\, as in the Blame
  Calculus. The PBC is carefully designed to ensure relational
  parametricity\, that is\, to ensure that type abstractions do not reveal
  their abstracted types. The operational semantics of PBC uses runtime
  sealing and syntactic barriers to enforce parametricity. However\, it is
  an open question as to whether these mechanisms actually guarantee
  parametricity for the PBC. Furthermore\, there is some question regarding
  what parametricity means in the context of the PBC\, as we have examples
  that are morally parametric but not technically so. This talk will review
  the design of the PBC with respect to ensuring parametricity and
  hopefully start a discussion regarding what parametricity should mean for
  the PBC.\n
UID:47
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150826T110000
DTEND;TZID=Europe/London:20150826T120000
LOCATION:LT1310
SUMMARY:Comonadic Cellular Automata II
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Comonadic Cellular
  Automata II\n\nThis is a sequel to my last 101 where I spoke about
  describing cellular automata as algebras of a comonad on Set. I'll
  describe how we can make sense of "generalised cellular automata"
  (probabilistic/non-deterministic/quantum\, for example) as comonads on
  other categories via distributive laws of monads and comonads.\n
UID:46
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150723T110000
DTEND;TZID=Europe/London:20150723T120000
LOCATION:LT1310
SUMMARY:Free interacting observables
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Free interacting
  observables\n\n\n
UID:45
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150526T160000
DTEND;TZID=Europe/London:20150526T170000
LOCATION:LT1415
SUMMARY:Final coalgebras from corecursive algebras
DESCRIPTION:Speaker: Paul Levy (Birmingham)\nTitle: Final coalgebras from
  corecursive algebras\n\nWe give a technique to construct a final
  coalgebra out of modal logic. An element of the final coalgebra is a set
  of modal formulas. The technique works for both the finite and the
  countable powerset functors. Starting with a corecursive algebra\, we
  coinductively obtain a suitable subalgebra. We see - first with an
  example\, and then in the general setting of modal logic on a dual
  adjunction - that modal theories form a corecursive algebra\, so that
  this construction may be applied.\n\nWe generalize the framework to
  categories other than Set\, and look at examples in Poset and in the
  opposite category of Set.\n
UID:44
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150513T110000
DTEND;TZID=Europe/London:20150513T120000
LOCATION:LT1310
SUMMARY:Two-dimensional proof-relevant parametricity
DESCRIPTION:Speaker: Federico Orsanigo (MSP)\nTitle: Two-dimensional
  proof-relevant parametricity\n\nRelational parametricity is a fundamental
  concept within theoretical computer science and the foundations of
  programming languages\, introduced by John Reynolds. His fundamental
  insight was that types can be interpreted not just as functors on the
  category of sets\, but also as equality preserving functors on the
  category of relations. This gives rise to a model where polymorphic
  functions are uniform in a suitable sense\; this can be used to establish
  e.g. representation independence\, equivalences between programs\, or
  deriving useful theorems about programs from their type alone.\n\n The
  relations Reynolds considered were proof-irrelevant\, which from a type
  theoretic perspective is a little limited. As a result\, one might like
  to extend his work to deal with proof-relevant\, i.e. set-valued
  relations. However naive attempts to do this fail: the fundamental
  property of equality preservation cannot be established. Our insight is
  that just as one uses parametricity to restrict definable elements of a
  type\, one can use parametricity of proofs to ensure equality
  preservation. The idea of parametricity for proofs can be formalised
  using the idea of 2-dimensional logical relations. Interestingly\, these
  2-dimensional relations have clear higher dimensional analogues where
  (n+1)-relations are fibered over a n-cube of n-relations. Thus the story
  of proof relevant logical relations quickly expands into one of higher
  dimensional structures similar to the cubical sets which arises in
  Homotopy Type Theory. Of course\, there are also connections to Bernardy
  and Moulin's work on internal parametricity.\n
UID:43
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150508T150000
DTEND;TZID=Europe/London:20150508T160000
LOCATION:LT1415
SUMMARY:Departmental seminar: The probability of the Alabama paradox
DESCRIPTION:Speaker: Svante Linusson (KTH\, Stockholm)\nTitle: The
  probability of the Alabama paradox\n\nThere exists various possible
  methods to distribute seats proportionally between states (or parties) in
  a parliament. Hamilton's method (also known as the method of largest
  reminder) was abandoned in the USA because of some drawbacks\, in
  particular the possibility of the Alabama paradox\, but it is still in
  use in many other countries.\n\nIn recent work (joint with Svante Janson)
  we give\, under certain assumptions\, a closed formula for the
  probability that the Alabama paradox occurs given the vector p_1,...,p_m
  of relative sizes of the states.\n\nFrom the theorem we deduce a number
  of consequences. For example it is shown that the expected number of
  states that will suffer from the Alabama paradox is asymptotically
  bounded above by 1/e. For random (uniformly distributed) relative sizes
  p_1,...,p_m the expected number of states to suffer from the Alabama
  paradox converges to slightly more than a third of this\, or
  approximately 0.335/e=0.123\, as m -> infinity.\n\n I will assume no
  prior knowledge of electoral mathematics\, but begin by giving a brief
  background to various methods suggested and used for the distribution of
  seats proportionally in a parliament (it's all in the rounding).\n
UID:42
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150506T110000
DTEND;TZID=Europe/London:20150506T120000
LOCATION:LT1310
SUMMARY:Game theory in string diagrams
DESCRIPTION:Speaker: Jules Hedges (Queen Mary University of
  London)\nTitle: Game theory in string diagrams\n\nWe define a category
  whose morphisms are 'games relative to a continuation'\, designed to
  allow games to be built recursively from simple components. The resulting
  category has interesting structure similar to (but weaker than) compact
  closed\, and comes with an associated string diagram language.\n
UID:41
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150429T110000
DTEND;TZID=Europe/London:20150429T120000
LOCATION:LT1310
SUMMARY:An Introduction to Differential Privacy
DESCRIPTION:Speaker: Bob Atkey (MSP)\nTitle: An Introduction to
  Differential Privacy\n\nLet's say you have a database of people's private
  information. For SCIENCE\, or some other reason\, you want to let third
  parties query your data to learn aggregate information about the people
  described in the database. However\, you have a duty to the people whose
  information your database contains not to reveal any of their individual
  personal information. How do you determine which queries you will let
  third parties execute\, and those you will not?\n\n"Differential Privacy"
  defines a semantic condition on probabilistic queries that identifies
  queries that are safe to execute\, up to some "privacy budget".\n\nI'll
  present the definition of differential privacy\, talk a bit about why it
  is better than some 'naive' alternatives (e.g.\, anonymisation)\, and
  also describe how the definition can be seen as an instance of relational
  parametricity.\n\nA good place to read about the definition of
  differential privacy is the book "The Algorithmic Foundations of
  Differential Privacy" by Cynthia Dwork and Aaron Roth.\n
UID:40
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150320T150000
DTEND;TZID=Europe/London:20150320T160000
LOCATION:LT1415
SUMMARY:Departmental seminar: Approximating transition systems
DESCRIPTION:Speaker: Chris Heunen (Oxford)\nTitle: Approximating
  transition systems\n\nClassical computation\, invertible computation\,
  probabilistic computation\, and quantum computation\, form increasingly
  more sophisticated labelled transition systems. How can we approximate a
  transition system by less sophisticated ones? Considering all ways to get
  probabilistic information out of a quantum system leads to
  domain-theoretic ideas\, that also apply in the accompanying Boolean
  logic. I will survey to what extent these domains characterise the
  system\, leading with examples from quantum theory\, in a way that is
  accessible to a broad audience of computer scientists\, mathematicians\,
  and logicians.\n
UID:39
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150429T150000
DTEND;TZID=Europe/London:20150429T160000
LOCATION:LT1415
SUMMARY:Departmental seminar: Cyclic homology from mixed distributive
  laws
DESCRIPTION:Speaker: Uli Kraehmer (University of Glasgow)\nTitle: Cyclic
  homology from mixed distributive laws\n\nIn pure mathematics\, cyclic
  homology is an invariant of associative algebras that is motivated by
  algebra\, topology and even mathematicial physics. However\, when studied
  from an abstract point of view it turns out to be an invariant of a pair
  of a monad and a comonad that are related by a mixed distributive law\,
  and I speculate that this could lead to some potential applications in
  computer science.\n\n(based on joint work with Niels Kowalzig and Paul
  Slevin)\n
UID:38
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150422T140000
DTEND;TZID=Europe/London:20150422T150000
LOCATION:LT1310
SUMMARY:Patterns to avoid: (dependent) stringly-typed programming
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Patterns to avoid:
  (dependent) stringly-typed programming\n\nType : Set\nType = String ->
  Bool\n
UID:37
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150311T110000
DTEND;TZID=Europe/London:20150311T120000
LOCATION:LT1310
SUMMARY:Collapsing
DESCRIPTION:Speaker: Peter Hancock \nTitle: Collapsing\n\nThe topic comes
  from theory of infinitary proofs\, and cut-elimination. In essence it is
  about nicely-behaved maps from higher "infinities" to lower ones\, as the
  infinitary proofs are er\, infinite\, and can be thought of as glorified
  transfinite iterators. What might nice behaviour mean?\n\nYou can think
  of it as how to fit an uncountable amount of beer into a bladder whose
  capacity is merely countable. (Or maybe even finite.)\n\nThe most
  ubiquitous form of infinity is the regular cardinal\, iepassing from a
  container F to F + (mu F -> _)\, where mu is the W-type operation. I'll
  "explain" regular collapsing as being all about diagonalisation.\n\n\n
UID:36
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150304T140000
DTEND;TZID=Europe/London:20150304T150000
LOCATION:LT1415
SUMMARY:Event: A HoTT-Date with Thorsten Altenkirch
DESCRIPTION:
UID:35
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150218T120000
DTEND;TZID=Europe/London:20150218T170000
LOCATION:Royal College Building\, room RC512
SUMMARY:Event: SPLS @ Strathclyde
DESCRIPTION:
UID:34
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150211T110000
DTEND;TZID=Europe/London:20150211T120000
LOCATION:LT1415
SUMMARY:Totality versus Turing Completeness?
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Totality versus Turing
  Completeness?\n\nI gave an SPLS talk
  (http://www.dcs.gla.ac.uk/research/spls/Mar12/)\, which was mostly
  propaganda\, about why people should stop claiming that totality loses
  Turing completeness. There was some technical stuff\, too\, about
  representing a recursive definition as a construction in the free monad
  whose effect is calling out to an oracle for recursive calls: that tells
  you what it is to be recursive without prejudicing how to run it. I'm
  trying to write this up double-quick as a paper for the miraculously
  rubbery MPC deadline\, with more explicit attention to the monad
  morphisms involved. So I'd be grateful if you would slap down the shtick
  and make me more morphic. The punchline is that the Bove-Capretta domain
  predicate construction is a (relative) monad morphism from the free monad
  with a recursion oracle to the (relative) monad of Dybjer-Setzer
  Induction-Recursion codes. But it's worth looking at other monad
  morphisms (especially to the Delay monad) along the way.\n
UID:33
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150128T163000
DTEND;TZID=Europe/London:20150128T173000
LOCATION:LT1415
SUMMARY:Runners for your computations
DESCRIPTION:Speaker: Tarmo Uustalu (Institute of Cybernetics\,
  Tallinn)\nTitle: Runners for your computations\n\nWhat structure is
  required of a set so that computations in a given notion of computation
  can be run statefully this with set as the state space? Some answers: To
  be able to serve stateful computations\, a set must carry the structure
  of a lens\; for running interactive I/O computations statefully\, a
  "responder-listener" structure is necessary etc. I will observe that\, in
  general\, to be a runner of computations for an algebraic theory (defined
  as a set equipped with a monad morphism between the corresponding monad
  and the state monad for this set) is the same as to be a comodel of this
  theory\, ie a coalgebra of the corresponding comonad. I will work out a
  number of instances. I will also compare runners to handlers.\n
UID:32
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20150122T110000
DTEND;TZID=Europe/London:20150122T120000
LOCATION:LT1310
SUMMARY:Termination\, later
DESCRIPTION:Speaker: James Chapman (Institute of Cybernetics\,
  Tallinn)\nTitle: Termination\, later\n\nIt would be a great shame if
  dependently-typed programming (DTP) restricted us to only writing very
  clever programs that were a priori structurally recursive and hence
  obviously terminating. Put another way\, it is a lot to ask of the
  programmer to provide the program and its termination proof in one go\,
  programmers should also be supported in working step-by-step. I will show
  a technique that lowers the barrier of entry\, from showing termination
  to only showing productivity up front\, and then later providing the
  opportunity to show termination (convergence). I will show an example of
  a normaliser for STLC represented in Agda as a potentially
  non-terminating but nonetheless productive corecursive function targeting
  the coinductive delay monad.\n\n(Joint work with Andreas Abel)\n
UID:31
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141217T110000
DTEND;TZID=Europe/London:20141217T120000
LOCATION:LT1310
SUMMARY:Worlds\, Types and Quantification
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Worlds\, Types and
  Quantification\n\nI've managed to prove a theorem that I've been chasing
  for a while. The trouble\, of course\, was *stating* it. I'll revisit the
  motivation for extending type systems with an analysis of not just *what*
  things are but *where*\, *when*\, *whose*\, etc. The idea is that typed
  constructions occur in one of a preordered set of worlds\, with scoping
  restricted so that information flows only "upwards" from one world to
  another. Worlds might correspond to "at run time" and "during
  typechecking"\, or to computation in distinct cores\, or in different
  stages\, etc. What does the dependent function space mean in this
  setting? For a long time\, I thought that each world had its own
  universal quantifier\, for abstracting over stuff from that world.
  Failure to question this presumption is what led to failure to state a
  theorem I could prove. By separating quantifiers from worlds\, I have
  fixed the problem. I'll show how to prove the key fact: if I can build
  something in one world and then move it to another\, then it will also be
  a valid construction once it has arrived at its destination.\n
UID:30
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141210T110000
DTEND;TZID=Europe/London:20141210T120000
LOCATION:LT1310
SUMMARY:ZX and PROPs
DESCRIPTION:Speaker: Aleks Kissinger (Oxford)\nTitle: ZX and PROPs\n\n\n
UID:29
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141203T140000
DTEND;TZID=Europe/London:20141203T150000
LOCATION:LT1310
SUMMARY:Event: HoTT reading group @ Strathclyde
DESCRIPTION:We will read the paper A Model of Type Theory in Cubical Sets
  (http://drops.dagstuhl.de/opus/volltexte/2014/4628/pdf/7.pdf) by Marc
  Bezem (http://www.ii.uib.no/~bezem/)\, Thierry Coquand
  (http://www.cse.chalmers.se/~coquand/) and Simon Huber
  (http://www.cse.chalmers.se/~simonhu/). Thierry's Variation on cubical
  sets (http://www.cse.chalmers.se/~coquand/comp.pdf) might also be useful.
  *Administrative details*: meet for lunch at 12am for those who want to\,
  reading group starts at 2pm.
UID:28
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141119T120000
DTEND;TZID=Europe/London:20141119T130000
LOCATION:LT1310
SUMMARY:Arrow's Theorem and Escalation
DESCRIPTION:Speaker: Neil Ghani and Clemens Kupke (MSP)\nTitle: Arrow's
  Theorem and Escalation\n\nNeil and Clemens will report back from the
  Lorentz Center Workshop on Logics for Social Behaviour
  (http://www.cs.le.ac.uk/people/akurz/lsb.html).\n
UID:27
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141126T110000
DTEND;TZID=Europe/London:20141126T120000
LOCATION:LT1310
SUMMARY:Diagrammatic languages for monoidal categories
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Diagrammatic languages for
  monoidal categories\n\nMonoidal categories are essentially 2-dimensional
  things\, so why on earth would we represent them using a linear string of
  symbols? I'll talk about how to use string diagrams for monoidal
  categories\, graph rewriting for reasoning within them\, and how the
  syntax can be extended to handle certain kinds of infinitary expressions
  with the infamous !-box. If there's time I'll finish with some half-baked
  (eh... basically still looking for the on switch of the oven...) ideas of
  how to generalise them.\n
UID:26
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141106T090000
DTEND;TZID=Europe/London:20141106T100000
LOCATION:LT1310
SUMMARY:Comonadic Cellular Automata
DESCRIPTION:Speaker: Kevin Dunne (MSP)\nTitle: Comonadic Cellular
  Automata\n\nKevin will be giving an informal talk about some of the stuff
  he has been learning about. He'll give the definition of a cellular
  automaton and then talk about how this definition can be phrased in terms
  of a comonad.\n
UID:25
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141105T110000
DTEND;TZID=Europe/London:20141105T120000
LOCATION:Boardroom (LT1101d)
SUMMARY:Logical Relations for Monads by Categorical TT-Lifting
DESCRIPTION:Speaker: Shin-ya Katsumata (Kyoto University)\nTitle: Logical
  Relations for Monads by Categorical TT-Lifting\n\nLogical relations are
  widely used to study various properties of typed lambda calculi. By
  extending them to the lambda calculus with monadic types\, we can gain
  understanding of the properties on functional programming languages with
  computational effects. Among various constructions of logical relations
  for monads\, I will talk about a categorical TT-lifting\, which is a
  semantic analogue of Lindley and Stark's leapfrog method.\n\nAfter
  reviewing some fundamental properties of the categorical TT-lifting\, we
  apply it to the problem of relating two monadic semantics of a
  call-by-value functional programming language with computational effects.
  This kind of problem has been considered in various forms: for example\,
  the relationship between monadic style and continuation passing style
  representations of call-by-value programs was studied around '90s. We
  give a set of sufficient conditions to solve the problem of relating two
  monadic semantics affirmatively. These conditions are applicable to a
  wide range of such problems.\n
UID:24
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141027T140000
DTEND;TZID=Europe/London:20141027T150000
LOCATION:Boardroom (LT1101d)
SUMMARY:Constructing analysis-directed semantics
DESCRIPTION:Speaker: Dominic Orchard (Imperial College London)\nTitle:
  Constructing analysis-directed semantics\n\nAll kinds of semantics are
  syntax directed: the semantics follows from the syntax. Some varieties of
  semantics are syntax and type directed. In this talk\, I'll discuss
  syntax\, type\, *and* analysis directed semantics (analysis-directed
  semantics for short!)\, for analyses other than types. An
  analysis-directed semantics maps from terms coupled with derivations of a
  static program analysis into some semantic domain. For example\, the
  simply-typed lambda calculus with an effect system maps to the category
  generated by a strong parametric effect monad (due to Katsumata) and a
  bounded-linear logic-like analysis (described as a coeffect systems) maps
  to a category generated by various structures related to monoidal
  comonads. I'll describe a general technique for building
  analysis-directed semantics where semantic objects and analysis objects
  have the same structure and are coupled by lax homomorphisms between
  them. This aids proving semantic properties: the proof tree of an
  equality for two program analyses implies the rules needed to prove
  equality of the programs' denotations.\n
UID:23
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141112T110000
DTEND;TZID=Europe/London:20141112T120000
LOCATION:LT1310
SUMMARY:Lambda-abstraction and other diabolical contrivances
DESCRIPTION:Speaker: Peter Hancock \nTitle: Lambda-abstraction and other
  diabolical contrivances\n\nThe topic is the unholy trinity of eta\,
  zeta\, and xi. I'll indicate how Curry managed to give a finite
  combinatorial axiomatisation of this nastiness\, by anticipating
  (almost-but-not-*quite*) McBride et al's applicative functors.\n
UID:22
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141029T120000
DTEND;TZID=Europe/London:20141029T170000
LOCATION:Dundee
SUMMARY:Event: SICSA CSE Meeting on Effects and Coeffects Systems and
  their use for resource control
DESCRIPTION:
UID:21
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141022T110000
DTEND;TZID=Europe/London:20141022T120000
LOCATION:LT1310
SUMMARY:Higher dimensional parametricity and its cubical structure
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: Higher dimensional
  parametricity and its cubical structure\n\nNeil will talk about partial
  progress made during the summer on higher dimensional parametricity and
  the cubical structures that seem to arise. \nDetails will be kept to a
  minimum and\, of course\, concepts stressed.\n
UID:20
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141015T120000
DTEND;TZID=Europe/London:20141015T170000
LOCATION:Heriot Watt
SUMMARY:Event: SPLS
DESCRIPTION:
UID:19
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141008T110000
DTEND;TZID=Europe/London:20141008T120000
LOCATION:LT1310
SUMMARY:"Real-world data" and dependent types
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: "Real-world data" and
  dependent types\n\nConor has offered to talk to us about what he has been
  thinking about recently. He says this includes models\, views\, and
  dependent types.\n
UID:18
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20141001T110000
DTEND;TZID=Europe/London:20141001T120000
LOCATION:LT1310
SUMMARY:Initial algebras via strong dinaturality\, internally
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Initial
  algebras via strong dinaturality\, internally\n\n Or: My summer with
  Steve\nOr: How Christine and Frank were right\, after all\nOr: Inductive
  types for the price of function extensionality and impredicative Set\n\n
  Christine Paulin-Mohring and Frank Pfenning suggested to use
  impredicative encodings of inductive types in the Calculus of
  Constructions\, but this was later abandoned\, since it is "well-known"
  that induction principles\, i.e. dependent elimination\, can not be
  derived for this encoding. It now seems like it is possible to give a
  variation of this encoding for which the induction principle is derivable
  after all. The trick is to use identity types to cut down the
  transformations of type (Pi X : Set) . (F(X) -> X) -> X to the ones that
  are internally strongly dinatural\, making use of a formula for a
  "generalised Yoneda Lemma" by Uustalu and Vene.\n
UID:17
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140815T150000
DTEND;TZID=Europe/London:20140815T160000
LOCATION:LT1310
SUMMARY:Internal parametricity
DESCRIPTION:Speaker: Fredrik Nordvall Forsberg (MSP)\nTitle: Internal
  parametricity\n\n\n
UID:16
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140528T110000
DTEND;TZID=Europe/London:20140528T120000
LOCATION:LT1310
SUMMARY:Graphical algebraic foundations for monad stacks
DESCRIPTION:Speaker: Ohad Kammar (Cambridge)\nTitle: Graphical algebraic
  foundations for monad stacks\n\nOhad gave an informal overview of his
  current draft\, with the following abstract:\n\nHaskell incorporates
  computational effects modularly using sequences of monad transformers\,
  termed monad stacks. The current practice is to find the appropriate
  stack for a given task using intractable brute force and heuristics. By
  restricting attention to algebraic stack combinations\, we provide a
  linear-time algorithm for generating all the appropriate monad stacks\,
  or decide no such stacks exist. Our approach is based on Hyland\,
  Plotkin\, and Power's algebraic analysis of monad transformers\, who
  propose a graph-theoretical solution to this problem. We extend their
  analysis with a straightforward connection to the modular decomposition
  of a graph and to cographs\, a.k.a. series-parallel graphs.\n\nWe present
  an accessible and self-contained account of this monad-stack generation
  problem\, and\, more generally\, of the decomposition of a combined
  algebraic theory into sums and tensors\, and its algorithmic solution. We
  provide a web-tool implementing this algorithm intended for semantic
  investigations of effect combinations and for monad stack generation.\n
UID:15
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140521T110000
DTEND;TZID=Europe/London:20140521T120000
LOCATION:LT1310
SUMMARY:Coalgebraic Foundations of Databases
DESCRIPTION:Speaker: Clemens Kupke (MSP)\nTitle: Coalgebraic Foundations
  of Databases\n\n This 101 is intended to be a brainstorming session on
  possible links between the theory of coalgebras and the theory of
  databases. I will outline some ideas in this direction and I am looking
  forward to your feedback.\n
UID:14
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140514T110000
DTEND;TZID=Europe/London:20140514T120000
LOCATION:LT1310
SUMMARY:Resource aware contexts and proof search for IMLL
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Resource aware
  contexts and proof search for IMLL\n\nIn Intuitionistic Multiplicative
  Linear Logic\, the right introduction rule for tensors implies picking a
  2-partition of the set of assumptions and use each component to inhabit
  the corresponding tensor's subformulas. This makes a naive proof search
  algorithm intractable. Building a notion of resource availability in the
  context and massaging the calculus into a more general one handling both
  resource consumption and a notion of "leftovers" of a subproof allows for
  a well-structured well-typed by construction proof search mechanism.\n\n
  Here is an Agda file
  (http://gallais.org/code/LinearProofSearch/poc.LinearProofSearch.html)
  implementing the proof search algorithm.\n
UID:13
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140407T110000
DTEND;TZID=Europe/London:20140407T120000
LOCATION:LT1310
SUMMARY:Nominal sets
DESCRIPTION:Speaker: Jamie Gabbay (Heriot-Watt)\nTitle: Nominal
  sets\n\n\n
UID:12
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140402T110000
DTEND;TZID=Europe/London:20140402T120000
LOCATION:LT1310
SUMMARY:Towards cubical type theory
DESCRIPTION:Speaker: Thorsten Altenkirch (Nottingham)\nTitle: Towards
  cubical type theory\n\n\n
UID:11
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140319T110000
DTEND;TZID=Europe/London:20140319T120000
LOCATION:LT1310
SUMMARY:The selection monad transformer
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: The selection monad
  transformer\n\nGuillaume presented parts of Hedges' paper Monad
  transformers for backtracking search
  (http://www.eecs.qmul.ac.uk/~julesh/papers/monad_transformers.pdf)
  (accepted to MSFP 2014 (http://www.cs.bham.ac.uk/~pbl/msfp2014/)). The
  paper extends Escardo and Oliva's work on the selection and continuation
  monads to the corresponding monad transformers\, with applications to
  backtracking search and game theory.\n
UID:10
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140305T150000
DTEND;TZID=Europe/London:20140305T160000
LOCATION:LT1310
SUMMARY:Lagrange inversion
DESCRIPTION:Speaker: Stuart Hannah (Strathclyde Combinatorics)\nTitle:
  Lagrange inversion\n\nStuart spoke about Lagrange inversion\, a
  species-theoretic attempt to discuss the existence of solutions to
  equations defining species.\n
UID:9
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140228T140000
DTEND;TZID=Europe/London:20140228T150000
LOCATION:LT1310
SUMMARY:Species
DESCRIPTION:Speaker: Neil Ghani (MSP)\nTitle: Species\n\nNeil spoke about
  how adding structured quotients to containers gives rise to a larger
  class of data types.\n
UID:8
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140219T110000
DTEND;TZID=Europe/London:20140219T120000
LOCATION:LT1310
SUMMARY:Synthetic Differential Geometry
DESCRIPTION:Speaker: Tim Revell (MSP)\nTitle: Synthetic Differential
  Geometry\n\nTim gave a brief introduction to Synthetic Differential
  Geometry. This is an attempt to treat smooth spaces categorically so we
  can extend the categorical methods used in the discrete world of computer
  science to the continuous work of physics. \n
UID:7
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140212T110000
DTEND;TZID=Europe/London:20140212T120000
LOCATION:LT1310
SUMMARY:Worlds
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: Worlds\n\nConor talked
  about worlds (aka phases\, aka times\, ...): why one might bother\, and
  how we might go about equipping type theory with a generic notion of
  permitted information flow.\n
UID:6
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140205T110000
DTEND;TZID=Europe/London:20140205T120000
LOCATION:LT1310
SUMMARY:Operads
DESCRIPTION:Speaker: Miles Gould (Edinburgh)\nTitle: Operads\n\nMiles has
  kindly agreed to come through and tell us about Operads\, thus revisiting
  the topic of his PhD and the city in which he did it. \n
UID:5
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140122T110000
DTEND;TZID=Europe/London:20140122T120000
LOCATION:LT1310
SUMMARY:Overview of (extensions of) inductive-recursive definitions
DESCRIPTION:Speaker: Lorenzo Malatesta (MSP)\nTitle: Overview of
  (extensions of) inductive-recursive definitions\n\n\n
UID:4
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20140108T110000
DTEND;TZID=Europe/London:20140108T120000
LOCATION:LT1310
SUMMARY:On the recently found inconsistency of the univalence axiom in
  current Agda and Coq
DESCRIPTION:Speaker: Conor McBride (MSP)\nTitle: On the recently found
  inconsistency of the univalence axiom in current Agda and Coq\n\n\n
UID:3
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20131218T110000
DTEND;TZID=Europe/London:20131218T120000
LOCATION:LT1310
SUMMARY:Quantum Mechanics
DESCRIPTION:Speaker: Ross Duncan (MSP)\nTitle: Quantum Mechanics\n\n\n
UID:2
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20131120T110000
DTEND;TZID=Europe/London:20131120T120000
LOCATION:LT1310
SUMMARY:Classical Type Theories
DESCRIPTION:Speaker: Robin Adams (MSP visitor)\nTitle: Classical Type
  Theories\n\nIn 1987\, Felleisen showed how to add control operators (for
  things like exceptions and unconditional jumps) to the untyped
  lambda-calculus. In 1990\, Griffin idly wondered what would happen if one
  did the same in a typed lambda calculus. The answer came out: the
  inhabited types become the theorems of classical logic.\n\n I will
  present the lambda mu-calculus\, one of the cleanest attempts to add
  control operators to a type theory. We'll cover the good news: the
  inhabited types are the tautologies of minimal classical logic\, and
  Godel's Double Negation translation from classical to intuitionistic
  logic turns into the CPS translation.\n\nAnd the bad news: control
  operators don't play well with other types. Add natural numbers (or some
  other inductive type)\, and you get inconsistency. Add Sigma-types\, and
  you get degeneracy (any two objects of the same type are definitionally
  equal). It gets worse: add plus-types\, and you break Subject
  Reduction.\n
UID:1
END:VEVENT
BEGIN:VEVENT
DTSTAMP;TZID=Europe/London:20251025T142823
DTSTART;TZID=Europe/London:20131113T110000
DTEND;TZID=Europe/London:20131113T120000
LOCATION:LT1310
SUMMARY:Continuation Passing Style
DESCRIPTION:Speaker: Guillaume Allais (MSP)\nTitle: Continuation Passing
  Style\n\nI chose to go through (parts of) Hatcliff and Danvy's paper "A
  Generic Account of Continuation-Passing Styles"
  (http://dl.acm.org/citation.cfm?id=178053) (POPL 94) which gives a nice
  factorization of various CPS transforms in terms of: \n * embeddings from
  STLC to Moggi's computational meta-language (either call-by-value\,
  call-by-name\, or whatever you can come up with)\n * followed by a
  generic CPS transform transporting terms from ML back to STLC\n Here is
  an Agda file (http://gallais.org/code/GenericCPS/definitions.html)
  containing what we had the time to see.\n
UID:0
END:VEVENT
END:VCALENDAR
